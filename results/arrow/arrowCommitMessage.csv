"ARROW-4274: [C++][Gandiva] split decimal into two parts

Author: Pindikura Ravindra <ravindra@dremio.com>
Author: Antoine Pitrou <antoine@python.org>

Closes #3414 from pravindra/split and squashes the following commits:

c96fbbfe <Antoine Pitrou> Try to fix MSVC compile failure
ed7e110c <Antoine Pitrou> Try to use newer Sphinx and breathe versions when building the docs
2c0d870a <Pindikura Ravindra> ARROW-4274: Fix doxygen error
e2de415f <Pindikura Ravindra> ARROW-4274: Add empty constructor for older compilers
42549b0f <Pindikura Ravindra> ARROW-4274: Address review comments
49d79333 <Pindikura Ravindra> ARROW-4274: Misc cleanups in header files
18050f8d <Pindikura Ravindra> ARROW-4274: split decimal into two parts"
"ARROW-4714: [C++][JAVA] Providing JNI interface to Read ORC file via Arrow C++

- setup necessary dev environment for JNI development on JAVA and C++ codebase
- implemented JNI interface to enable reading arrow record batch from ORC files
- implemented a naive arrow buffer reference manager to ensure c++ memory release

Author: Yurui Zhou <yurui.zyr@alibaba-inc.com>

Closes #4348 from yuruiz/JniOrcReader and squashes the following commits:

41592bf04 <Yurui Zhou> minor doc fix
44b54203b <Yurui Zhou> make sure lookup operation are performed under lock
706c8dcd5 <Yurui Zhou> resolve comments
de8529cf1 <Yurui Zhou> resolve comments
fc801756d <Yurui Zhou> resolve comments
9b04b762d <Yurui Zhou> fix style issues and add proper docs
9b13d7f62 <Yurui Zhou> replace nullptr with NULLPTR macro
dd981af5f <Yurui Zhou> fix lint and clang-format
44505df5d <Yurui Zhou> Fix cmake format
f2a0c04b8 <Yurui Zhou> destruct schema reader when finish reading
4f89e3454 <Yurui Zhou> Make sure resources are properly released.
26d74db82 <Yurui Zhou> fix minor style check error
ce30933b1 <Yurui Zhou> Add Arrow Jni Reader Unittests
7a80fbd0d <Yurui Zhou> Minor refactor
e4c063041 <Yurui Zhou> remove redundant code
e932aa8b1 <Yurui Zhou> Move jni code to src/jni and change build flag to arrow_jni
1b6a7042a <Yurui Zhou> Interface refactor and performance optimization
3604c24d3 <Yurui Zhou> Resolve merge conflicts
1c0e0b2a5 <Yurui Zhou> Fix minor build errors
e0d9c1f29 <Yurui Zhou> implement JNI interface on both size
a1e80a6dd <Yurui Zhou> Add arrow-orc setup"
"ARROW-3701: [Gandiva] add op for decimal 128

The code changes are complete. However, the perf in the non-fast code path is slow - I'll debug and fix that.

Author: Pindikura Ravindra <ravindra@dremio.com>
Author: praveenbingo <praveen@dremio.com>

Closes #2942 from pravindra/decimal2 and squashes the following commits:

0f7e78a76 <Pindikura Ravindra> ARROW-3701:  off gandiva tests in py 2.7
613524602 <Pindikura Ravindra> ARROW-3701:  fix format error
c0fddfbc6 <Pindikura Ravindra> ARROW-3701:  fix python unresolved symbol
db8581162 <Pindikura Ravindra> ARROW-3701:  added a comment regarding structs.
194c4377a <Pindikura Ravindra> ARROW-3701:  revert surefire version
5d07b79e2 <Pindikura Ravindra> ARROW-3701:  Address review comments
36691c1c7 <Pindikura Ravindra> ARROW-3701:  add benchmark for large decimals
75f7ac9d4 <Pindikura Ravindra> ARROW-3701:  misc cleanups
59db4603d <Pindikura Ravindra> ARROW-3701:  Fix java checkstyle issue
8a227ec9c <Pindikura Ravindra> ARROW-3701:  Workaround for jni JIT issue
9cbd4ab59 <Pindikura Ravindra> ARROW-3701:  switch to surefire 2.19 for dbg
ecaff4631 <Pindikura Ravindra> ARROW-3701:  Enable decimal tests
54a210511 <praveenbingo> ARROW-3701:  Support for decimal literal and null
b76a3ec1b <Pindikura Ravindra> ARROW-3701:  First decimal function"
"ARROW-5892 : [C++][Gandiva] Support function aliases

Access precompiled functions with different names.

Author: Prudhvi Porandla <prudhvi.porandla@icloud.com>
Author: pprudhvi <30983614+pprudhvi@users.noreply.github.com>

Closes #4835 from pprudhvi/func-aliases and squashes the following commits:

39bc74f94 <Prudhvi Porandla> enclose in parens only when required
a5ad80efa <Prudhvi Porandla> lint
8eb9cc19a <Prudhvi Porandla> do not pass initializer list through macros directly
430b97fcc <Prudhvi Porandla> refactor: make aliases const-ref, use gmock matcher
727bbd055 <pprudhvi> Merge branch 'master' into func-aliases
0610288cd <Prudhvi Porandla> add base name at front. add get_all_signatures method in glib
0376231ed <Prudhvi Porandla> add java test, rename iterator pointer names
e0d02b1a0 <Prudhvi Porandla> use nullptr instead of NULLPTR
35407031f <Prudhvi Porandla> use native funciton's last func signature in glib
ee2ef21e0 <Prudhvi Porandla> refactor: descriptive member names in func_registry
61c29a214 <Prudhvi Porandla> add aliases to truncate, divide, mod
090b6a7eb <Prudhvi Porandla> support function aliases"
"ARROW-5818: [Java][Gandiva] support varlen output vectors

callback to java for resizing varlen vectors

Author: Pindikura Ravindra <ravindra@dremio.com>

Closes #4771 from pravindra/jvarlen and squashes the following commits:

d9954e865 <Pindikura Ravindra> add check for null expander
b710a7792 <Pindikura Ravindra> ARROW-5818:  support varlen output vectors"
"[Gandiva] Add java bindings for filter expr 

* Add java bindings for filter expr
* Mv selection vector impl to internal"
"ARROW-5637: [Java][C++][Gandiva] Complete In Expression Support

Complete the java and jni bindings for In expression.

Author: Praveen <praveen@dremio.com>

Closes #4662 from praveenbingo/in-expr and squashes the following commits:

82e1d3456 <Praveen> Fix lint issues.
ce51188a6 <Praveen> Fix review comments.
d204f0d57 <Praveen> Address Review comments.
7722fa59a <Praveen> Fixed lint issues.
d2c448cc0 <Praveen> Complete In Expression Support."
"ARROW-4205: [Gandiva] Support for decimal multiply

- fastpath : safe multiply the two values (when result precision is < 38)
- if large values, convert to 256-bit (boost), multiply and then, scale down
- avoid converting to 256-bit wherever possible
- track overflow (TODO: generate errors on overflow)

Author: Pindikura Ravindra <ravindra@dremio.com>

Closes #3745 from pravindra/gmult and squashes the following commits:

85e1e9dc <Pindikura Ravindra> ARROW-4205: fix typo
cbbfd346 <Pindikura Ravindra> ARROW-4205: fix manylinux build
d290c34e <Pindikura Ravindra> ARROW-4205: fix lint issues
52671696 <Pindikura Ravindra> ARROW-4205:  Address review comments
53015a10 <Pindikura Ravindra> ARROW-4205:  minor fixes
f39d075e <Pindikura Ravindra> ARROW-4205:  move boost using fns to cpp.
b8483e6c <Pindikura Ravindra> ARROW-4205:  Add java test
ad5f4c1a <Pindikura Ravindra> ARROW-4205:  Add to registry
c26cc261 <Pindikura Ravindra> ARROW-4205:  add unit tests
2db30b7a <Pindikura Ravindra> ARROW-4205:  Support for decimal multiply"
"ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa

support `castVARCHAR(decimal, out_str_len)`, `castDECIMAL(string, out_precision, out_scale)` functions in Gandiva

Author: Prudhvi Porandla <prudhvi.porandla@icloud.com>

Closes #4803 from pprudhvi/decimal-varchar and squashes the following commits:

72f479f95 <Prudhvi Porandla> assert status
a222ef28c <Prudhvi Porandla> set error in context if string is invalid decimal
b4eecbc61 <Prudhvi Porandla> lint
dd6ba7cc8 <Prudhvi Porandla> return ""-"" instead of ""0"" for negative numbers when out_len is 1
c013a1581 <Prudhvi Porandla> revert arrow version change
bf6106d8f <Prudhvi Porandla> lint
a6ac92b9e <Prudhvi Porandla> lint
19bfb5fac <Prudhvi Porandla> cast size_t to int32_t
c14dc74f9 <Prudhvi Porandla> temp fix - change arrow version to 0.x*
428e87029 <Prudhvi Porandla> lint
9d94c4972 <Prudhvi Porandla> do toString, FromString in gdv function stubs
727c5d72d <Prudhvi Porandla> implement cast decimal<->varchar in decimal wrapper"
"ARROW-1163: [Java] Java client support for plasma

--------------------------
This commit includes the support of java client for plasma, which is part of the java worker support of Ray.
In addition to some minor changes in build system, it consists of the following modules:
 - java/plasma: java client support for plasma
 - cpp/src/plasma/lib/java: JNI support for plasma client
 - java/plasma/Readme.md: Readme.md for help document
 - java/plasma/test.sh: test.sh for test

Author: salah-man <salah.liuyj@antfin.com>
Author: Philipp Moritz <pcmoritz@gmail.com>
Author: salah <salah.liuyj@antfin.com>

Closes #2065 from salah-man/java_lib and squashes the following commits:

be067e83 <salah-man> add the test case of contains and hash of plasma java client
b7f5e94f <salah-man> fix ci lint error
80e9580f <salah-man> small change for feedback
b745465c <salah-man> fix the problems after the feedback
52b26e74 <Philipp Moritz> Google C++ convention
2f3f129b <Philipp Moritz> cleanups
1c327a79 <salah-man> add ci of plasma java client
14393f5f <salah-man> fix the ci problem
3e9ba0db <salah-man> Changes for the feedback from pr -------------------------- It consists of the following changes:  add java/plasma/README.md for help document  add java/plasma/test.sh for plasma java client test case  fix some ci error  delete the useless parameters of connect api from jni
9da40d02 <salah-man> Delete the ObjectId.java and ObjectBuffer.java, change the input and output of plasma java client api from custem type to byte
87ba3b98 <salah> Java client support for plasma -------------------------- This commit includes the support of java client for plasma, which is part of the java worker support of Ray. In addition to some minor changes in build system, it consists of the following modules:  - java/plasma: java client support for plasma  - cpp/src/plasma/lib/java: JNI support for plasma client"
"ARROW-4610: [Plasma] Avoid Crash in Plasma Java Client

This PR removes all `ARROW_CHECK` from the JNI code to avoid Java client from crashing. The Java client will throw exception instead. For one thing, it is better to throw exceptions from the lower part and let the upper user to decide how to handle it. For another, JVM should not crash at all times and there are a lot of JVM core dump files when we are doing some failover tests by killing Plasma Server.

Author: Yuhong Guo <yuhong.gyh@antfin.com>

Closes #3682 from guoyuhong/removeCheckFromJNI and squashes the following commits:

3cbb4e3d9 <Yuhong Guo> Add Plasma Client Java test
52c52bdd3 <Yuhong Guo> Avoid Crash in Plasma Java Client"
"[Gandiva] Modify as per arrow code base.

Change-Id: I77d796da9558fab13127e533be14be9a01978068"
"[Gandiva] Caching projectors and filters for re-use. 

Introducing a cache to hold the projectors and filters for re-use.
The cache is a LRU that can hold 100 entries."
"[Gandiva] Export supported types from Gandiva.  

Exporting supported data types and functions from Gandiva.
Added a JNI bridge to access this from the java layer."
"ARROW-8393: [C++][Gandiva] Make gandiva function registry case-insensitive

Closes #6891 from projjal/case_insensitive

Authored-by: Projjal Chanda <iam@pchanda.com>
Signed-off-by: Neal Richardson <neal.p.richardson@gmail.com>"
"ARROW-5701: [C++][Gandiva] Build expr with specific sv

- for long expressions, this reduces build time by 4x.

Author: Pindikura Ravindra <ravindra@dremio.com>

Closes #4667 from pravindra/arrow-5701 and squashes the following commits:

cc46d92b8 <Pindikura Ravindra> ARROW-5701:  Build expr with specific sv"
"ARROW-7335: [C++][Gandiva] Add day_time_interval functions: castBIGINT, extractDay

Function Signatures:
```
int64 castBIGINT(day_time_interval)
int64 extractDay(day_time_interval)
```

Closes #5980 from pprudhvi/dayinterval and squashes the following commits:

0ee77bbcb <Prudhvi Porandla> tabs to spaces in proto
47fa18509 <Prudhvi Porandla> make day_time_interval signed
1c9f63add <Prudhvi Porandla> handle negatives
c7d2ec382 <Prudhvi Porandla> fix switch-case, inline
12f6b5ef6 <Prudhvi Porandla> add projector test
96514036a <Prudhvi Porandla> interval day functions

Authored-by: Prudhvi Porandla <prudhvi.porandla@icloud.com>
Signed-off-by: Praveen <praveen@dremio.com>"
"ARROW-3511: [Gandiva] Link filter and project operations

This patch enables gandiva to link filter node to a project operator. We will be sending the selection vector populated from the filter to a project node so the project operation is performed only on the filtered positions.

Author: praveenkrishna <praveenkrishna@tutanota.com>

Closes #2789 from Praveen2112/ARROW-3511 and squashes the following commits:

ee347c63 <praveenkrishna> ARROW-3511:  Link filter and project operations"
"ARROW-3442: [C++] Allow dynamic linking of (most) unit tests

Use dynamic linking in preference for tests, as it reduces the disk footprint and probably makes linking faster too.

Author: Antoine Pitrou <antoine@python.org>
Author: Wes McKinney <wesm+git@apache.org>

Closes #2744 from pitrou/ARROW-3442-tests-linking-shared and squashes the following commits:

c783f851c <Antoine Pitrou> Remove obsolete comment
3ee4b3fc0 <Wes McKinney> Add re2 note about ARROW-3494
622e2a1f7 <Antoine Pitrou> Set LD_LIBRARY_PATH before testing Plasma Java client.
6876db8cd <Antoine Pitrou> ARROW-3442:  Allow dynamic linking of (most) unit tests"
"[Gandiva] Error handling support.

Added support for error handling and messaging in IR functions."
[Gandiva] add some minor functions required by tpch-h
"ARROW-3182: [Gandiva] Integrate gandiva to arrow build. Update licenses to apache license.

Fix clang-format, cpplint warnings, -Wconversion warnings and other warnings
with -DBUILD_WARNING_LEVEL=CHECKIN. Fix some build toolchain issues, Arrow
target dependencies. Remove some unused CMake code"
"ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva

Format timestamp to yyyy-MM-dd hh:mm:ss.sss

Closes #5014 from pprudhvi/timestamp-to-string and squashes the following commits:

3cfad34ba <Prudhvi Porandla> do not hardcode ts length
f1867e815 <Prudhvi Porandla> add java unittest
93c6bf490 <Prudhvi Porandla> use iomanip to format timestamp
35e74318a <Prudhvi Porandla> uset inttypes.h
c3ea53885 <Prudhvi Porandla> cast to long long int
1e389e2a6 <Prudhvi Porandla> use snprintf, return const char*
73c39f41e <Prudhvi Porandla> error message if out_len is negative
838947307 <Prudhvi Porandla> return empty string if out_len is zero
637562282 <Prudhvi Porandla> refactor
124b6dc34 <Prudhvi Porandla> correct castVarchar(timestamp) method

Authored-by: Prudhvi Porandla <prudhvi.porandla@icloud.com>
Signed-off-by: Pindikura Ravindra <ravindra@dremio.com>"
"[Gandiva] Dynamically load dependencies. 

Loading Gandiva dynamically in java bindings.
Packaging the dynamic library and byte code files in Gandiva JAR.
Introduced configuration object to customize Gandiva at runtime."
"ARROW-4372: [C++] Embed precompiled bitcode in the gandiva library

We were not running the pyarrow tests after installing the manylinux wheels, which can lead to uncaught issues, like: https://travis-ci.org/kszucs/crossbow/builds/484284104

Author: Krisztián Szűcs <szucs.krisztian@gmail.com>

Closes #3484 from kszucs/manylinux_tests and squashes the following commits:

3b1da30e <Krisztián Szűcs> use sudo
c573a564 <Krisztián Szűcs> use env variables insude the container
fd5e3fea <Krisztián Szűcs> use latest docker image tag
d5531d95 <Krisztián Szűcs> test imports inside the wheel container
1aa19f18 <Krisztián Szűcs> reenable travis builds
b3994962 <Krisztián Szűcs> test py27mu and py36m wheels
71233c7d <Krisztián Szűcs> test 2.7,16 wheel
2372f3d7 <Krisztián Szűcs> fix requirements path; disable other CI tests
3e4ec2a2 <Krisztián Szűcs> unterminated llvm:MemoryBuffer; fix check_import.py path
7c88d61b <Krisztián Szűcs> only build python 3.6 wheel
18c54883 <Krisztián Szűcs> install wheel from dist dir
0bb07a7e <Krisztián Szűcs> better bash split
54fc653b <Krisztián Szűcs> don't export
d3cb058b <Krisztián Szűcs> fix wheel building script
0d29b311 <Krisztián Szűcs> remove not existing resources from gandiva's pom
5d75adb4 <Krisztián Szűcs> initialize jni loader
09d829a4 <Krisztián Szűcs> build wheels for a single python distribution at a time; adjust travis and crossbow scripts
79abc0e8 <Krisztián Szűcs> mark .cc file as generated
af78be26 <Krisztián Szűcs> don't bundle irhelpers in the jar
a88cd370 <Krisztián Szűcs> cmake format
7deb3593 <Krisztián Szűcs> fix REGEX; remove byteCodeFilePath from java configuration object
fa195294 <Krisztián Szűcs> properly construct llvm:StringRef
5841dcdd <Krisztián Szűcs> remove commented code
42391b13 <Krisztián Szűcs> don't pass precompiled bitcode all around the constructors
d480c83c <Krisztián Szűcs> use const string ref for now
b0b11175 <Krisztián Szűcs> conda llvmdev
169f43ac <Krisztián Szűcs> build gandiva in cpp docker image
cb696251 <Krisztián Szűcs> silent maven download msgs
19200c30 <Krisztián Szűcs> don't run wheel tests twice; cmake format
f2205d01 <Krisztián Szűcs> gandiva jni
dbf5b1cf <Krisztián Szűcs> embed precompiled bitcode as char array; load precompiled IR from string
00d98e0d <Krisztián Szűcs> try to bundle bytecode files
97fe94b2 <Krisztián Szűcs> fix requirements-test.txt path
86e7e5bc <Krisztián Szűcs> run pyarrow tests in manylinux CI build"
"[Gandiva] Add a helper library containing cpp stubs 


- To get around the java load issue, create a native library and load it in the LLVM module. 
   This module has the hooks for all the c++ function helpers.
- for files that are compiled in libgandiva_helpers, add into  gandiva::helpers namespace.
- merged status.cc into status.h"
"ARROW-3472: [Gandiva] remove gandiva_helpers library

This change eliminates the gandiva_helpers library, which was needless duplication. Instead, the entry-points required for LLVM from gandiva are now added as a global-symbols at the time of engine startup.

Author: Pindikura Ravindra <ravindra@dremio.com>

Closes #2747 from pravindra/arrow-3472 and squashes the following commits:

8f16e6693 <Pindikura Ravindra> ARROW-3472:  add comment on dead-code pass
8ccb56f44 <Pindikura Ravindra> ARROW-3472:  registry for fns exported to LLVM
453ea4983 <Pindikura Ravindra> ARROW-3472:  remove gandiva_helpers lib"
"ARROW-3459: [C++][Gandiva] support for string o/p

- If the output vectors aren't provided, allow resizable
  data buffers.
- If the output vectors are provided, assert that the data
  buffer is resizeable.
- use a cpp function to write to string-like o/p buffers,
  this checks for capacity and updates the offset vector.

Author: Pindikura Ravindra <ravindra@dremio.com>

Closes #4760 from pravindra/varlen and squashes the following commits:

0068b6a07 <Pindikura Ravindra> ARROW-3459:  support for string o/p"
"ARROW-3607: [Java] delete() method via JNI for plasma

Exposed delete() method

Author: ShubhamChaurasia <shubh.chaurasia@gmail.com>

Closes #2829 from ShubhamChaurasia/ARROW-3607 and squashes the following commits:

b0e5951f <ShubhamChaurasia> ARROW-3607:  delete() method - fixed linting
b4000b16 <ShubhamChaurasia> ARROW-3607:  delete() method - fixed linting
28b6aaf1 <ShubhamChaurasia> ARROW-3607:  delete() method via JNI for plasma"
"ARROW-4015: [Plasma] remove unused interfaces for plasma manager

https://github.com/apache/arrow/issues/3154

This removes unused plasma interfaces Fetch(), Wait(), Transfer() and Info(), which depend on plasma manager which has already been removed from ray.

Author: Philipp Moritz <pcmoritz@gmail.com>
Author: Zhijun Fu <pingfu.fzj@antfin.com>
Author: Robert Nishihara <robertnishihara@gmail.com>

Closes #3167 from zhijunfu/remove-legacy-interfaces and squashes the following commits:

0efb5005f <Philipp Moritz> fix tensorflow op
be92e9085 <Philipp Moritz> fix java client
9da2cd38b <Philipp Moritz> Update _plasma.pyx
16ec63e9a <Robert Nishihara> More updates
e7413f739 <Robert Nishihara> Update _plasma.pyx
21398b5e7 <Zhijun Fu> merge
bcb320400 <Zhijun Fu> address comments
7967aea09 <Philipp Moritz> Merge branch 'master' into remove-legacy-interfaces
583cd97c4 <Zhijun Fu> ARROW-4015:  remove unused interfaces for plasma manager"
"ARROW-4583: [Plasma] Fix some small bugs reported by code scan tool

We used a static code scan tool to scan arrow code. There are several possible bugs:
1. The return value of `PyDict_SetItem` is not used.
2. Currently, `EventLoop:: Shutdown` should be called explicitly, which is error-prone and causing leak when the user forgets to call it.
3. There is an unclosed file descriptor in `io.cc` when path name is too long.

Besides, we also made the following small changes:
1. When we use Plasma in Yarn and when a node uses too much memory, a SIGTERM signal will be sent to Plasma. Current plasma will exit silently. We also some log to plasma store to help us to debug.
2. `ARROW_LOG` will always evaluate the output expression even when it is not enabled, which is not efficient.
3. The constructor of Java class `ObjectStoreData` is private, which is not convenient when we want to create a mock plasma store.
4. Fix a call to `ObjectStoreData` which misplaces `meta` and `data` according to https://github.com/apache/arrow/blob/master/java/plasma/src/main/java/org/apache/arrow/plasma/ObjectStoreLink.java#L32 .

Author: Yuhong Guo <yuhong.gyh@antfin.com>
Author: Antoine Pitrou <antoine@python.org>

Closes #3656 from guoyuhong/fixPlasma and squashes the following commits:

634e36a44 <Antoine Pitrou> Use default argument value to `ConvertPyError`
b547f2f5d <Yuhong Guo> remove if from ARROW_LOG
440f0975f <Yuhong Guo> Address comment
d3eb22ff8 <Yuhong Guo> Lint
79b4af3ae <Yuhong Guo> Fix and Lint
434a039d2 <Yuhong Guo> Make constructor of ObjectStoreData public
b2ddba6ce <Yuhong Guo> Fix misplace of meta and data in PlasmaClient.java
a66740258 <Yuhong Guo> Do not evaluate logging strings when logging is not enabled.
5be7b89ff <Yuhong Guo> Fix unclosed fd reported by code scan tool
3a917d41d <Yuhong Guo> Fix not used return value in deserialize.cc reported by code scan tool
ed56a4808 <Yuhong Guo> Fix possible unclosed EventLoop reported by code scanning tool
3fed9264a <Yuhong Guo> Add plasma log"
"[Gandiva] Add cpp/Java microbenchmarks

Added microbenchmarks in both cpp and Java"
"[Gandiva] Add support for sql regex functions 

- add a registry for ""function holders"" implemented in cpp
- the function holder is instantiated at expression decomposition time
- at eval time, the registered fn gets an extra param"
"[Gandiva] Executing TPCH queries. 


1. Added lock to holder read to address potential race condition.
2. Fixed log message.
3, Addressed breaking arrow change."
"[Gandiva] Fixed equality issue in validator.

Fixed equality issue in validator."
"[Gandiva] add a java perf test for filter

- removed some dcheck statements which were causing a perf issue
- modified other micro benchmarks to eval 1M records, and validate
  evaluated time."
"[Gandiva] Fixed filter bugs. 

Fixed some bugs in the filter code path."
"[Gandiva] Fixed concurrency issue in cache. 

[Gandiva] Fixed concurrency issue in cache.

Modifications were happening in get without a mutex.
Wrote a test to verify and prevent regression."
