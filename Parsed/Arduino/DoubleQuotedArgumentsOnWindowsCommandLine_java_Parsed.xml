<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/arduino-core/src/processing/app/tools/DoubleQuotedArgumentsOnWindowsCommandLine.java"><package>package <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>tools</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>exec</name><operator>.</operator><name>CommandLine</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>helpers</name><operator>.</operator><name>OSUtils</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>

<class><specifier>public</specifier> class <name>DoubleQuotedArgumentsOnWindowsCommandLine</name> <super_list><extends>extends <super><name>CommandLine</name></super></extends></super_list> <block>{

  <constructor><specifier>public</specifier> <name>DoubleQuotedArgumentsOnWindowsCommandLine</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>executable</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>executable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>DoubleQuotedArgumentsOnWindowsCommandLine</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>executable</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>executable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>DoubleQuotedArgumentsOnWindowsCommandLine</name><parameter_list>(<parameter><decl><type><name>CommandLine</name></type> <name>other</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>CommandLine</name></type> <name>addArgument</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>argument</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>handleQuoting</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// Brutal hack to workaround windows command line parsing.</comment>
    <comment type="line">// http://stackoverflow.com/questions/5969724/java-runtime-exec-fails-to-escape-characters-properly</comment>
    <comment type="line">// http://msdn.microsoft.com/en-us/library/a1y7w461.aspx</comment>
    <comment type="line">// http://bugs.sun.com/view_bug.do?bug_id=6468220</comment>
    <comment type="line">// http://bugs.sun.com/view_bug.do?bug_id=6518827</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>argument</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><literal type="string">"\""</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>OSUtils</name><operator>.</operator><name>isWindows</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>argument</name> <operator>=</operator> <call><name><name>argument</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"\""</literal></expr></argument>, <argument><expr><literal type="string">"\\\""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><call><name><name>super</name><operator>.</operator><name>addArgument</name></name><argument_list>(<argument><expr><name>argument</name></expr></argument>, <argument><expr><name>handleQuoting</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
</unit>
