<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/src/processing/app/forms/PasswordAuthorizationDialog.java"><package>package <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>forms</name></name>;</package>

<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>Base</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>Theme</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>ActionEvent</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>event</name><operator>.</operator><name>WindowEvent</name></name>;</import>

<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>tr</name></name>;</import>

<class><specifier>public</specifier> class <name>PasswordAuthorizationDialog</name> <super_list><extends>extends <super><name>JDialog</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>JPasswordField</name></type> <name>passwordField</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>cancelled</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>password</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>PasswordAuthorizationDialog</name><parameter_list>(<parameter><decl><type><name>Frame</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dialogText</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>cancelled</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>password</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>JLabel</name></type> <name>typePasswordLabel</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JLabel</name></type> <name>icon</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JLabel</name></type> <name>passwordLabel</name> <init>= <expr><operator>new</operator> <call><name>JLabel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>passwordField</name> <operator>=</operator> <operator>new</operator> <call><name>JPasswordField</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>JButton</name></type> <name>uploadButton</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JButton</name></type> <name>cancelButton</name> <init>= <expr><operator>new</operator> <call><name>JButton</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>setDefaultCloseOperation</name><argument_list>(<argument><expr><name><name>WindowConstants</name><operator>.</operator><name>DISPOSE_ON_CLOSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>typePasswordLabel</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>dialogText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>icon</name><operator>.</operator><name>setIcon</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ImageIcon</name><argument_list>(<argument><expr><call><name><name>Theme</name><operator>.</operator><name>getThemeResource</name></name><argument_list>(<argument><expr><literal type="string">"theme/lock.png"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUrl</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>passwordLabel</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Password:"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>passwordField</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>passwordField</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><name><name>PasswordAuthorizationDialog</name><operator>.</operator><name>this</name></name><operator>::</operator><name>uploadButtonPressed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>uploadButton</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Upload"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>uploadButton</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><name><name>PasswordAuthorizationDialog</name><operator>.</operator><name>this</name></name><operator>::</operator><name>uploadButtonPressed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>cancelButton</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Cancel"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cancelButton</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><name><name>PasswordAuthorizationDialog</name><operator>.</operator><name>this</name></name><operator>::</operator><name>cancelButtonPressed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>Base</name><operator>.</operator><name>registerWindowCloseKeys</name></name><argument_list>(<argument><expr><call><name>getRootPane</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name><operator>::</operator><name>cancelButtonPressed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>GroupLayout</name></type> <name>layout</name> <init>= <expr><operator>new</operator> <call><name>GroupLayout</name><argument_list>(<argument><expr><call><name>getContentPane</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>getContentPane</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setLayout</name><argument_list>(<argument><expr><name>layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>.</operator><name>setHorizontalGroup</name></name><argument_list>(
      <argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>LEADING</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>icon</name></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>, <argument><expr><literal type="number">66</literal></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addPreferredGap</name><argument_list>(<argument><expr><name><name>LayoutStyle</name><operator>.</operator><name>ComponentPlacement</name><operator>.</operator><name>RELATED</name></name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>LEADING</name></name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>typePasswordLabel</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
              <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>passwordLabel</name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addPreferredGap</name><argument_list>(<argument><expr><name><name>LayoutStyle</name><operator>.</operator><name>ComponentPlacement</name><operator>.</operator><name>RELATED</name></name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>passwordField</name></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>DEFAULT_SIZE</name></name></expr></argument>, <argument><expr><name><name>Short</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>TRAILING</name></name></expr></argument>, <argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>DEFAULT_SIZE</name></name></expr></argument>, <argument><expr><name><name>Short</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>cancelButton</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addPreferredGap</name><argument_list>(<argument><expr><name><name>LayoutStyle</name><operator>.</operator><name>ComponentPlacement</name><operator>.</operator><name>RELATED</name></name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>uploadButton</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>.</operator><name>setVerticalGroup</name></name><argument_list>(
      <argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>LEADING</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>typePasswordLabel</name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>LEADING</name></name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
              <operator>.</operator><call><name>addGap</name><argument_list>(<argument><expr><literal type="number">53</literal></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>BASELINE</name></name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>passwordLabel</name></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>passwordField</name></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>DEFAULT_SIZE</name></name></expr></argument>, <argument><expr><name><name>GroupLayout</name><operator>.</operator><name>PREFERRED_SIZE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addGap</name><argument_list>(<argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>TRAILING</name></name></expr></argument>, <argument><expr><call><name><name>layout</name><operator>.</operator><name>createSequentialGroup</name></name><argument_list>()</argument_list></call>
              <operator>.</operator><call><name>addPreferredGap</name><argument_list>(<argument><expr><name><name>LayoutStyle</name><operator>.</operator><name>ComponentPlacement</name><operator>.</operator><name>RELATED</name></name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call>
              <operator>.</operator><call><name>addGap</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addGroup</name><argument_list>(<argument><expr><call><name><name>layout</name><operator>.</operator><name>createParallelGroup</name></name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>Alignment</name><operator>.</operator><name>BASELINE</name></name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>uploadButton</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addComponent</name><argument_list>(<argument><expr><name>cancelButton</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>addContainerGap</name><argument_list>(<argument><expr><name><name>GroupLayout</name><operator>.</operator><name>DEFAULT_SIZE</name></name></expr></argument>, <argument><expr><name><name>Short</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>pack</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>cancelButtonPressed</name><parameter_list>(<parameter><decl><type><name>ActionEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>cancelled</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>dispatchEvent</name><argument_list>(<argument><expr><operator>new</operator> <call><name>WindowEvent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>WindowEvent</name><operator>.</operator><name>WINDOW_CLOSING</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>uploadButtonPressed</name><parameter_list>(<parameter><decl><type><name>ActionEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>password</name></name> <operator>=</operator> <operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><call><name><name>passwordField</name><operator>.</operator><name>getPassword</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>dispatchEvent</name><argument_list>(<argument><expr><operator>new</operator> <call><name>WindowEvent</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>WindowEvent</name><operator>.</operator><name>WINDOW_CLOSING</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getPassword</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>this</name><operator>.</operator><name>password</name></name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isCancelled</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>cancelled</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
</unit>
