<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>

<package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>packages</name><operator>.</operator><name>ui</name></name>;</package>

<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>DownloadableContribution</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>packages</name><operator>.</operator><name>ContributedPlatform</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>packages</name><operator>.</operator><name>ContributionInstaller</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>utils</name><operator>.</operator><name>Progress</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>BaseNoGui</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>table</name><operator>.</operator><name>TableCellRenderer</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>tr</name></name>;</import>

<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>ContributionManagerUI</name> <super_list><extends>extends <super><name>InstallerJDialog</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ContributionInstaller</name></type> <name>installer</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>FilteredAbstractTableModel</name></type> <name>createContribModel</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>ContributionIndexTableModel</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>ContributionIndexTableModel</name></type> <name>getContribModel</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>(</operator><name>ContributionIndexTableModel</name><operator>)</operator> <name>contribModel</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>TableCellRenderer</name></type> <name>createCellRenderer</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>ContributedPlatformTableCellRenderer</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>InstallerTableCell</name></type> <name>createCellEditor</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <class><super><name>ContributedPlatformTableCellEditor</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>protected</specifier> <name>void</name></type> <name>onInstall</name><parameter_list>(<parameter><decl><type><name>ContributedPlatform</name></type> <name>selected</name></decl></parameter>,
                               <parameter><decl><type><name>ContributedPlatform</name></type> <name>installed</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>selected</name><operator>.</operator><name>isBuiltIn</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>onRemovePressed</name><argument_list>(<argument><expr><name>installed</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name>onInstallPressed</name><argument_list>(<argument><expr><name>selected</name></expr></argument>, <argument><expr><name>installed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>protected</specifier> <name>void</name></type> <name>onRemove</name><parameter_list>(<parameter><decl><type><name>ContributedPlatform</name></type> <name>installedPlatform</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>onRemovePressed</name><argument_list>(<argument><expr><name>installedPlatform</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
    }</block></class></expr>;</return>
  </block_content>}</block></function>

  <constructor><specifier>public</specifier> <name>ContributionManagerUI</name><parameter_list>(<parameter><decl><type><name>Frame</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>ContributionInstaller</name></type> <name>installer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Boards Manager"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Dialog</name><operator>.</operator><name>ModalityType</name><operator>.</operator><name>APPLICATION_MODAL</name></name></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Unable to reach Arduino.cc due to possible network issues."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>installer</name></name> <operator>=</operator> <name>installer</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>updateUI</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>DropdownItem</name><argument_list type="generic">&lt;<argument><name>DownloadableContribution</name></argument>&gt;</argument_list></name></type> <name>previouslySelectedCategory</name> <init>= <expr><operator>(</operator><name><name>DropdownItem</name><argument_list type="generic">&lt;<argument><name>DownloadableContribution</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>categoryChooser</name>
        <operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>removeActionListener</name></name><argument_list>(<argument><expr><name>categoryChooserActionListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>filterField</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><call><name>getContribModel</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRowCount</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><name>categoryChooserActionListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Enable categories combo only if there are two or more choices</comment>
    <expr_stmt><expr><name>categoryFilter</name> <operator>=</operator> <lambda><parameter_list type="pseudo"><parameter><decl><name>x</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><literal type="boolean">true</literal></expr></block_content></block></lambda></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>removeAllItems</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DropdownAllCoresItem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DropdownUpdatableCoresItem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>categories</name> <init>= <expr><call><name><name>BaseNoGui</name><operator>.</operator><name>indexer</name><operator>.</operator><name>getCategories</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>s</name> <range>: <expr><name>categories</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DropdownCoreOfCategoryItem</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if <condition>(<expr><name>previouslySelectedCategory</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>setSelectedItem</name></name><argument_list>(<argument><expr><name>previouslySelectedCategory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>categoryChooser</name><operator>.</operator><name>setSelectedIndex</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setProgress</name><parameter_list>(<parameter><decl><type><name>Progress</name></type> <name>progress</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>progressBar</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><name>progress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block">/*
   * Installer methods follows
   */</comment>

  <decl_stmt><decl><type><specifier>private</specifier> <name>Thread</name></type> <name>installerThread</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>onCancelPressed</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onCancelPressed</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>installerThread</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>interrupt</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>onUpdatePressed</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>onUpdatePressed</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>installerThread</name> <operator>=</operator> <operator>new</operator> <call><name>Thread</name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>downloadedPackageIndexFiles</name> <init>= <expr><call><name><name>installer</name>
            <operator>.</operator><name>updateIndex</name></name><argument_list>(<argument><expr><name>this</name><operator>::</operator><name>setProgress</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>installer</name><operator>.</operator><name>deleteUnknownFiles</name></name><argument_list>(<argument><expr><name>downloadedPackageIndexFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onIndexesUpdated</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch> <finally>finally <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></finally></try>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><literal type="string">"ContributionManager Update Thread"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name>
        <operator>.</operator><name>setUncaughtExceptionHandler</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InstallerJDialogUncaughtExceptionHandler</name><argument_list>(
            <argument><expr><name>this</name></expr></argument>, <argument><expr><name>noConnectionErrorMessage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>onInstallPressed</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>ContributedPlatform</name></type> <name>platformToInstall</name></decl></parameter>,
                               <parameter><decl><type><specifier>final</specifier> <name>ContributedPlatform</name></type> <name>platformToRemove</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>clearErrorMessage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>installerThread</name> <operator>=</operator> <operator>new</operator> <call><name>Thread</name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>errors</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Installing..."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>platformToRemove</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>platformToRemove</name><operator>.</operator><name>isBuiltIn</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>errors</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>installer</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>platformToRemove</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>errors</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>installer</name><operator>.</operator><name>install</name></name><argument_list>(<argument><expr><name>platformToInstall</name></expr></argument>, <argument><expr><name>this</name><operator>::</operator><name>setProgress</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onIndexesUpdated</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch> <finally>finally <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>errors</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>setErrorMessage</name><argument_list>(<argument><expr><call><name><name>errors</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></finally></try>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><literal type="string">"ContributionManager Install Thread"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name>
        <operator>.</operator><name>setUncaughtExceptionHandler</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InstallerJDialogUncaughtExceptionHandler</name><argument_list>(
            <argument><expr><name>this</name></expr></argument>, <argument><expr><name>noConnectionErrorMessage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>onRemovePressed</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>ContributedPlatform</name></type> <name>platform</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>showWarning</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>clearErrorMessage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>showWarning</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>chosenOption</name> <init>= <expr><call><name><name>JOptionPane</name>
          <operator>.</operator><name>showConfirmDialog</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>,
                             <argument><expr><call><name><name>I18n</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Do you want to remove {0}?\nIf you do so you won't be able to use {0} any more."</literal></expr></argument>)</argument_list></call></expr></argument>,
                                         <argument><expr><call><name><name>platform</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                             <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please confirm boards deletion"</literal></expr></argument>)</argument_list></call></expr></argument>,
                             <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>YES_NO_OPTION</name></name></expr></argument>,
                             <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>QUESTION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>chosenOption</name> <operator>!=</operator> <name><name>JOptionPane</name><operator>.</operator><name>YES_OPTION</name></name></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>installerThread</name> <operator>=</operator> <operator>new</operator> <call><name>Thread</name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Removing..."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>installer</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>platform</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onIndexesUpdated</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch> <finally>finally <block>{<block_content>
        <expr_stmt><expr><call><name>setProgressVisible</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></finally></try>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><literal type="string">"ContributionManager Remove Thread"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name>
        <operator>.</operator><name>setUncaughtExceptionHandler</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InstallerJDialogUncaughtExceptionHandler</name><argument_list>(
            <argument><expr><name>this</name></expr></argument>, <argument><expr><name>noConnectionErrorMessage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installerThread</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Callback invoked when indexes are updated
   *
   * @throws Exception
   */</comment>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>onIndexesUpdated</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// Empty</comment>
  </block_content>}</block></function>

}</block></class>
</unit>
