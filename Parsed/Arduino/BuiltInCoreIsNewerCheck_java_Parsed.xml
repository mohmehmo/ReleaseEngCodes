<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/src/cc/arduino/contributions/BuiltInCoreIsNewerCheck.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>

<package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name></name>;</package>

<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>packages</name><operator>.</operator><name>ContributedPlatform</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>Base</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>BaseNoGui</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>PreferencesData</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Optional</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>stream</name><operator>.</operator><name>Collectors</name></name>;</import>

<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>tr</name></name>;</import>

<class><specifier>public</specifier> class <name>BuiltInCoreIsNewerCheck</name> <super_list><implements>implements <super><name>Runnable</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Base</name></type> <name>base</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>BuiltInCoreIsNewerCheck</name><parameter_list>(<parameter><decl><type><name>Base</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>builtInPackageIsNewerCheck</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>builtInPackageIsNewerCheck</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>PreferencesData</name><operator>.</operator><name>getInteger</name></name><argument_list>(<argument><expr><literal type="string">"builtin_platform_is_newer"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <name><name>BaseNoGui</name><operator>.</operator><name>REVISION</name></name></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ContributedPlatform</name></argument>&gt;</argument_list></name></type> <name>contributedPlatforms</name> <init>= <expr><call><name><name>BaseNoGui</name><operator>.</operator><name>indexer</name>
        <operator>.</operator><name>getPackages</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>stream</name><argument_list>()</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>map</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>pack</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>pack</name><operator>.</operator><name>getPlatforms</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>flatMap</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>platfs</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>platfs</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>collect</name><argument_list>(<argument><expr><call><name><name>Collectors</name><operator>.</operator><name>toList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>ContributedPlatform</name></argument>&gt;</argument_list></name></type> <name>mayInstalledBuiltIn</name> <init>= <expr><call><name><name>contributedPlatforms</name>
        <operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>p</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>p</name><operator>.</operator><name>isInstalled</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>p</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>p</name><operator>.</operator><name>isBuiltIn</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call> <comment type="line">//</comment>
        <operator>.</operator><call><name>findFirst</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>mayInstalledBuiltIn</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ContributedPlatform</name></type> <name>installedBuiltIn</name> <init>= <expr><call><name><name>mayInstalledBuiltIn</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ContributedPlatform</name></type> <name>installedNotBuiltIn</name> <init>= <expr><call><name><name>BaseNoGui</name><operator>.</operator><name>indexer</name><operator>.</operator><name>getInstalled</name></name><argument_list>(<argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getParentPackage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getArchitecture</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>installedNotBuiltIn</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <while>while <condition>(<expr><operator>!</operator><call><name><name>base</name><operator>.</operator><name>hasActiveEditor</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <if_stmt><if>if <condition>(<expr><call><name><name>VersionComparator</name><operator>.</operator><name>greaterThan</name></name><argument_list>(<argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getParsedVersion</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>installedNotBuiltIn</name><operator>.</operator><name>getParsedVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>SwingUtilities</name><operator>.</operator><name>invokeLater</name></name><argument_list>(<argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
        <expr_stmt><expr><call><name><name>PreferencesData</name><operator>.</operator><name>setInteger</name></name><argument_list>(<argument><expr><literal type="string">"builtin_platform_is_newer"</literal></expr></argument>, <argument><expr><name><name>BaseNoGui</name><operator>.</operator><name>REVISION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <assert>assert <expr><call><name><name>base</name><operator>.</operator><name>hasActiveEditor</name></name><argument_list>()</argument_list></call></expr>;</assert>
        <decl_stmt><decl><type><name>int</name></type> <name>chosenOption</name> <init>= <expr><call><name><name>JOptionPane</name><operator>.</operator><name>showConfirmDialog</name></name><argument_list>(<argument><expr><call><name><name>base</name><operator>.</operator><name>getActiveEditor</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>I18n</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The IDE includes an updated {0} package, but you're using an older one.\nDo you want to upgrade {0}?"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>I18n</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"A newer {0} package is available"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>YES_NO_OPTION</name></name></expr></argument>, <argument><expr><name><name>JOptionPane</name><operator>.</operator><name>QUESTION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>chosenOption</name> <operator>==</operator> <name><name>JOptionPane</name><operator>.</operator><name>YES_OPTION</name></name></expr>)</condition> <block>{<block_content>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>base</name><operator>.</operator><name>openBoardsManager</name></name><argument_list>(<argument><expr><call><name><name>installedBuiltIn</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></catch></try>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
}</block></class>
</unit>
