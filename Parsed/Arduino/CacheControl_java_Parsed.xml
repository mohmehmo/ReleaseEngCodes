<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/arduino-core/src/cc/arduino/utils/network/CacheControl.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2019 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>


<package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>utils</name><operator>.</operator><name>network</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>

<class><specifier>public</specifier> class <name>CacheControl</name> <block>{


  <comment type="line">// see org.apache.abdera.protocol.util.CacheControlUtil</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Pattern</name></type> <name>PATTERN</name>
    <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"\\s*([\\w\\-]+)\\s*(=)?\\s*(\\-?\\d+|\\\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)+\\\")?\\s*"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>maxAge</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>isMustRevalidate</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>isNoCache</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>isNoStore</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>


  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>CacheControl</name></type> <name>valueOf</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>CacheControl</name></type> <name>cc</name> <init>= <expr><operator>new</operator> <call><name>CacheControl</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>value</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Matcher</name></type> <name>matcher</name> <init>= <expr><call><name><name>PATTERN</name><operator>.</operator><name>matcher</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><call><name><name>matcher</name><operator>.</operator><name>find</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <switch>switch <condition>(<expr><call><name><name>matcher</name><operator>.</operator><name>group</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <case>case <expr><literal type="string">"max-age"</literal></expr>:</case>
            <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setMaxAge</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>matcher</name><operator>.</operator><name>group</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
          <case>case <expr><literal type="string">"must-revalidate"</literal></expr>:</case>
            <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setMustRevalidate</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
          <case>case <expr><literal type="string">"no-cache"</literal></expr>:</case>
            <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setNoCache</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
          <case>case <expr><literal type="string">"no-store"</literal></expr>:</case>
            <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setNoStore</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
          <default>default:</default> <comment type="line">//ignore</comment>
        </block_content>}</block></switch>
      </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>cc</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setMaxAge</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>maxAge</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>maxAge</name></name> <operator>=</operator> <name>maxAge</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>int</name></type> <name>getMaxAge</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>maxAge</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isMustRevalidate</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>isMustRevalidate</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setMustRevalidate</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>mustRevalidate</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>isMustRevalidate</name> <operator>=</operator> <name>mustRevalidate</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isNoCache</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>isNoCache</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNoCache</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>noCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>isNoCache</name> <operator>=</operator> <name>noCache</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isNoStore</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>isNoStore</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNoStore</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>noStore</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>isNoStore</name> <operator>=</operator> <name>noStore</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"CacheControl{"</literal> <operator>+</operator>
      <literal type="string">"maxAge="</literal> <operator>+</operator> <name>maxAge</name> <operator>+</operator>
      <literal type="string">", isMustRevalidate="</literal> <operator>+</operator> <name>isMustRevalidate</name> <operator>+</operator>
      <literal type="string">", isNoCache="</literal> <operator>+</operator> <name>isNoCache</name> <operator>+</operator>
      <literal type="string">", isNoStore="</literal> <operator>+</operator> <name>isNoStore</name> <operator>+</operator>
      <literal type="char">'}'</literal></expr>;</return>
  </block_content>}</block></function>
}</block></class>
</unit>
