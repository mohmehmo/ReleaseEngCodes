<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/arduino-core/src/processing/app/helpers/filefilters/OnlyDirs.java"><comment type="block">/*
  OnlyDirs - FilenameFilter that accepts only directories (CVS, .svn, 
  .DS_Store files are excluded as well)
  Part of the Arduino project - http://www.arduino.cc/

  Copyright (c) 2011 Cristian Maglie

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */</comment>
<package>package <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>helpers</name><operator>.</operator><name>filefilters</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FilenameFilter</name></name>;</import>

<comment type="block" format="javadoc">/**
 * This filter accepts only directories (excluding .DS_Store files, .svn
 * folders, etc)
 * 
 * @author Cristian Maglie
 */</comment>
<class><specifier>public</specifier> class <name>OnlyDirs</name> <super_list><implements>implements <super><name>FilenameFilter</name></super></implements></super_list> <block>{

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>charAt</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="char">'.'</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"CVS"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isDirectory</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <comment type="block" format="javadoc">/**
   * An handy pre-instantiated object 
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>OnlyDirs</name></type> <name>ONLY_DIRS</name> <init>= <expr><operator>new</operator> <call><name>OnlyDirs</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  
}</block></class>
</unit>
