<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCellJPanel.java"><package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ui</name></name>;</package>

<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>format</name></name>;</import>
<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>tr</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Optional</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>border</name><operator>.</operator><name>EmptyBorder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>border</name><operator>.</operator><name>TitledBorder</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>event</name><operator>.</operator><name>HyperlinkEvent</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>text</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>text</name><operator>.</operator><name>html</name><operator>.</operator><name>HTMLDocument</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>text</name><operator>.</operator><name>html</name><operator>.</operator><name>StyleSheet</name></name>;</import>

<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>DownloadableContributionVersionComparator</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ContributedLibrary</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ContributedLibraryReleases</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>ui</name><operator>.</operator><name>InstallerTableCell</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>Base</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>PreferencesData</name></name>;</import>
<import>import <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>Theme</name></name>;</import>

<class><specifier>public</specifier> class <name>ContributedLibraryTableCellJPanel</name> <super_list><extends>extends <super><name>JPanel</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>final</specifier> <name>JButton</name></type> <name>moreInfoButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JButton</name></type> <name>installButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>Component</name></type> <name>installButtonPlaceholder</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JComboBox</name></type> <name>downgradeChooser</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JComboBox</name></type> <name>versionToInstallChooser</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JButton</name></type> <name>downgradeButton</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JPanel</name></type> <name>buttonsPanel</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JPanel</name></type> <name>inactiveButtonsPanel</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JLabel</name></type> <name>statusLabel</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>JTextPane</name></type> <name>description</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>moreInfoLbl</name> <init>= <expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"More info"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>ContributedLibraryTableCellJPanel</name><parameter_list>(<parameter><decl><type><name>JTable</name></type> <name>parentTable</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>value</name></decl></parameter>,
                                           <parameter><decl><type><name>boolean</name></type> <name>isSelected</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setLayout</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BoxLayout</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>BoxLayout</name><operator>.</operator><name>Y_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>moreInfoButton</name> <operator>=</operator> <operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><name>moreInfoLbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>moreInfoButton</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>installButton</name> <operator>=</operator> <operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Install"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>width</name> <init>= <expr><call><name><name>installButton</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><name>width</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>installButtonPlaceholder</name> <operator>=</operator> <call><name><name>Box</name><operator>.</operator><name>createRigidArea</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Dimension</name><argument_list>(<argument><expr><name>width</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>downgradeButton</name> <operator>=</operator> <operator>new</operator> <call><name>JButton</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Install"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>downgradeChooser</name> <operator>=</operator> <operator>new</operator> <call><name>JComboBox</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>downgradeChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>downgradeChooser</name><operator>.</operator><name>setMaximumSize</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Dimension</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>downgradeChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getWidth</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">50</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>downgradeChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHeight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>downgradeChooser</name><operator>.</operator><name>setMinimumSize</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Dimension</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>downgradeChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getWidth</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">50</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>downgradeChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHeight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>downgradeChooser</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>selectVersionItem</name> <init>= <expr><call><name><name>downgradeChooser</name><operator>.</operator><name>getItemAt</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>disableDowngrade</name> <init>= <expr><operator>(</operator><call><name><name>downgradeChooser</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>selectVersionItem</name><operator>)</operator></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>downgradeButton</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><operator>!</operator><name>disableDowngrade</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>disableDowngrade</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>InstallerTableCell</name><operator>.</operator><name>dropdownSelected</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>versionToInstallChooser</name> <operator>=</operator> <operator>new</operator> <call><name>JComboBox</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>versionToInstallChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>versionToInstallChooser</name>
        <operator>.</operator><name>setMaximumSize</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Dimension</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>versionToInstallChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getWidth</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">50</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>versionToInstallChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHeight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>versionToInstallChooser</name>
        <operator>.</operator><name>setMinimumSize</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Dimension</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>versionToInstallChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getWidth</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">50</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>versionToInstallChooser</name><operator>.</operator><name>getPreferredSize</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHeight</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>description</name> <operator>=</operator> <call><name>makeNewDescription</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>description</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>buttonsPanel</name> <operator>=</operator> <operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BoxLayout</name><argument_list>(<argument><expr><name>buttonsPanel</name></expr></argument>, <argument><expr><name><name>BoxLayout</name><operator>.</operator><name>X_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>setOpaque</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>PreferencesData</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"ide.accessible"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>moreInfoButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>downgradeChooser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>downgradeButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalGlue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>versionToInstallChooser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>installButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>buttonsPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>inactiveButtonsPanel</name> <operator>=</operator> <operator>new</operator> <call><name>JPanel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name>
        <operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BoxLayout</name><argument_list>(<argument><expr><name>inactiveButtonsPanel</name></expr></argument>, <argument><expr><name><name>BoxLayout</name><operator>.</operator><name>X_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>setOpaque</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>height</name> <init>= <expr><call><name><name>installButton</name><operator>.</operator><name>getMinimumSize</name></name><argument_list>()</argument_list></call><operator>.</operator><name>height</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createVerticalStrut</name></name><argument_list>(<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createGlue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>statusLabel</name> <operator>=</operator> <operator>new</operator> <call><name>JLabel</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>statusLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createHorizontalStrut</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><name>inactiveButtonsPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><call><name><name>Box</name><operator>.</operator><name>createVerticalStrut</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>ContributedLibraryReleases</name></type> <name>releases</name> <init>= <expr><operator>(</operator><name>ContributedLibraryReleases</name><operator>)</operator> <name>value</name></expr></init></decl>;</decl_stmt>

    <comment type="line">// FIXME: happens on macosx, don't know why</comment>
    <if_stmt><if>if <condition>(<expr><name>releases</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>ContributedLibrary</name></type> <name>selected</name> <init>= <expr><call><name><name>releases</name><operator>.</operator><name>getSelected</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>TitledBorder</name></type> <name>titledBorder</name> <init>= <expr><call><name><name>BorderFactory</name><operator>.</operator><name>createTitledBorder</name></name><argument_list>(<argument><expr><call><name><name>selected</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>titledBorder</name><operator>.</operator><name>setTitleFont</name></name><argument_list>(<argument><expr><call><name>getFont</name><argument_list>()</argument_list></call><operator>.</operator><call><name>deriveFont</name><argument_list>(<argument><expr><name><name>Font</name><operator>.</operator><name>BOLD</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setBorder</name><argument_list>(<argument><expr><name>titledBorder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>mayInstalled</name> <init>= <expr><call><name><name>releases</name><operator>.</operator><name>getInstalled</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>boolean</name></type> <name>installable</name></decl>, <decl><type ref="prev"/><name>upgradable</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>installable</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>upgradable</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>installable</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>upgradable</name> <operator>=</operator> <operator>new</operator> <call><name>DownloadableContributionVersionComparator</name><argument_list>()</argument_list></call>
          <operator>.</operator><call><name>compare</name><argument_list>(<argument><expr><name>selected</name></expr></argument>, <argument><expr><call><name><name>mayInstalled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>installable</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>installButton</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Install"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>upgradable</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>installButton</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Update"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>installButton</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>installable</name> <operator>||</operator> <name>upgradable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installButtonPlaceholder</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><operator>(</operator><name>installable</name> <operator>||</operator> <name>upgradable</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>selected</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>author</name> <init>= <expr><call><name><name>selected</name><operator>.</operator><name>getAuthor</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// String maintainer = selectedLib.getMaintainer();</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>website</name> <init>= <expr><call><name><name>selected</name><operator>.</operator><name>getWebsite</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>sentence</name> <init>= <expr><call><name><name>selected</name><operator>.</operator><name>getSentence</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>paragraph</name> <init>= <expr><call><name><name>selected</name><operator>.</operator><name>getParagraph</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// String availableVer = selectedLib.getVersion();</comment>
    <comment type="line">// String url = selected.getUrl();</comment>

    <decl_stmt><decl><type><name>String</name></type> <name>midcolor</name> <init>= <expr><ternary><condition><expr><name>isSelected</name></expr> ?</condition><then> <expr><literal type="string">"#000000"</literal></expr> </then><else>: <expr><literal type="string">"#888888"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>desc</name> <init>= <expr><literal type="string">"&lt;html&gt;&lt;body&gt;"</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// Library name...</comment>
<comment type="line">//    desc += format("&lt;b&gt;{0}&lt;/b&gt;", name);</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>mayInstalled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isIDEBuiltIn</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">" Built-In "</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// ...author...</comment>
    <expr_stmt><expr><name>desc</name> <operator>+=</operator> <call><name>format</name><argument_list>(<argument><expr><literal type="string">"&lt;font color=\"{0}\"&gt;"</literal></expr></argument>, <argument><expr><name>midcolor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>author</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>author</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>desc</name> <operator>+=</operator> <call><name>format</name><argument_list>(<argument><expr><literal type="string">" by &lt;b&gt;{0}&lt;/b&gt;"</literal></expr></argument>, <argument><expr><name>author</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// ...version.</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>installedVer</name> <init>= <expr><call><name><name>mayInstalled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParsedVersion</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>installedVer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">" "</literal> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Version unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">" "</literal> <operator>+</operator> <call><name>format</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Version &lt;b&gt;{0}&lt;/b&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>installedVer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">"&lt;/font&gt;"</literal></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">" &lt;strong&gt;&lt;font color=\"#00979D\"&gt;INSTALLED&lt;/font&gt;&lt;/strong&gt;"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">"&lt;br/&gt;"</literal></expr>;</expr_stmt>

    <comment type="line">// Description</comment>
    <if_stmt><if>if <condition>(<expr><name>sentence</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>desc</name> <operator>+=</operator> <call><name>format</name><argument_list>(<argument><expr><literal type="string">"&lt;b&gt;{0}&lt;/b&gt; "</literal></expr></argument>, <argument><expr><name>sentence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>paragraph</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>paragraph</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>desc</name> <operator>+=</operator> <call><name>format</name><argument_list>(<argument><expr><literal type="string">"{0}"</literal></expr></argument>, <argument><expr><name>paragraph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">"&lt;br /&gt;"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>author</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>author</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>desc</name> <operator>=</operator> <call><name>setButtonOrLink</name><argument_list>(<argument><expr><name>moreInfoButton</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>moreInfoLbl</name></expr></argument>, <argument><expr><name>website</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>desc</name> <operator>+=</operator> <literal type="string">"&lt;/body&gt;&lt;/html&gt;"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// copy description to accessibility context for screen readers to use</comment>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>getAccessibleContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAccessibleDescription</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// for modelToView to work, the text area has to be sized. It doesn't</comment>
    <comment type="line">// matter if it's visible or not.</comment>

    <comment type="line">// See:</comment>
    <comment type="line">// http://stackoverflow.com/questions/3081210/how-to-set-jtextarea-to-have-height-that-matches-the-size-of-a-text-it-contains</comment>
    <expr_stmt><expr><call><name><name>InstallerTableCell</name>
        <operator>.</operator><name>setJTextPaneDimensionToFitContainedText</name></name><argument_list>(<argument><expr><name>description</name></expr></argument>,
                                                 <argument><expr><call><name><name>parentTable</name><operator>.</operator><name>getBounds</name></name><argument_list>()</argument_list></call><operator>.</operator><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="line">// same function as in ContributedPlatformTableCellJPanel - is there a utils file this can move to?</comment>
  <function><type><specifier>private</specifier> <name>String</name></type> <name>setButtonOrLink</name><parameter_list>(<parameter><decl><type><name>JButton</name></type> <name>button</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>desc</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>label</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>url</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>boolean</name></type> <name>accessibleIDE</name> <init>= <expr><call><name><name>PreferencesData</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"ide.accessible"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>retString</name> <init>= <expr><name>desc</name></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>accessibleIDE</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
        <expr_stmt><expr><call><name><name>Base</name><operator>.</operator><name>openURL</name></name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else <block>{<block_content>
      <comment type="line">// if not accessible IDE, keep link the same EXCEPT that now the link text is translated!</comment>
      <expr_stmt><expr><name>retString</name> <operator>+=</operator> <call><name>format</name><argument_list>(<argument><expr><literal type="string">"&lt;a href=\"{0}\"&gt;{1}&lt;/a&gt;&lt;br/&gt;"</literal></expr></argument>, <argument><expr><name>url</name></expr></argument>, <argument><expr><name>label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><name>retString</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="line">// TODO Make this a method of Theme</comment>
  <function><type><specifier>private</specifier> <name>JTextPane</name></type> <name>makeNewDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>JTextPane</name></type> <name>description</name> <init>= <expr><operator>new</operator> <call><name>JTextPane</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setInheritsPopupMenu</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Insets</name></type> <name>margin</name> <init>= <expr><call><name><name>description</name><operator>.</operator><name>getMargin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>margin</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setMargin</name></name><argument_list>(<argument><expr><name>margin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setContentType</name></name><argument_list>(<argument><expr><literal type="string">"text/html"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><call><name><name>description</name><operator>.</operator><name>getDocument</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>instanceof</operator> <name>HTMLDocument</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>HTMLDocument</name></type> <name>html</name> <init>= <expr><operator>(</operator><name>HTMLDocument</name><operator>)</operator> <name>doc</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>StyleSheet</name></type> <name>s</name> <init>= <expr><call><name><name>html</name><operator>.</operator><name>getStyleSheet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>addRule</name></name><argument_list>(<argument><expr><literal type="string">"body { margin: 0; padding: 0;"</literal>
                <operator>+</operator> <literal type="string">"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;"</literal>
                <operator>+</operator> <literal type="string">"color: black;"</literal>
                <operator>+</operator> <literal type="string">"font-size: "</literal> <operator>+</operator> <literal type="number">10</literal> <operator>*</operator> <call><name><name>Theme</name><operator>.</operator><name>getScale</name></name><argument_list>()</argument_list></call> <operator>/</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="string">"; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setOpaque</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setBorder</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>EmptyBorder</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setHighlighter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setEditable</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>addHyperlinkListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>e</name><operator>.</operator><name>getEventType</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>HyperlinkEvent</name><operator>.</operator><name>EventType</name><operator>.</operator><name>ACTIVATED</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Base</name><operator>.</operator><name>openURL</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// description.addKeyListener(new DelegatingKeyListener(parentTable));</comment>
    <return>return <expr><name>description</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setButtonsVisible</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>enabled</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>installButton</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>buttonsPanel</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>inactiveButtonsPanel</name><operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setForeground</name><parameter_list>(<parameter><decl><type><name>Color</name></type> <name>c</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// The description is not opaque, so copy our foreground color to it.</comment>
    <if_stmt><if>if <condition>(<expr><name>description</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name><name>description</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
  </block_content>}</block></function>
}</block></class>
</unit>
