<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCellEditor.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>

<package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ui</name></name>;</package>

<import>import static <name><name>processing</name><operator>.</operator><name>app</name><operator>.</operator><name>I18n</name><operator>.</operator><name>tr</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Color</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Component</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Optional</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JComboBox</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>swing</name><operator>.</operator><name>JTable</name></name>;</import>

<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>DownloadableContributionVersionComparator</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>VersionComparator</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ContributedLibrary</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>libraries</name><operator>.</operator><name>ContributedLibraryReleases</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>contributions</name><operator>.</operator><name>ui</name><operator>.</operator><name>InstallerTableCell</name></name>;</import>
<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>utils</name><operator>.</operator><name>ReverseComparator</name></name>;</import>

<class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"serial"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>ContributedLibraryTableCellEditor</name> <super_list><extends>extends <super><name>InstallerTableCell</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>ContributedLibraryReleases</name></type> <name>editorValue</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>ContributedLibraryTableCellJPanel</name></type> <name>editorCell</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>getCellEditorValue</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>editorValue</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Component</name></type> <name>getTableCellEditorComponent</name><parameter_list>(<parameter><decl><type><name>JTable</name></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>value</name></decl></parameter>,
                                               <parameter><decl><type><name>boolean</name></type> <name>isSelected</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>row</name></decl></parameter>,
                                               <parameter><decl><type><name>int</name></type> <name>column</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>editorValue</name> <operator>=</operator> <operator>(</operator><name>ContributedLibraryReleases</name><operator>)</operator> <name>value</name></expr>;</expr_stmt>

    <expr_stmt><expr><name>editorCell</name> <operator>=</operator> <operator>new</operator> <call><name>ContributedLibraryTableCellJPanel</name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>installButton</name>
        <operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>onInstall</name><argument_list>(<argument><expr><call><name><name>editorValue</name><operator>.</operator><name>getSelected</name></name><argument_list>()</argument_list></call></expr></argument>,
                                          <argument><expr><call><name><name>editorValue</name><operator>.</operator><name>getInstalled</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>downgradeButton</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <decl_stmt><decl><type><name>JComboBox</name></type> <name>chooser</name> <init>= <expr><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>ContributedLibrary</name></type> <name>lib</name> <init>= <expr><operator>(</operator><name>ContributedLibrary</name><operator>)</operator> <call><name><name>chooser</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>onInstall</name><argument_list>(<argument><expr><name>lib</name></expr></argument>, <argument><expr><call><name><name>editorValue</name><operator>.</operator><name>getInstalled</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name><operator>.</operator><name>addActionListener</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>e</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <expr_stmt><expr><call><name><name>editorValue</name><operator>.</operator><name>select</name></name><argument_list>(<argument><expr><operator>(</operator><name>ContributedLibrary</name><operator>)</operator> <call><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name><operator>.</operator><name>getSelectedItem</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name><operator>.</operator><name>getSelectedIndex</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>InstallerTableCell</name><operator>.</operator><name>dropdownSelected</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>setEnabled</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>mayInstalled</name> <init>= <expr><call><name><name>editorValue</name><operator>.</operator><name>getInstalled</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>releases</name> <init>= <expr><call><name><name>editorValue</name><operator>.</operator><name>getReleases</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>notInstalled</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>releases</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>notInstalled</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>editorValue</name><operator>.</operator><name>getInstalled</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>notInstalled</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>ReverseComparator</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>DownloadableContributionVersionComparator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name><operator>.</operator><name>removeAllItems</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Select version"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>notInstalledPrevious</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>notInstalledNewer</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>notInstalled</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>input</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call>
          <operator>||</operator> <call><name><name>VersionComparator</name><operator>.</operator><name>greaterThan</name></name><argument_list>(<argument><expr><call><name><name>mayInstalled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>notInstalledPrevious</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>notInstalledNewer</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>notInstalledNewer</name><operator>.</operator><name>forEach</name></name><argument_list>(<argument><expr><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name></name><operator>::</operator><name>addItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>notInstalledPrevious</name><operator>.</operator><name>forEach</name></name><argument_list>(<argument><expr><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name></name><operator>::</operator><name>addItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>downgradeChooser</name>
        <operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call>
                    <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><call><name><name>notInstalledPrevious</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call>
                        <operator>||</operator> <call><name><name>notInstalledNewer</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>downgradeButton</name>
        <operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call>
                    <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><call><name><name>notInstalledPrevious</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call>
                        <operator>||</operator> <call><name><name>notInstalledNewer</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name><operator>.</operator><name>removeAllItems</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>notInstalled</name><operator>.</operator><name>forEach</name></name><argument_list>(<argument><expr><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name></name><operator>::</operator><name>addItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>versionToInstallChooser</name>
        <operator>.</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>mayInstalled</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>notInstalled</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>setForeground</name></name><argument_list>(<argument><expr><name><name>Color</name><operator>.</operator><name>BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>setBackground</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Color</name><argument_list>(<argument><expr><literal type="number">218</literal></expr></argument>, <argument><expr><literal type="number">227</literal></expr></argument>, <argument><expr><literal type="number">227</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// #dae3e3</comment>
    <return>return <expr><name>editorCell</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setEnabled</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>enabled</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>setButtonsVisible</name></name><argument_list>(<argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setStatus</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>status</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>editorCell</name><operator>.</operator><name>statusLabel</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>void</name></type> <name>onRemove</name><parameter_list>(<parameter><decl><type><name>ContributedLibrary</name></type> <name>selected</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// Empty</comment>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>void</name></type> <name>onInstall</name><parameter_list>(<parameter><decl><type><name>ContributedLibrary</name></type> <name>selected</name></decl></parameter>,
                           <parameter><decl><type><name><name>Optional</name><argument_list type="generic">&lt;<argument><name>ContributedLibrary</name></argument>&gt;</argument_list></name></type> <name>mayInstalled</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// Empty</comment>
  </block_content>}</block></function>

}</block></class>
</unit>
