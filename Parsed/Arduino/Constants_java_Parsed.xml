<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/arduino-core/src/cc/arduino/Constants.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>

<package>package <name><name>cc</name><operator>.</operator><name>arduino</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>Constants</name> <block>{

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_REMOVE_PLACEHOLDER</name> <init>= <expr><literal type="string">"___REMOVE___"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_BOARDS_MANAGER_ADDITIONAL_URLS</name> <init>= <expr><literal type="string">"boardsmanager.additional.urls"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_CONTRIBUTIONS_TRUST_ALL</name> <init>= <expr><literal type="string">"contributions.trust.all"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ALLOW_INSECURE_PACKAGES</name> <init>= <expr><literal type="string">"allow_insecure_packages"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DEFAULT_INDEX_FILE_NAME</name> <init>= <expr><literal type="string">"package_index.json"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>BUNDLED_INDEX_FILE_NAME</name> <init>= <expr><literal type="string">"package_index_bundled.json"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PROTECTED_PACKAGE_NAMES</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"arduino"</literal></expr></argument>, <argument><expr><literal type="string">"Intel"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LIBRARY_DEVELOPMENT_FLAG_FILE</name> <init>= <expr><literal type="string">".development"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>BOARDS_LIBS_UPDATABLE_CHECK_START_PERIOD</name> <init>= <expr><literal type="number">60000</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>NOTIFICATION_POPUP_AUTOCLOSE_DELAY</name> <init>= <expr><literal type="number">10000</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PROXY_TYPE_NONE</name> <init>= <expr><literal type="string">"none"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PROXY_TYPE_AUTO</name> <init>= <expr><literal type="string">"auto"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PROXY_TYPE_MANUAL</name> <init>= <expr><literal type="string">"manual"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PROXY_MANUAL_TYPE_HTTP</name> <init>= <expr><literal type="string">"HTTP"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PROXY_MANUAL_TYPE_SOCKS</name> <init>= <expr><literal type="string">"SOCKS"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_MANUAL_TYPE</name> <init>= <expr><literal type="string">"proxy.manual.type"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_TYPE</name> <init>= <expr><literal type="string">"proxy.type"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_PAC_URL</name> <init>= <expr><literal type="string">"proxy.pac.url"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_MANUAL_HOSTNAME</name> <init>= <expr><literal type="string">"proxy.manual.hostname"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_MANUAL_PORT</name> <init>= <expr><literal type="string">"proxy.manual.port"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_MANUAL_USERNAME</name> <init>= <expr><literal type="string">"proxy.manual.username"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_MANUAL_PASSWORD</name> <init>= <expr><literal type="string">"proxy.manual.password"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_AUTO_USERNAME</name> <init>= <expr><literal type="string">"proxy.manual.username"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PREF_PROXY_AUTO_PASSWORD</name> <init>= <expr><literal type="string">"proxy.manual.password"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PACKAGE_INDEX_URL</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LIBRARY_INDEX_URL</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LIBRARY_INDEX_URL_GZ</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>LIBRARY_CATEGORIES</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"Display"</literal></expr></argument>, <argument><expr><literal type="string">"Communication"</literal></expr></argument>, <argument><expr><literal type="string">"Signal Input/Output"</literal></expr></argument>, <argument><expr><literal type="string">"Sensors"</literal></expr></argument>, <argument><expr><literal type="string">"Device Control"</literal></expr></argument>, <argument><expr><literal type="string">"Timing"</literal></expr></argument>, <argument><expr><literal type="string">"Data Storage"</literal></expr></argument>, <argument><expr><literal type="string">"Data Processing"</literal></expr></argument>, <argument><expr><literal type="string">"Other"</literal></expr></argument>, <argument><expr><literal type="string">"Uncategorized"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>LIBRARY_MANDATORY_PROPERTIES</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><literal type="string">"author"</literal></expr></argument>, <argument><expr><literal type="string">"maintainer"</literal></expr></argument>, <argument><expr><literal type="string">"sentence"</literal></expr></argument>, <argument><expr><literal type="string">"paragraph"</literal></expr></argument>, <argument><expr><literal type="string">"url"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <static>static <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>extenalPackageIndexUrl</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"PACKAGE_INDEX_URL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>extenalPackageIndexUrl</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><literal type="string">""</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>extenalPackageIndexUrl</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>PACKAGE_INDEX_URL</name> <operator>=</operator> <name>extenalPackageIndexUrl</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>PACKAGE_INDEX_URL</name> <operator>=</operator> <literal type="string">"https://downloads.arduino.cc/packages/package_index.json"</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>externalLibraryIndexUrl</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"LIBRARY_INDEX_URL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>externalLibraryIndexUrl</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>externalLibraryIndexUrl</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>LIBRARY_INDEX_URL</name> <operator>=</operator> <name>externalLibraryIndexUrl</name></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>externalLibraryIndexUrlGz</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"LIBRARY_INDEX_URL_GZ"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>externalLibraryIndexUrlGz</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>externalLibraryIndexUrlGz</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>LIBRARY_INDEX_URL_GZ</name> <operator>=</operator> <name>externalLibraryIndexUrlGz</name></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>LIBRARY_INDEX_URL_GZ</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>LIBRARY_INDEX_URL</name> <operator>=</operator> <literal type="string">"https://downloads.arduino.cc/libraries/library_index.json"</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>LIBRARY_INDEX_URL_GZ</name> <operator>=</operator> <literal type="string">"https://downloads.arduino.cc/libraries/library_index.json.gz"</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></static>

}</block></class>
</unit>
