<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/app/test/cc/arduino/net/PACSupportMethodsTest.java"><package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>net</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>

<class><specifier>public</specifier> class <name>PACSupportMethodsTest</name> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>PACSupportMethods</name></type> <name>pacSupportMethods</name></decl>;</decl_stmt>

  <function><annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>pacSupportMethods</name> <operator>=</operator> <operator>new</operator> <call><name>PACSupportMethods</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testIsInNet</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"192.168.0.121"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.249.79"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.255.255"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"198.95.249.78"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.249.79"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.255.255"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"198.95.249.79"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.249.79"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.255.255"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"192.168.0.121"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.0.0"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.0.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"198.95.249.78"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.0.0"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.0.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>pacSupportMethods</name><operator>.</operator><name>isInNet</name></name><argument_list>(<argument><expr><literal type="string">"198.95.249.79"</literal></expr></argument>, <argument><expr><literal type="string">"198.95.0.0"</literal></expr></argument>, <argument><expr><literal type="string">"255.255.0.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
</unit>
