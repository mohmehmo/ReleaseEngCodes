<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/Arduino/app/testdata/libraries/Bridge_1.7.0/Bridge/src/BridgeSSLClient.cpp"><comment type="block">/*
  Copyright (c) 2016 Arduino LLC. All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;BridgeSSLClient.h&gt;</cpp:file></cpp:include>

<constructor><name><name>BridgeSSLClient</name><operator>::</operator><name>BridgeSSLClient</name></name><parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name>_h</name></decl></parameter>, <parameter><decl><type><name>BridgeClass</name> <modifier>&amp;</modifier></type><name>_b</name></decl></parameter>)</parameter_list> <member_init_list>: 
  <call><name>BridgeClient</name><argument_list>(<argument><expr><name>_h</name></expr></argument>, <argument><expr><name>_b</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
</block_content>}</block></constructor>

<constructor><name><name>BridgeSSLClient</name><operator>::</operator><name>BridgeSSLClient</name></name><parameter_list>(<parameter><decl><type><name>BridgeClass</name> <modifier>&amp;</modifier></type><name>_b</name></decl></parameter>)</parameter_list><member_init_list>: 
  <call><name>BridgeClient</name><argument_list>(<argument><expr><name>_b</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
</block_content>}</block></constructor>

<destructor><name><name>BridgeSSLClient</name><operator>::</operator><name>~BridgeSSLClient</name></name><parameter_list>()</parameter_list> <block>{<block_content>
</block_content>}</block></destructor>

<function><type><name>int</name></type> <name><name>BridgeSSLClient</name><operator>::</operator><name>connect</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name><name>BridgeClient</name><operator>::</operator><name>connectSSL</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function></unit>
