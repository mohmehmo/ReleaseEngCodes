<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/mmm/Projects/Arduino/arduino-core/src/cc/arduino/packages/ssh/SSHConfigFileSetup.java"><comment type="block">/*
 * This file is part of Arduino.
 *
 * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
 *
 * Arduino is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */</comment>

<package>package <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>packages</name><operator>.</operator><name>ssh</name></name>;</package>

<import>import <name><name>cc</name><operator>.</operator><name>arduino</name><operator>.</operator><name>packages</name><operator>.</operator><name>BoardPort</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>jcraft</name><operator>.</operator><name>jsch</name><operator>.</operator><name>*</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<class><specifier>public</specifier> class <name>SSHConfigFileSetup</name> <super_list><implements>implements <super><name>SSHClientSetupChainRing</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SSHClientSetupChainRing</name></type> <name>nextChainRing</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>SSHConfigFileSetup</name><parameter_list>(<parameter><decl><type><name>SSHClientSetupChainRing</name></type> <name>nextChainRing</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nextChainRing</name></name> <operator>=</operator> <name>nextChainRing</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Session</name></type> <name>setup</name><parameter_list>(<parameter><decl><type><name>BoardPort</name></type> <name>port</name></decl></parameter>, <parameter><decl><type><name>JSch</name></type> <name>jSch</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JSchException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>ipAddress</name> <init>= <expr><call><name><name>port</name><operator>.</operator><name>getAddress</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>File</name></type> <name>sshFolder</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"user.home"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">".ssh"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>sshConfig</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sshFolder</name></expr></argument>, <argument><expr><literal type="string">"config"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>sshFolder</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>||</operator> <operator>!</operator><call><name><name>sshConfig</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>nextChainRing</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>nextChainRing</name><operator>.</operator><name>setup</name></name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>jSch</name></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>JSchException</name><argument_list>(<argument><expr><literal type="string">"Unable to find a way to connect"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>OpenSSHConfig</name></type> <name>configRepository</name> <init>= <expr><call><name><name>OpenSSHConfig</name><operator>.</operator><name>parseFile</name></name><argument_list>(<argument><expr><call><name><name>sshConfig</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>jSch</name><operator>.</operator><name>setConfigRepository</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>OpenSSHConfigWrapper</name><argument_list>(<argument><expr><name>configRepository</name></expr></argument>, <argument><expr><name>ipAddress</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name><name>jSch</name><operator>.</operator><name>getSession</name></name><argument_list>(<argument><expr><name>ipAddress</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>OpenSSHConfigWrapper</name> <super_list><implements>implements <super><name>ConfigRepository</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>OpenSSHConfig</name></type> <name>config</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>ipAddress</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>OpenSSHConfigWrapper</name><parameter_list>(<parameter><decl><type><name>OpenSSHConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>ipAddress</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>config</name></name> <operator>=</operator> <name>config</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ipAddress</name></name> <operator>=</operator> <name>ipAddress</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Config</name></type> <name>getConfig</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>ConfigWrapper</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getConfig</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ipAddress</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>ConfigWrapper</name> <super_list><implements>implements <super><name><name>ConfigRepository</name><operator>.</operator><name>Config</name></name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>ConfigRepository</name><operator>.</operator><name>Config</name></name></type> <name>config</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>ipAddress</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>ConfigWrapper</name><parameter_list>(<parameter><decl><type><name><name>OpenSSHConfig</name><operator>.</operator><name>Config</name></name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>ipAddress</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>config</name></name> <operator>=</operator> <name>config</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ipAddress</name></name> <operator>=</operator> <name>ipAddress</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getHostname</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>ipAddress</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getUser</name><parameter_list>()</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>user</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>user</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>user</name></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><literal type="string">"root"</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>getPort</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>config</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getValue</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>config</name><operator>.</operator><name>getValue</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>String</name><index>[]</index></name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>config</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
</unit>
