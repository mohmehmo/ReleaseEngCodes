<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/daemon/common.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_COMMON_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_COMMON_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libnetdata/libnetdata.h"</cpp:file></cpp:include>

<comment type="line">// ----------------------------------------------------------------------------</comment>
<comment type="line">// shortcuts for the default netdata configuration</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_load</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>, <parameter><type><name>overwrite_used</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_load(&amp;netdata_config, filename, overwrite_used)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>default_value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get(&amp;netdata_config, section, name, default_value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get_number</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get_number(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get_float</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get_float(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get_boolean</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get_boolean(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get_boolean_ondemand</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get_boolean_ondemand(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_get_duration</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_get_duration(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_set</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>default_value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_set(&amp;netdata_config, section, name, default_value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_set_default</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_set_default(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_set_number</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_set_number(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_set_float</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_set_float(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_set_boolean</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_set_boolean(&amp;netdata_config, section, name, value)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_exists</name><parameter_list>(<parameter><type><name>section</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_exists(&amp;netdata_config, section, name)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_move</name><parameter_list>(<parameter><type><name>section_old</name></type></parameter>, <parameter><type><name>name_old</name></type></parameter>, <parameter><type><name>section_new</name></type></parameter>, <parameter><type><name>name_new</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_move(&amp;netdata_config, section_old, name_old, section_new, name_new)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>config_generate</name><parameter_list>(<parameter><type><name>buffer</name></type></parameter>, <parameter><type><name>only_changed</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>appconfig_generate(&amp;netdata_config, buffer, only_changed)</cpp:value></cpp:define>


<comment type="line">// ----------------------------------------------------------------------------</comment>
<comment type="line">// netdata include files</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global_statistics.h"</cpp:file></cpp:include>

<comment type="line">// the netdata database</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"database/rrd.h"</cpp:file></cpp:include>

<comment type="line">// the netdata webserver(s)</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"web/server/web_server.h"</cpp:file></cpp:include>

<comment type="line">// streaming metrics between netdata servers</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"streaming/rrdpush.h"</cpp:file></cpp:include>

<comment type="line">// health monitoring and alarm notifications</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"health/health.h"</cpp:file></cpp:include>

<comment type="line">// the netdata registry</comment>
<comment type="line">// the registry is actually an API feature</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry/registry.h"</cpp:file></cpp:include>

<comment type="line">// backends for archiving the metrics</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"backends/backends.h"</cpp:file></cpp:include>

<comment type="line">// the netdata API</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"web/api/web_api_v1.h"</cpp:file></cpp:include>

<comment type="line">// all data collection plugins</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"collectors/all.h"</cpp:file></cpp:include>

<comment type="line">// netdata unit tests</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"unit_test.h"</cpp:file></cpp:include>

<comment type="line">// the netdata deamon</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"daemon.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"main.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"signals.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"commands.h"</cpp:file></cpp:include>

<comment type="line">// global netdata daemon variables</comment>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_hostname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_user_config_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_stock_config_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_log_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_primary_plugins_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_web_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_cache_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_varlib_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_home_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_host_prefix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>netdata_configured_timezone</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_zero_metrics_enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_anonymous_statistics_enabled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>netdata_ready</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* NETDATA_COMMON_H */</comment>
</unit>
