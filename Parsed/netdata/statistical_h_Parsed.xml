<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/libnetdata/statistical/statistical.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_STATISTICAL_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_STATISTICAL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libnetdata.h"</cpp:file></cpp:include>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>log_series_to_stderr</name><parameter_list>(<parameter><decl><type><name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>calculated_number</name></type> <name>result</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>average</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>moving_average</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>period</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>median</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>moving_median</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>period</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>running_median_estimate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>standard_deviation</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>single_exponential_smoothing</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>alpha</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>single_exponential_smoothing_reverse</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>alpha</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>double_exponential_smoothing</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>alpha</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>beta</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>forecast</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>holtwinters</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>alpha</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>beta</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name></type> <name>gamma</name></decl></parameter>, <parameter><decl><type><name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>forecast</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>sum_and_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>count</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>sum</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name></type> <name>median_on_sorted_series</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>copy_series</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>sort_series</name><parameter_list>(<parameter><decl><type><name>LONG_DOUBLE</name> <modifier>*</modifier></type><name>series</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>entries</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_STATISTICAL_H</comment>
</unit>
