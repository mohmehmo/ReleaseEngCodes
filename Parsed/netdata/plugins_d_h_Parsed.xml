<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/collectors/plugins.d/plugins_d.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_PLUGINS_D_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_PLUGINS_D_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../daemon/common.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_PLUGIN_HOOK_PLUGINSD</name></cpp:macro> \
    <cpp:value>{ \
        .name = "PLUGINSD", \
        .config_section = NULL, \
        .config_name = NULL, \
        .enabled = 1, \
        .thread = NULL, \
        .init_routine = NULL, \
        .start_routine = pluginsd_main \
    },</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_FILE_SUFFIX</name></cpp:macro> <cpp:value>".plugin"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_FILE_SUFFIX_LEN</name></cpp:macro> <cpp:value>strlen(PLUGINSD_FILE_SUFFIX)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_CMD_MAX</name></cpp:macro> <cpp:value>(FILENAME_MAX*2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_STOCK_PLUGINS_DIRECTORY_PATH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_CHART</name></cpp:macro> <cpp:value>"CHART"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_DIMENSION</name></cpp:macro> <cpp:value>"DIMENSION"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_BEGIN</name></cpp:macro> <cpp:value>"BEGIN"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_END</name></cpp:macro> <cpp:value>"END"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_FLUSH</name></cpp:macro> <cpp:value>"FLUSH"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_DISABLE</name></cpp:macro> <cpp:value>"DISABLE"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_KEYWORD_VARIABLE</name></cpp:macro> <cpp:value>"VARIABLE"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_LINE_MAX</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_LINE_MAX_SSL_READ</name></cpp:macro> <cpp:value>512</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_MAX_WORDS</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINSD_MAX_DIRECTORIES</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name><name>plugin_directories</name><index>[<expr><name>PLUGINSD_MAX_DIRECTORIES</name></expr>]</index></name></decl>;</decl_stmt>

<struct>struct <name>plugind</name> <block>{
    <decl_stmt><decl><type><name>char</name></type> <name><name>id</name><index>[<expr><name>CONFIG_MAX_NAME</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>         <comment type="line">// config node id</comment>

    <decl_stmt><decl><type><name>char</name></type> <name><name>filename</name><index>[<expr><name>FILENAME_MAX</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>      <comment type="line">// just the filename</comment>
    <decl_stmt><decl><type><name>char</name></type> <name><name>fullfilename</name><index>[<expr><name>FILENAME_MAX</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="line">// with path</comment>
    <decl_stmt><decl><type><name>char</name></type> <name><name>cmd</name><index>[<expr><name>PLUGINSD_CMD_MAX</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>       <comment type="line">// the command that it executes</comment>

    <decl_stmt><decl><type><specifier>volatile</specifier> <name>pid_t</name></type> <name>pid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>netdata_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>size_t</name></type> <name>successful_collections</name></decl>;</decl_stmt>      <comment type="line">// the number of times we have seen</comment>
                                        <comment type="line">// values collected from this plugin</comment>

    <decl_stmt><decl><type><name>size_t</name></type> <name>serial_failures</name></decl>;</decl_stmt>             <comment type="line">// the number of times the plugin started</comment>
                                        <comment type="line">// without collecting values</comment>

    <decl_stmt><decl><type><name>int</name></type> <name>update_every</name></decl>;</decl_stmt>                   <comment type="line">// the plugin default data collection frequency</comment>
    <decl_stmt><decl><type><specifier>volatile</specifier> <name>sig_atomic_t</name></type> <name>obsolete</name></decl>;</decl_stmt>     <comment type="line">// do not touch this structure after setting this to 1</comment>
    <decl_stmt><decl><type><specifier>volatile</specifier> <name>sig_atomic_t</name></type> <name>enabled</name></decl>;</decl_stmt>      <comment type="line">// if this is enabled or not</comment>

    <decl_stmt><decl><type><name>time_t</name></type> <name>started_t</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>struct</name> <name>plugind</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>plugind</name></name> <modifier>*</modifier></type><name>pluginsd_root</name></decl>;</decl_stmt>

<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>pluginsd_main</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>size_t</name></type> <name>pluginsd_process</name><parameter_list>(<parameter><decl><type><name>RRDHOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>plugind</name></name> <modifier>*</modifier></type><name>cd</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>trust_durations</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pluginsd_split_words</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>words</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max_words</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>pluginsd_initialize_plugin_directories</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>config_isspace</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* NETDATA_PLUGINS_D_H */</comment>
</unit>
