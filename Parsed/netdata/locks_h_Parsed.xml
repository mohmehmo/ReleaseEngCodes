<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/libnetdata/locks/locks.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_LOCKS_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_LOCKS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libnetdata.h"</cpp:file></cpp:include>

<typedef>typedef <type><name>pthread_mutex_t</name></type> <name>netdata_mutex_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_MUTEX_INITIALIZER</name></cpp:macro> <cpp:value>PTHREAD_MUTEX_INITIALIZER</cpp:value></cpp:define>

<typedef>typedef <type><name>pthread_rwlock_t</name></type> <name>netdata_rwlock_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_RWLOCK_INITIALIZER</name></cpp:macro> <cpp:value>PTHREAD_RWLOCK_INITIALIZER</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_mutex_init</name><parameter_list>(<parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_mutex_lock</name><parameter_list>(<parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_mutex_trylock</name><parameter_list>(<parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_mutex_unlock</name><parameter_list>(<parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_destroy</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_init</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_rdlock</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_wrlock</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_unlock</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_tryrdlock</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>__netdata_rwlock_trywrlock</name><parameter_list>(<parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_mutex_init_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_mutex_lock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_mutex_trylock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_mutex_unlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_mutex_t</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_destroy_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_init_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_rdlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_wrlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_unlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_tryrdlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_rwlock_trywrlock_debug</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>long</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><name>netdata_rwlock_t</name> <modifier>*</modifier></type><name>rwlock</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>netdata_thread_disable_cancelability</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>netdata_thread_enable_cancelability</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>NETDATA_INTERNAL_CHECKS</name></cpp:ifdef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_init</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>netdata_mutex_init_debug(__FILE__, __FUNCTION__, __LINE__, mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_lock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>netdata_mutex_lock_debug(__FILE__, __FUNCTION__, __LINE__, mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_trylock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>netdata_mutex_trylock_debug(__FILE__, __FUNCTION__, __LINE__, mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_unlock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value>netdata_mutex_unlock_debug(__FILE__, __FUNCTION__, __LINE__, mutex)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_destroy</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>netdata_rwlock_destroy_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_init</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>      <cpp:value>netdata_rwlock_init_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_rdlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>netdata_rwlock_rdlock_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_wrlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>netdata_rwlock_wrlock_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_unlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>netdata_rwlock_unlock_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_tryrdlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>netdata_rwlock_tryrdlock_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_trywrlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>netdata_rwlock_trywrlock_debug(__FILE__, __FUNCTION__, __LINE__, rwlock)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> <comment type="line">// !NETDATA_INTERNAL_CHECKS</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_init</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>__netdata_mutex_init(mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_lock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>__netdata_mutex_lock(mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_trylock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__netdata_mutex_trylock(mutex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_mutex_unlock</name><parameter_list>(<parameter><type><name>mutex</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value>__netdata_mutex_unlock(mutex)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_destroy</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>__netdata_rwlock_destroy(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_init</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>       <cpp:value>__netdata_rwlock_init(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_rdlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>     <cpp:value>__netdata_rwlock_rdlock(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_wrlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>     <cpp:value>__netdata_rwlock_wrlock(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_unlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>     <cpp:value>__netdata_rwlock_unlock(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_tryrdlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value>__netdata_rwlock_tryrdlock(rwlock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>netdata_rwlock_trywrlock</name><parameter_list>(<parameter><type><name>rwlock</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value>__netdata_rwlock_trywrlock(rwlock)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// NETDATA_INTERNAL_CHECKS</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_LOCKS_H</comment>
</unit>
