<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/libnetdata/url/url.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_URL_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_URL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libnetdata.h"</cpp:file></cpp:include>

<comment type="line">// ----------------------------------------------------------------------------</comment>
<comment type="line">// URL encode / decode</comment>
<comment type="line">// code from: http://www.geekhideout.com/urlcode.shtml</comment>

<comment type="block">/* Converts a hex character to its integer value */</comment>
<function_decl><type><specifier>extern</specifier> <name>char</name></type> <name>from_hex</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>ch</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/* Converts an integer value to its hex character*/</comment>
<function_decl><type><specifier>extern</specifier> <name>char</name></type> <name>to_hex</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/* Returns a url-encoded version of str */</comment>
<comment type="block">/* IMPORTANT: be sure to free() the returned string after use */</comment>
<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>url_encode</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/* Returns a url-decoded version of str */</comment>
<comment type="block">/* IMPORTANT: be sure to free() the returned string after use */</comment>
<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>url_decode</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>url_decode_r</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>to</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WEB_FIELDS_MAX</name></cpp:macro> <cpp:value>400</cpp:value></cpp:define>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>url_map_query_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>url_parse_query_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>max</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>total</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>url_is_request_complete</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>begin</name></decl></parameter>,<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>end</name></decl></parameter>,<parameter><decl><type><name>size_t</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>url_find_protocol</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* NETDATA_URL_H */</comment>
</unit>
