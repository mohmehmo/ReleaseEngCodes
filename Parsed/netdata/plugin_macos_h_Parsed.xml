<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/collectors/macos.plugin/plugin_macos.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>


<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_PLUGIN_MACOS_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_PLUGIN_MACOS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../daemon/common.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>TARGET_OS</name> <operator>==</operator> <name>OS_MACOS</name><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_PLUGIN_HOOK_MACOS</name></cpp:macro> \
    <cpp:value>{ \
        .name = "PLUGIN[macos]", \
        .config_section = CONFIG_SECTION_PLUGINS, \
        .config_name = "macos", \
        .enabled = 1, \
        .thread = NULL, \
        .init_routine = NULL, \
        .start_routine = macos_main \
    },</cpp:value></cpp:define>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>macos_main</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETSYSCTL_BY_NAME</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>getsysctl_by_name(name, &amp;(var), sizeof(var))</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>getsysctl_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_macos_sysctl</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>update_every</name></decl></parameter>, <parameter><decl><type><name>usec_t</name></type> <name>dt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_macos_mach_smi</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>update_every</name></decl></parameter>, <parameter><decl><type><name>usec_t</name></type> <name>dt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_macos_iokit</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>update_every</name></decl></parameter>, <parameter><decl><type><name>usec_t</name></type> <name>dt</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> <comment type="line">// (TARGET_OS == OS_MACOS)</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_PLUGIN_HOOK_MACOS</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// (TARGET_OS == OS_MACOS)</comment>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* NETDATA_PLUGIN_MACOS_H */</comment>
</unit>
