<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/registry/registry_internals.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_REGISTRY_INTERNALS_H_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_REGISTRY_INTERNALS_H_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REGISTRY_URL_FLAGS_DEFAULT</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REGISTRY_URL_FLAGS_EXPIRED</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DICTIONARY_FLAGS</name></cpp:macro> <cpp:value>(DICTIONARY_FLAG_VALUE_LINK_DONT_CLONE | DICTIONARY_FLAG_NAME_LINK_DONT_CLONE | DICTIONARY_FLAG_SINGLE_THREADED)</cpp:value></cpp:define>

<comment type="line">// ----------------------------------------------------------------------------</comment>
<comment type="line">// COMMON structures</comment>

<struct>struct <name>registry</name> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>enabled</name></decl>;</decl_stmt>

    <comment type="line">// entries counters / statistics</comment>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>persons_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>machines_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>usages_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>urls_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>persons_urls_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>machines_urls_count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>log_count</name></decl>;</decl_stmt>

    <comment type="line">// memory counters / statistics</comment>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>persons_memory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>machines_memory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>urls_memory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>persons_urls_memory</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>machines_urls_memory</name></decl>;</decl_stmt>

    <comment type="line">// configuration</comment>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>save_registry_every_entries</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>registry_domain</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>hostname</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>registry_to_announce</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cloud_base_url</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>time_t</name></type> <name>persons_expiration</name></decl>;</decl_stmt> <comment type="line">// seconds to expire idle persons</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>verify_cookies_redirects</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>size_t</name></type> <name>max_url_length</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>size_t</name></type> <name>max_name_length</name></decl>;</decl_stmt>

    <comment type="line">// file/path names</comment>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pathname</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>db_filename</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>log_filename</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>machine_guid_filename</name></decl>;</decl_stmt>

    <comment type="line">// open files</comment>
    <decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>log_fp</name></decl>;</decl_stmt>

    <comment type="line">// the database</comment>
    <decl_stmt><decl><type><name>DICTIONARY</name> <modifier>*</modifier></type><name>persons</name></decl>;</decl_stmt>    <comment type="line">// dictionary of REGISTRY_PERSON *,  with key the REGISTRY_PERSON.guid</comment>
    <decl_stmt><decl><type><name>DICTIONARY</name> <modifier>*</modifier></type><name>machines</name></decl>;</decl_stmt>   <comment type="line">// dictionary of REGISTRY_MACHINE *, with key the REGISTRY_MACHINE.guid</comment>

    <decl_stmt><decl><type><name>avl_tree</name></type> <name>registry_urls_root_index</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>netdata_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry_url.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry_machine.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry_person.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>registry</name></name></type> <name>registry</name></decl>;</decl_stmt>

<comment type="line">// REGISTRY LOW-LEVEL REQUESTS (in registry-internals.c)</comment>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_PERSON</name> <modifier>*</modifier></type><name>registry_request_access</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>person_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_PERSON</name> <modifier>*</modifier></type><name>registry_request_delete</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>person_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>delete_url</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>registry_request_machine</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>person_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>request_machine</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="line">// REGISTRY LOG (in registry_log.c)</comment>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>registry_log</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>REGISTRY_PERSON</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>REGISTRY_URL</name> <modifier>*</modifier></type><name>u</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>registry_log_open</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>registry_log_close</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>registry_log_recreate</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>ssize_t</name></type> <name>registry_log_load</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="line">// REGISTRY DB (in registry_db.c)</comment>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>registry_db_save</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>size_t</name></type> <name>registry_db_load</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>registry_db_should_be_saved</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_REGISTRY_INTERNALS_H_H</comment>
</unit>
