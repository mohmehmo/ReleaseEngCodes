<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/libnetdata/socket/security.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_SECURITY_H</name></cpp:ifndef>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SECURITY_H</name></cpp:macro></cpp:define>

<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_HANDSHAKE_COMPLETE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>    <comment type="line">//All the steps were successful</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_START</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>                 <comment type="line">//Starting handshake, conn variable is NULL</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_WANT_READ</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>             <comment type="line">//The connection wanna read from socket</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_WANT_WRITE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>            <comment type="line">//The connection wanna write on socket</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_NO_HANDSHAKE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>          <comment type="line">//Continue without encrypt connection.</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_OPTIONAL</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>             <comment type="line">//Flag to define the HTTP request</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_FORCE</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>                <comment type="line">//We only accepts HTTPS request</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_INVALID_CERTIFICATE</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>  <comment type="line">//Accepts invalid certificate</comment>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_VALID_CERTIFICATE</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>  <comment type="line">//Accepts invalid certificate</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_CONTEXT_SERVER</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_CONTEXT_STREAMING</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_SSL_CONTEXT_OPENTSDB</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:ifdef># <cpp:directive>ifdef</cpp:directive> <name>ENABLE_HTTPS</name></cpp:ifdef>

<cpp:include>#  <cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:include>#  <cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/err.h&gt;</cpp:file></cpp:include>
<cpp:if>#  <cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>SSLEAY_VERSION_NUMBER</name> <operator>&gt;=</operator> <literal type="number">0x0907000L</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>OPENSSL_VERSION_NUMBER</name> <operator>&lt;</operator> <literal type="number">0x10100000L</literal><operator>)</operator></expr></cpp:if>
<cpp:include>#   <cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/conf.h&gt;</cpp:file></cpp:include>
<cpp:endif>#  <cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>netdata_ssl</name><block>{
    <decl_stmt><decl><type><name>SSL</name> <modifier>*</modifier></type><name>conn</name></decl>;</decl_stmt> <comment type="line">//SSL connection</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt> <comment type="line">//The flags for SSL connection</comment>
}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name>SSL_CTX</name> <modifier>*</modifier></type><name>netdata_opentsdb_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>SSL_CTX</name> <modifier>*</modifier></type><name>netdata_client_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>SSL_CTX</name> <modifier>*</modifier></type><name>netdata_srv_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>security_key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>security_cert</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>netdata_validate_server</name></decl>;</decl_stmt>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>security_location_for_context</name><parameter_list>(<parameter><decl><type><name>SSL_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>security_openssl_library</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>security_clean_openssl</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>security_start_ssl</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>selector</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>security_process_accept</name><parameter_list>(<parameter><decl><type><name>SSL</name> <modifier>*</modifier></type><name>ssl</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>security_test_certificate</name><parameter_list>(<parameter><decl><type><name>SSL</name> <modifier>*</modifier></type><name>ssl</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif># <cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//ENABLE_HTTPS</comment>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_SECURITY_H</comment>
</unit>
