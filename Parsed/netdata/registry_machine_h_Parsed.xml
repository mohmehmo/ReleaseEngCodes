<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/registry/registry_machine.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_REGISTRY_MACHINE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_REGISTRY_MACHINE_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"registry_internals.h"</cpp:file></cpp:include>

<comment type="line">// ----------------------------------------------------------------------------</comment>
<comment type="line">// MACHINE structures</comment>

<comment type="line">// For each MACHINE-URL pair we keep this</comment>
<struct>struct <name>registry_machine_url</name> <block>{
    <decl_stmt><decl><type><name>REGISTRY_URL</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>          <comment type="line">// de-duplicated URL</comment>

    <decl_stmt><decl><type><name>uint8_t</name></type> <name>flags</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>first_t</name></decl>;</decl_stmt>           <comment type="line">// the first time we saw this</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>last_t</name></decl>;</decl_stmt>            <comment type="line">// the last time we saw this</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>usages</name></decl>;</decl_stmt>            <comment type="line">// how many times this has been accessed</comment>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>registry_machine_url</name></name></type> <name>REGISTRY_MACHINE_URL</name>;</typedef>

<comment type="line">// A machine</comment>
<struct>struct <name>registry_machine</name> <block>{
    <decl_stmt><decl><type><name>char</name></type> <name><name>guid</name><index>[<expr><name>GUID_LEN</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>    <comment type="line">// the GUID</comment>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>links</name></decl>;</decl_stmt>             <comment type="line">// the number of REGISTRY_PERSON_URL linked to this machine</comment>

    <decl_stmt><decl><type><name>DICTIONARY</name> <modifier>*</modifier></type><name>machine_urls</name></decl>;</decl_stmt>   <comment type="line">// MACHINE_URL *</comment>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>first_t</name></decl>;</decl_stmt>           <comment type="line">// the first time we saw this</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>last_t</name></decl>;</decl_stmt>            <comment type="line">// the last time we saw this</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>usages</name></decl>;</decl_stmt>            <comment type="line">// how many times this has been accessed</comment>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>registry_machine</name></name></type> <name>REGISTRY_MACHINE</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>registry_machine_find</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE_URL</name> <modifier>*</modifier></type><name>registry_machine_url_allocate</name><parameter_list>(<parameter><decl><type><name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>REGISTRY_URL</name> <modifier>*</modifier></type><name>u</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>registry_machine_allocate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>registry_machine_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>machine_guid</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>REGISTRY_MACHINE_URL</name> <modifier>*</modifier></type><name>registry_machine_link_to_url</name><parameter_list>(<parameter><decl><type><name>REGISTRY_MACHINE</name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name>REGISTRY_URL</name> <modifier>*</modifier></type><name>u</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>when</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_REGISTRY_MACHINE_H</comment>
</unit>
