<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/backends/prometheus/backend_prometheus.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_BACKEND_PROMETHEUS_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_BACKEND_PROMETHEUS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"backends/backends.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>prometheus_output_flags</name> <block>{
    <decl><name>PROMETHEUS_OUTPUT_NONE</name>       <init>= <expr><literal type="number">0</literal></expr></init></decl>,
    <decl><name>PROMETHEUS_OUTPUT_HELP</name>       <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr></init></decl>,
    <decl><name>PROMETHEUS_OUTPUT_TYPES</name>      <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>,
    <decl><name>PROMETHEUS_OUTPUT_NAMES</name>      <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>,
    <decl><name>PROMETHEUS_OUTPUT_TIMESTAMPS</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>,
    <decl><name>PROMETHEUS_OUTPUT_VARIABLES</name>  <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr></init></decl>,
	<decl><name>PROMETHEUS_OUTPUT_OLDUNITS</name>   <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr></init></decl>,
	<decl><name>PROMETHEUS_OUTPUT_HIDEUNITS</name>  <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr></init></decl>
}</block></enum></type> <name>PROMETHEUS_OUTPUT_OPTIONS</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>rrd_stats_api_v1_charts_allmetrics_prometheus_single_host</name><parameter_list>(<parameter><decl><type><name>RRDHOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>BUFFER</name> <modifier>*</modifier></type><name>wb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>server</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>, <parameter><decl><type><name>BACKEND_OPTIONS</name></type> <name>backend_options</name></decl></parameter>, <parameter><decl><type><name>PROMETHEUS_OUTPUT_OPTIONS</name></type> <name>output_options</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>rrd_stats_api_v1_charts_allmetrics_prometheus_all_hosts</name><parameter_list>(<parameter><decl><type><name>RRDHOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>BUFFER</name> <modifier>*</modifier></type><name>wb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>server</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>, <parameter><decl><type><name>BACKEND_OPTIONS</name></type> <name>backend_options</name></decl></parameter>, <parameter><decl><type><name>PROMETHEUS_OUTPUT_OPTIONS</name></type> <name>output_options</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ENABLE_PROMETHEUS_REMOTE_WRITE</name></expr></cpp:if>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>rrd_stats_remote_write_allmetrics_prometheus</name><parameter_list>(
        <parameter><decl><type><name>RRDHOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>
        , <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>__hostname</name></decl></parameter>
        , <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>
        , <parameter><decl><type><name>BACKEND_OPTIONS</name></type> <name>backend_options</name></decl></parameter>
        , <parameter><decl><type><name>time_t</name></type> <name>after</name></decl></parameter>
        , <parameter><decl><type><name>time_t</name></type> <name>before</name></decl></parameter>
        , <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>count_charts</name></decl></parameter>
        , <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>count_dims</name></decl></parameter>
        , <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>count_dims_skipped</name></decl></parameter>
)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>process_prometheus_remote_write_response</name><parameter_list>(<parameter><decl><type><name>BUFFER</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_BACKEND_PROMETHEUS_H</comment>
</unit>
