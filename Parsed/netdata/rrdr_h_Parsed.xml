<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/netdata/web/api/queries/rrdr.h"><comment type="line">// SPDX-License-Identifier: GPL-3.0-or-later</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NETDATA_QUERIES_RRDR_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETDATA_QUERIES_RRDR_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libnetdata/libnetdata.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>rrdr_options</name> <block>{
    <decl><name>RRDR_OPTION_NONZERO</name>      <init>= <expr><literal type="number">0x00000001</literal></expr></init></decl>, <comment type="line">// don't output dimensions with just zero values</comment>
    <decl><name>RRDR_OPTION_REVERSED</name>     <init>= <expr><literal type="number">0x00000002</literal></expr></init></decl>, <comment type="line">// output the rows in reverse order (oldest to newest)</comment>
    <decl><name>RRDR_OPTION_ABSOLUTE</name>     <init>= <expr><literal type="number">0x00000004</literal></expr></init></decl>, <comment type="line">// values positive, for DATASOURCE_SSV before summing</comment>
    <decl><name>RRDR_OPTION_MIN2MAX</name>      <init>= <expr><literal type="number">0x00000008</literal></expr></init></decl>, <comment type="line">// when adding dimensions, use max - min, instead of sum</comment>
    <decl><name>RRDR_OPTION_SECONDS</name>      <init>= <expr><literal type="number">0x00000010</literal></expr></init></decl>, <comment type="line">// output seconds, instead of dates</comment>
    <decl><name>RRDR_OPTION_MILLISECONDS</name> <init>= <expr><literal type="number">0x00000020</literal></expr></init></decl>, <comment type="line">// output milliseconds, instead of dates</comment>
    <decl><name>RRDR_OPTION_NULL2ZERO</name>    <init>= <expr><literal type="number">0x00000040</literal></expr></init></decl>, <comment type="line">// do not show nulls, convert them to zeros</comment>
    <decl><name>RRDR_OPTION_OBJECTSROWS</name>  <init>= <expr><literal type="number">0x00000080</literal></expr></init></decl>, <comment type="line">// each row of values should be an object, not an array</comment>
    <decl><name>RRDR_OPTION_GOOGLE_JSON</name>  <init>= <expr><literal type="number">0x00000100</literal></expr></init></decl>, <comment type="line">// comply with google JSON/JSONP specs</comment>
    <decl><name>RRDR_OPTION_JSON_WRAP</name>    <init>= <expr><literal type="number">0x00000200</literal></expr></init></decl>, <comment type="line">// wrap the response in a JSON header with info about the result</comment>
    <decl><name>RRDR_OPTION_LABEL_QUOTES</name> <init>= <expr><literal type="number">0x00000400</literal></expr></init></decl>, <comment type="line">// in CSV output, wrap header labels in double quotes</comment>
    <decl><name>RRDR_OPTION_PERCENTAGE</name>   <init>= <expr><literal type="number">0x00000800</literal></expr></init></decl>, <comment type="line">// give values as percentage of total</comment>
    <decl><name>RRDR_OPTION_NOT_ALIGNED</name>  <init>= <expr><literal type="number">0x00001000</literal></expr></init></decl>, <comment type="line">// do not align charts for persistent timeframes</comment>
    <decl><name>RRDR_OPTION_DISPLAY_ABS</name>  <init>= <expr><literal type="number">0x00002000</literal></expr></init></decl>, <comment type="line">// for badges, display the absolute value, but calculate colors with sign</comment>
    <decl><name>RRDR_OPTION_MATCH_IDS</name>    <init>= <expr><literal type="number">0x00004000</literal></expr></init></decl>, <comment type="line">// when filtering dimensions, match only IDs</comment>
    <decl><name>RRDR_OPTION_MATCH_NAMES</name>  <init>= <expr><literal type="number">0x00008000</literal></expr></init></decl>, <comment type="line">// when filtering dimensions, match only names</comment>
    <decl><name>RRDR_OPTION_CUSTOM_VARS</name>  <init>= <expr><literal type="number">0x00010000</literal></expr></init></decl>, <comment type="line">// when wraping response in a JSON, return custom variables in response</comment>
}</block></enum></type> <name>RRDR_OPTIONS</name>;</typedef>

<typedef>typedef <type><enum>enum <name>rrdr_value_flag</name> <block>{
    <decl><name>RRDR_VALUE_NOTHING</name>      <init>= <expr><literal type="number">0x00</literal></expr></init></decl>, <comment type="line">// no flag set (a good default)</comment>
    <decl><name>RRDR_VALUE_EMPTY</name>        <init>= <expr><literal type="number">0x01</literal></expr></init></decl>, <comment type="line">// the database value is empty</comment>
    <decl><name>RRDR_VALUE_RESET</name>        <init>= <expr><literal type="number">0x02</literal></expr></init></decl>, <comment type="line">// the database value is marked as reset (overflown)</comment>
}</block></enum></type> <name>RRDR_VALUE_FLAGS</name>;</typedef>

<typedef>typedef <type><enum>enum <name>rrdr_dimension_flag</name> <block>{
    <decl><name>RRDR_DIMENSION_DEFAULT</name>  <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
    <decl><name>RRDR_DIMENSION_HIDDEN</name>   <init>= <expr><literal type="number">0x04</literal></expr></init></decl>, <comment type="line">// the dimension is hidden (not to be presented to callers)</comment>
    <decl><name>RRDR_DIMENSION_NONZERO</name>  <init>= <expr><literal type="number">0x08</literal></expr></init></decl>, <comment type="line">// the dimension is non zero (contains non-zero values)</comment>
    <decl><name>RRDR_DIMENSION_SELECTED</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>, <comment type="line">// the dimension is selected for evaluation in this RRDR</comment>
}</block></enum></type> <name>RRDR_DIMENSION_FLAGS</name>;</typedef>

<comment type="line">// RRDR result options</comment>
<typedef>typedef <type><enum>enum <name>rrdr_result_flags</name> <block>{
    <decl><name>RRDR_RESULT_OPTION_ABSOLUTE</name>      <init>= <expr><literal type="number">0x00000001</literal></expr></init></decl>, <comment type="line">// the query uses absolute time-frames</comment>
                                                   <comment type="line">// (can be cached by browsers and proxies)</comment>
    <decl><name>RRDR_RESULT_OPTION_RELATIVE</name>      <init>= <expr><literal type="number">0x00000002</literal></expr></init></decl>, <comment type="line">// the query uses relative time-frames</comment>
                                                   <comment type="line">// (should not to be cached by browsers and proxies)</comment>
    <decl><name>RRDR_RESULT_OPTION_VARIABLE_STEP</name> <init>= <expr><literal type="number">0x00000004</literal></expr></init></decl>, <comment type="line">// the query uses variable-step time-frames</comment>
}</block></enum></type> <name>RRDR_RESULT_FLAGS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>rrdresult</name> <block>{
    <decl_stmt><decl><type><name><name>struct</name> <name>rrdset</name></name> <modifier>*</modifier></type><name>st</name></decl>;</decl_stmt>         <comment type="line">// the chart this result refers to</comment>

    <decl_stmt><decl><type><name>RRDR_RESULT_FLAGS</name></type> <name>result_options</name></decl>;</decl_stmt> <comment type="line">// RRDR_RESULT_OPTION_*</comment>

    <decl_stmt><decl><type><name>int</name></type> <name>d</name></decl>;</decl_stmt>                    <comment type="line">// the number of dimensions</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>n</name></decl>;</decl_stmt>                   <comment type="line">// the number of values in the arrays</comment>
    <decl_stmt><decl><type><name>long</name></type> <name>rows</name></decl>;</decl_stmt>                <comment type="line">// the number of rows used</comment>

    <decl_stmt><decl><type><name>RRDR_DIMENSION_FLAGS</name> <modifier>*</modifier></type><name>od</name></decl>;</decl_stmt> <comment type="line">// the options for the dimensions</comment>

    <decl_stmt><decl><type><name>time_t</name> <modifier>*</modifier></type><name>t</name></decl>;</decl_stmt>                <comment type="line">// array of n timestamps</comment>
    <decl_stmt><decl><type><name>calculated_number</name> <modifier>*</modifier></type><name>v</name></decl>;</decl_stmt>     <comment type="line">// array n x d values</comment>
    <decl_stmt><decl><type><name>RRDR_VALUE_FLAGS</name> <modifier>*</modifier></type><name>o</name></decl>;</decl_stmt>      <comment type="line">// array n x d options for each value returned</comment>

    <decl_stmt><decl><type><name>long</name></type> <name>group</name></decl>;</decl_stmt>               <comment type="line">// how many collected values were grouped for each row</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>update_every</name></decl>;</decl_stmt>         <comment type="line">// what is the suggested update frequency in seconds</comment>

    <decl_stmt><decl><type><name>calculated_number</name></type> <name>min</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>calculated_number</name></type> <name>max</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>time_t</name></type> <name>before</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>time_t</name></type> <name>after</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>has_st_lock</name></decl>;</decl_stmt>        <comment type="line">// if st is read locked by us</comment>

    <comment type="line">// internal rrd2rrdr() members below this point</comment>
    <struct>struct <block>{
        <decl_stmt><decl><type><name>long</name></type> <name>points_wanted</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>resampling_group</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>calculated_number</name></type> <name>resampling_divisor</name></decl>;</decl_stmt>

        <function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>grouping_create</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdresult</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>grouping_reset</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdresult</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>grouping_free</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdresult</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>grouping_add</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdresult</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>calculated_number</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
        <function_decl><type><name>calculated_number</name></type> (<modifier>*</modifier><name>grouping_flush</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdresult</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>RRDR_VALUE_FLAGS</name> <modifier>*</modifier></type><name>rrdr_value_options_ptr</name></decl></parameter>)</parameter_list>;</function_decl>
        <decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>grouping_data</name></decl>;</decl_stmt>

        <cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>NETDATA_INTERNAL_CHECKS</name></cpp:ifdef>
        <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>log</name></decl>;</decl_stmt>
        <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

        <decl_stmt><decl><type><name>size_t</name></type> <name>db_points_read</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>size_t</name></type> <name>result_points_generated</name></decl>;</decl_stmt>
    }</block> <decl><name>internal</name></decl>;</struct>
}</block></struct></type> <name>RRDR</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rrdr_rows</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((r)-&gt;rows)</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>rrdr_free</name><parameter_list>(<parameter><decl><type><name>RRDR</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>RRDR</name> <modifier>*</modifier></type><name>rrdr_create</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rrdset</name></name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../web_api_v1.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"web/api/queries/query.h"</cpp:file></cpp:include>

<function_decl><type><specifier>extern</specifier> <name>RRDR</name> <modifier>*</modifier></type><name>rrd2rrdr</name><parameter_list>(<parameter><decl><type><name>RRDSET</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>points_requested</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>after_requested</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>before_requested</name></decl></parameter>, <parameter><decl><type><name>RRDR_GROUPING</name></type> <name>group_method</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>resampling_time_requested</name></decl></parameter>, <parameter><decl><type><name>RRDR_OPTIONS</name></type> <name>options</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dimensions</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"query.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//NETDATA_QUERIES_RRDR_H</comment>
</unit>
