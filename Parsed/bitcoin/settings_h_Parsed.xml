<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/policy/settings.h"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_POLICY_SETTINGS_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_POLICY_SETTINGS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;policy/policy.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>CFeeRate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>CTransaction</name></decl>;</decl_stmt>

<comment type="line">// Policy settings which are configurable at runtime.</comment>
<decl_stmt><decl><type><specifier>extern</specifier> <name>CFeeRate</name></type> <name>incrementalRelayFee</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>CFeeRate</name></type> <name>dustRelayFee</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>unsigned</name> <name>int</name></type> <name>nBytesPerSigOp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type> <name>fIsBareMultisigStd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>IsStandardTx</name><argument_list>(<argument><expr><specifier>const</specifier> <name>CTransaction</name><operator>&amp;</operator> <name>tx</name></expr></argument>, <argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>reason</name></expr></argument>)</argument_list>
<block>{<block_content>
    <return>return <expr><call><name>IsStandardTx</name><argument_list>(<argument><expr><name>tx</name></expr></argument>, <argument><expr><operator>::</operator><name>fIsBareMultisigStd</name></expr></argument>, <argument><expr><operator>::</operator><name>dustRelayFee</name></expr></argument>, <argument><expr><name>reason</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int64_t</name></type> <name>GetVirtualTransactionSize</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>weight</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>sigop_cost</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><call><name>GetVirtualTransactionSize</name><argument_list>(<argument><expr><name>weight</name></expr></argument>, <argument><expr><name>sigop_cost</name></expr></argument>, <argument><expr><operator>::</operator><name>nBytesPerSigOp</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int64_t</name></type> <name>GetVirtualTransactionSize</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>CTransaction</name><modifier>&amp;</modifier></type> <name>tx</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>sigop_cost</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><call><name>GetVirtualTransactionSize</name><argument_list>(<argument><expr><name>tx</name></expr></argument>, <argument><expr><name>sigop_cost</name></expr></argument>, <argument><expr><operator>::</operator><name>nBytesPerSigOp</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_POLICY_SETTINGS_H</comment>
</unit>
