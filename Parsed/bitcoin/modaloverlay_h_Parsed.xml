<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/modaloverlay.h"><comment type="line">// Copyright (c) 2016-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_MODALOVERLAY_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_MODALOVERLAY_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDateTime&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QWidget&gt;</cpp:file></cpp:include>

<comment type="line" format="doxygen">//! The required delta of headers to the estimated number of available headers until we show the IBD progress</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>constexpr</name> <name>int</name></type> <name>HEADER_HEIGHT_DELTA_SYNC</name> <init>= <expr><literal type="number">24</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>Ui</name> <block>{<block_content>
    <decl_stmt><decl><type><name>class</name></type> <name>ModalOverlay</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<comment type="block" format="doxygen">/** Modal overlay to display information about the chain-sync state */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>ModalOverlay</name> <range>: <expr><name>public</name> <name>QWidget</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <macro><name>ModalOverlay</name><argument_list>(<argument>bool enable_wallet</argument>, <argument>QWidget *parent</argument>)</argument_list></macro></expr>;
    <expr><operator>~</operator><call><name>ModalOverlay</name><argument_list>()</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <macro><name>tipUpdate</name><argument_list>(<argument>int count</argument>, <argument>const QDateTime&amp; blockDate</argument>, <argument>double nVerificationProgress</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <macro><name>setKnownBestHeight</name><argument_list>(<argument>int count</argument>, <argument>const QDateTime&amp; blockDate</argument>)</argument_list></macro></expr>;

    <expr><name>void</name> <call><name>toggleVisibility</name><argument_list>()</argument_list></call></expr>;
    <comment type="line">// will show or hide the modal layer</comment>
    <expr><name>void</name> <macro><name>showHide</name><argument_list>(<argument>bool hide = false</argument>, <argument>bool userRequested = false</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>closeClicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>bool</name> <macro><name>isLayerVisible</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>layerIsVisible</name></expr>;</return> }</block>

<name>protected</name><operator>:</operator>
    <name>bool</name> <call><name>eventFilter</name><argument_list>(<argument><expr><name>QObject</name> <operator>*</operator> <name>obj</name></expr></argument>, <argument><expr><name>QEvent</name> <operator>*</operator> <name>ev</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>bool</name> <call><name>event</name><argument_list>(<argument><expr><name>QEvent</name><operator>*</operator> <name>ev</name></expr></argument>)</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>Ui</name><operator>::</operator><name>ModalOverlay</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>int</name> <name>bestHeaderHeight</name></expr>; <comment type="line">//best known height (based on the headers)</comment>
    <expr><name>QDateTime</name> <name>bestHeaderDate</name></expr>;
    <expr><name><name>QVector</name><argument_list type="generic">&lt;<argument><expr><name><name>QPair</name><argument_list type="generic">&lt;<argument><expr><name>qint64</name></expr></argument>, <argument><expr><name>double</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <name>blockProcessTime</name></expr>;
    <expr><name>bool</name> <name>layerIsVisible</name></expr>;
    <expr><name>bool</name> <name>userClosed</name></expr>;
    <expr><name>void</name> <call><name>UpdateHeaderSyncLabel</name><argument_list>()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_MODALOVERLAY_H</comment>
</unit>
