<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/wallet/load.h"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_WALLET_LOAD_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_WALLET_LOAD_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>CScheduler</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>interfaces</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Chain</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace interfaces</comment>

<comment type="line" format="doxygen">//! Responsible for reading and validating the -wallet arguments and verifying the wallet database.</comment>
<comment type="line" format="doxygen">//! This function will perform salvage on the wallet if requested, as long as only one wallet is</comment>
<comment type="line" format="doxygen">//! being loaded (WalletInit::ParameterInteraction() forbids -salvagewallet, -zapwallettxes or -upgradewallet with multiwallet).</comment>
<decl_stmt><decl><type><name>bool</name></type> <name>VerifyWallets</name><argument_list>(<argument><expr><name>interfaces</name><operator>::</operator><name>Chain</name><operator>&amp;</operator> <name>chain</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>wallet_files</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" format="doxygen">//! Load wallet databases.</comment>
<decl_stmt><decl><type><name>bool</name></type> <name>LoadWallets</name><argument_list>(<argument><expr><name>interfaces</name><operator>::</operator><name>Chain</name><operator>&amp;</operator> <name>chain</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>wallet_files</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" format="doxygen">//! Complete startup of wallets.</comment>
<function_decl><type><name>void</name></type> <name>StartWallets</name><parameter_list>(<parameter><decl><type><name>CScheduler</name><modifier>&amp;</modifier></type> <name>scheduler</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="line" format="doxygen">//! Flush all wallets in preparation for shutdown.</comment>
<function_decl><type><name>void</name></type> <name>FlushWallets</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="line" format="doxygen">//! Stop all wallets. Wallets will be flushed first.</comment>
<function_decl><type><name>void</name></type> <name>StopWallets</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="line" format="doxygen">//! Close all wallets.</comment>
<function_decl><type><name>void</name></type> <name>UnloadWallets</name><parameter_list>()</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_WALLET_LOAD_H</comment>
</unit>
