<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/wallet/test/init_tests.cpp"><comment type="line">// Copyright (c) 2018-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;boost/test/unit_test.hpp&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;noui.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test/util/logging.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test/util/setup_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/system.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/test/init_test_fixture.h&gt;</cpp:file></cpp:include>

<macro><name>BOOST_FIXTURE_TEST_SUITE</name><argument_list>(<argument>init_tests</argument>, <argument>InitWalletDirTestingSetup</argument>)</argument_list></macro>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_default</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>walletdir</name> <init>= <expr><call><name><name>gArgs</name><operator>.</operator><name>GetArg</name></name><argument_list>(<argument><expr><literal type="string">"-walletdir"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>expected_path</name> <init>= <expr><call><name><name>fs</name><operator>::</operator><name>canonical</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>walletdir</name> <operator>==</operator> <name>expected_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_custom</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"custom"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>walletdir</name> <init>= <expr><call><name><name>gArgs</name><operator>.</operator><name>GetArg</name></name><argument_list>(<argument><expr><literal type="string">"-walletdir"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>expected_path</name> <init>= <expr><call><name><name>fs</name><operator>::</operator><name>canonical</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"custom"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>walletdir</name> <operator>==</operator> <name>expected_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_does_not_exist</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"nonexistent"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <block>{<block_content>
        <expr_stmt><expr><call><name>ASSERT_DEBUG_LOG</name><argument_list>(<argument><expr><literal type="string">"does not exist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_is_not_directory</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"file"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <block>{<block_content>
        <expr_stmt><expr><call><name>ASSERT_DEBUG_LOG</name><argument_list>(<argument><expr><literal type="string">"is not a directory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_is_not_relative</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"relative"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <block>{<block_content>
        <expr_stmt><expr><call><name>ASSERT_DEBUG_LOG</name><argument_list>(<argument><expr><literal type="string">"is a relative path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_no_trailing</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"trailing"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>walletdir</name> <init>= <expr><call><name><name>gArgs</name><operator>.</operator><name>GetArg</name></name><argument_list>(<argument><expr><literal type="string">"-walletdir"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>expected_path</name> <init>= <expr><call><name><name>fs</name><operator>::</operator><name>canonical</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>walletdir</name> <operator>==</operator> <name>expected_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>walletinit_verify_walletdir_no_trailing2</argument>)</argument_list></macro>
<block>{<block_content>
    <expr_stmt><expr><call><name>SetWalletDir</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"trailing2"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><call><name><name>m_chain_client</name><operator>-&gt;</operator><name>verify</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>walletdir</name> <init>= <expr><call><name><name>gArgs</name><operator>.</operator><name>GetArg</name></name><argument_list>(<argument><expr><literal type="string">"-walletdir"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>expected_path</name> <init>= <expr><call><name><name>fs</name><operator>::</operator><name>canonical</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><name>walletdir</name> <operator>==</operator> <name>expected_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_SUITE_END</name><argument_list>()</argument_list></macro>
</unit>
