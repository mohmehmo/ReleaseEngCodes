<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/util/threadnames.h"><comment type="line">// Copyright (c) 2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_UTIL_THREADNAMES_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_UTIL_THREADNAMES_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>util</name> <block>{<block_content>
<comment type="line" format="doxygen">//! Rename a thread both in terms of an internal (in-memory) name as well</comment>
<comment type="line" format="doxygen">//! as its system thread name.</comment>
<comment type="line" format="doxygen">//! @note Do not call this for the main thread, as this will interfere with</comment>
<comment type="line" format="doxygen">//! UNIX utilities such as top and killall. Use ThreadSetInternalName instead.</comment>
<decl_stmt><decl><type><name>void</name></type> <name>ThreadRename</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;&amp;</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" format="doxygen">//! Set the internal (in-memory) name of the current thread only.</comment>
<decl_stmt><decl><type><name>void</name></type> <name>ThreadSetInternalName</name><argument_list>(<argument><expr><name>std</name><operator>::</operator><name>string</name><operator>&amp;&amp;</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" format="doxygen">//! Get the thread's internal (in-memory) name; used e.g. for identification in</comment>
<comment type="line" format="doxygen">//! logging.</comment>
<expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <call><name>ThreadGetInternalName</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace util</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_UTIL_THREADNAMES_H</comment>
</unit>
