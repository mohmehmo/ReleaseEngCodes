<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/trafficgraphwidget.h"><comment type="line">// Copyright (c) 2011-2015 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_TRAFFICGRAPHWIDGET_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_TRAFFICGRAPHWIDGET_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QWidget&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QQueue&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>ClientModel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QPaintEvent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QTimer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<name>class</name></type> <name>TrafficGraphWidget</name> <range>: <expr><name>public</name> <name>QWidget</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>TrafficGraphWidget</name><argument_list>(<argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>setClientModel</name><argument_list>(<argument><expr><name>ClientModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>int</name> <macro><name>getGraphRangeMins</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;

<expr><name>protected</name><operator>:</operator>
    <name>void</name> <call><name>paintEvent</name><argument_list>(<argument><expr><name>QPaintEvent</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>updateRates</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <macro><name>setGraphRangeMins</name><argument_list>(<argument>int mins</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>clear</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>void</name> <call><name>paintPath</name><argument_list>(<argument><expr><name>QPainterPath</name> <operator>&amp;</operator><name>path</name></expr></argument>, <argument><expr><name><name>QQueue</name><argument_list type="generic">&lt;<argument><expr><name>float</name></expr></argument>&gt;</argument_list></name> <operator>&amp;</operator><name>samples</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>QTimer</name> <operator>*</operator><name>timer</name></expr>;
    <expr><name>float</name> <name>fMax</name></expr>;
    <expr><name>int</name> <name>nMins</name></expr>;
    <expr><name><name>QQueue</name><argument_list type="generic">&lt;<argument><expr><name>float</name></expr></argument>&gt;</argument_list></name> <name>vSamplesIn</name></expr>;
    <expr><name><name>QQueue</name><argument_list type="generic">&lt;<argument><expr><name>float</name></expr></argument>&gt;</argument_list></name> <name>vSamplesOut</name></expr>;
    <expr><name>quint64</name> <name>nLastBytesIn</name></expr>;
    <expr><name>quint64</name> <name>nLastBytesOut</name></expr>;
    <expr><name>ClientModel</name> <operator>*</operator><name>clientModel</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_TRAFFICGRAPHWIDGET_H</comment>
</unit>
