<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/transactionview.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionview.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addresstablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/bitcoinunits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/csvmodelwriter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/editaddressdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/optionsmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactiondescdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionfilterproxy.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionrecord.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactiontablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ui_interface.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QApplication&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QComboBox&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDateTimeEdit&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDesktopServices&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDoubleValidator&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QHBoxLayout&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QHeaderView&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QLabel&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QLineEdit&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMenu&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPoint&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QScrollBar&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QTableView&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QTimer&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QUrl&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QVBoxLayout&gt;</cpp:file></cpp:include>

<constructor><name><name>TransactionView</name><operator>::</operator><name>TransactionView</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>platformStyle</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QWidget</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>, <call><name>model</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>, <call><name>transactionProxyModel</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>transactionView</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>, <call><name>abandonAction</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>, <call><name>bumpFeeAction</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>, <call><name>columnResizingFixer</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <comment type="line">// Build filter row</comment>
    <expr_stmt><expr><call><name>setContentsMargins</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>QHBoxLayout</name> <modifier>*</modifier></type><name>hlayout</name> <init>= <expr><operator>new</operator> <call><name>QHBoxLayout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>setContentsMargins</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>setSpacing</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addSpacing</name></name><argument_list>(<argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>setSpacing</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addSpacing</name></name><argument_list>(<argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <expr_stmt><expr><name>watchOnlyWidget</name> <operator>=</operator> <operator>new</operator> <call><name>QComboBox</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>WatchOnlyFilter_All</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/eye_plus"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>WatchOnlyFilter_Yes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/eye_minus"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>WatchOnlyFilter_No</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>watchOnlyWidget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>dateWidget</name> <operator>=</operator> <operator>new</operator> <call><name>QComboBox</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">121</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">120</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"All"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>All</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Today"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>Today</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"This week"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ThisWeek</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"This month"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ThisMonth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Last month"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>LastMonth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"This year"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ThisYear</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Range..."</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>Range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>dateWidget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>typeWidget</name> <operator>=</operator> <operator>new</operator> <call><name>QComboBox</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">121</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">120</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"All"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>ALL_TYPES</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Received with"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>RecvWithAddress</name></name></expr></argument>)</argument_list></call> <operator>|</operator>
                                        <call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>RecvFromOther</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Sent to"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>SendToAddress</name></name></expr></argument>)</argument_list></call> <operator>|</operator>
                                  <call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>SendToOther</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"To yourself"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>SendToSelf</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Mined"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>Generated</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Other"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>TransactionFilterProxy</name><operator>::</operator><name>TYPE</name></name><argument_list>(<argument><expr><name><name>TransactionRecord</name><operator>::</operator><name>Other</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>typeWidget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>search_widget</name> <operator>=</operator> <operator>new</operator> <call><name>QLineEdit</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>search_widget</name><operator>-&gt;</operator><name>setPlaceholderText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Enter address, transaction id, or label to search"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>search_widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>amountWidget</name> <operator>=</operator> <operator>new</operator> <call><name>QLineEdit</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>amountWidget</name><operator>-&gt;</operator><name>setPlaceholderText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Min amount"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>amountWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">97</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>amountWidget</name><operator>-&gt;</operator><name>setFixedWidth</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <decl_stmt><decl><type><name>QDoubleValidator</name> <modifier>*</modifier></type><name>amountValidator</name> <init>= <expr><operator>new</operator> <call><name>QDoubleValidator</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1e20</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QLocale</name></type> <name>amountLocale</name><argument_list>(<argument><expr><name><name>QLocale</name><operator>::</operator><name>C</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>amountLocale</name><operator>.</operator><name>setNumberOptions</name></name><argument_list>(<argument><expr><name><name>QLocale</name><operator>::</operator><name>RejectGroupSeparator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>amountValidator</name><operator>-&gt;</operator><name>setLocale</name></name><argument_list>(<argument><expr><name>amountLocale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>amountWidget</name><operator>-&gt;</operator><name>setValidator</name></name><argument_list>(<argument><expr><name>amountValidator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>amountWidget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Delay before filtering transactions in ms</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name>input_filter_delay</name> <init>= <expr><literal type="number">200</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>QTimer</name><modifier>*</modifier></type> <name>amount_typing_delay</name> <init>= <expr><operator>new</operator> <call><name>QTimer</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>amount_typing_delay</name><operator>-&gt;</operator><name>setSingleShot</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>amount_typing_delay</name><operator>-&gt;</operator><name>setInterval</name></name><argument_list>(<argument><expr><name>input_filter_delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>QTimer</name><modifier>*</modifier></type> <name>prefix_typing_delay</name> <init>= <expr><operator>new</operator> <call><name>QTimer</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>prefix_typing_delay</name><operator>-&gt;</operator><name>setSingleShot</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>prefix_typing_delay</name><operator>-&gt;</operator><name>setInterval</name></name><argument_list>(<argument><expr><name>input_filter_delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>QVBoxLayout</name> <modifier>*</modifier></type><name>vlayout</name> <init>= <expr><operator>new</operator> <call><name>QVBoxLayout</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>setContentsMargins</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>setSpacing</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>QTableView</name> <modifier>*</modifier></type><name>view</name> <init>= <expr><operator>new</operator> <call><name>QTableView</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>addLayout</name></name><argument_list>(<argument><expr><name>hlayout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><call><name>createDateRangeWidget</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vlayout</name><operator>-&gt;</operator><name>setSpacing</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>width</name> <init>= <expr><call><name><name>view</name><operator>-&gt;</operator><name>verticalScrollBar</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>sizeHint</name><argument_list>()</argument_list></call><operator>.</operator><call><name>width</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// Cover scroll bar width with spacing</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addSpacing</name></name><argument_list>(<argument><expr><name>width</name><operator>+</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>hlayout</name><operator>-&gt;</operator><name>addSpacing</name></name><argument_list>(<argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="line">// Always show scroll bar</comment>
    <expr_stmt><expr><call><name><name>view</name><operator>-&gt;</operator><name>setVerticalScrollBarPolicy</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ScrollBarAlwaysOn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>view</name><operator>-&gt;</operator><name>setTabKeyNavigation</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>view</name><operator>-&gt;</operator><name>setContextMenuPolicy</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>CustomContextMenu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>view</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>transactionView</name> <operator>=</operator> <name>view</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setObjectName</name></name><argument_list>(<argument><expr><literal type="string">"transactionView"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Actions</comment>
    <expr_stmt><expr><name>abandonAction</name> <operator>=</operator> <operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Abandon transaction"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>bumpFeeAction</name> <operator>=</operator> <operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Increase transaction fee"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bumpFeeAction</name><operator>-&gt;</operator><name>setObjectName</name></name><argument_list>(<argument><expr><literal type="string">"bumpFeeAction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyAddressAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy address"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyLabelAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy label"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyAmountAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy amount"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyTxIDAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy transaction ID"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyTxHexAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy raw transaction"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyTxPlainText</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy full transaction details"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>editLabelAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Edit label"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>showDetailsAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Show transaction details"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>contextMenu</name> <operator>=</operator> <operator>new</operator> <call><name>QMenu</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>setObjectName</name></name><argument_list>(<argument><expr><literal type="string">"contextMenu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyAddressAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyLabelAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyAmountAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyTxIDAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyTxHexAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyTxPlainText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>showDetailsAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addSeparator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>bumpFeeAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>abandonAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>editLabelAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro><name>connect</name><argument_list>(<argument>dateWidget</argument>, <argument>static_cast&lt;void (QComboBox::*)(int)&gt;(&amp;QComboBox::activated)</argument>, <argument>this</argument>, <argument>&amp;TransactionView::chooseDate</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <macro><name>connect</name><argument_list>(<argument>typeWidget</argument>, <argument>static_cast&lt;void (QComboBox::*)(int)&gt;(&amp;QComboBox::activated)</argument>, <argument>this</argument>, <argument>&amp;TransactionView::chooseType</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <macro><name>connect</name><argument_list>(<argument>watchOnlyWidget</argument>, <argument>static_cast&lt;void (QComboBox::*)(int)&gt;(&amp;QComboBox::activated)</argument>, <argument>this</argument>, <argument>&amp;TransactionView::chooseWatchonly</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <macro><name>connect</name><argument_list>(<argument>amountWidget</argument>, <argument>&amp;QLineEdit::textChanged</argument>, <argument>amount_typing_delay</argument>, <argument>static_cast&lt;void (QTimer::*)()&gt;(&amp;QTimer::start)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>amount_typing_delay</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QTimer</name><operator>::</operator><name>timeout</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>changedAmount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <macro><name>connect</name><argument_list>(<argument>search_widget</argument>, <argument>&amp;QLineEdit::textChanged</argument>, <argument>prefix_typing_delay</argument>, <argument>static_cast&lt;void (QTimer::*)()&gt;(&amp;QTimer::start)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>prefix_typing_delay</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QTimer</name><operator>::</operator><name>timeout</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>changedSearch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QTableView</name><operator>::</operator><name>doubleClicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>doubleClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>view</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QTableView</name><operator>::</operator><name>customContextMenuRequested</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>contextualMenu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>bumpFeeAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>bumpFee</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>abandonAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>abandonTx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyAddressAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyLabelAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyLabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyAmountAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyAmount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyTxIDAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyTxID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyTxHexAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyTxHex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyTxPlainText</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>copyTxPlainText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>editLabelAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>editLabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>showDetailsAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>showDetails</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Double-clicking on a transaction on the transaction history page shows details</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>doubleClicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>showDetails</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Highlight transaction after fee bump</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>bumpedFee</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>this</name></argument>]</capture><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint256</name><modifier>&amp;</modifier></type> <name>txid</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>focusTransaction</name><argument_list>(<argument><expr><name>txid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>setModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>model</name></name> <operator>=</operator> <name>_model</name></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><name>_model</name></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>transactionProxyModel</name> <operator>=</operator> <operator>new</operator> <call><name>TransactionFilterProxy</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setSourceModel</name></name><argument_list>(<argument><expr><call><name><name>_model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDynamicSortFilter</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setSortCaseSensitivity</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setFilterCaseSensitivity</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setSortRole</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setHorizontalScrollBarPolicy</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ScrollBarAlwaysOff</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>transactionProxyModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setAlternatingRowColors</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setSelectionBehavior</name></name><argument_list>(<argument><expr><name><name>QAbstractItemView</name><operator>::</operator><name>SelectRows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setSelectionMode</name></name><argument_list>(<argument><expr><name><name>QAbstractItemView</name><operator>::</operator><name>ExtendedSelection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>horizontalHeader</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>setSortIndicator</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Date</name></name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>DescendingOrder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setSortingEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>verticalHeader</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>hide</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Status</name></name></expr></argument>, <argument><expr><name>STATUS_COLUMN_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Watchonly</name></name></expr></argument>, <argument><expr><name>WATCHONLY_COLUMN_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Date</name></name></expr></argument>, <argument><expr><name>DATE_COLUMN_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Type</name></name></expr></argument>, <argument><expr><name>TYPE_COLUMN_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Amount</name></name></expr></argument>, <argument><expr><name>AMOUNT_MINIMUM_COLUMN_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>columnResizingFixer</name> <operator>=</operator> <operator>new</operator> <call><name><name>GUIUtil</name><operator>::</operator><name>TableViewLastColumnResizingFixer</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><name>AMOUNT_MINIMUM_COLUMN_WIDTH</name></expr></argument>, <argument><expr><name>MINIMUM_COLUMN_WIDTH</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>_model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <comment type="line">// Add third party transaction URLs to context menu</comment>
            <decl_stmt><decl><type><name>QStringList</name></type> <name>listUrls</name> <init>= <expr><call><name><name>_model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getThirdPartyTxUrls</name><argument_list>()</argument_list></call><operator>.</operator><call><name>split</name><argument_list>(<argument><expr><literal type="string">"|"</literal></expr></argument>, <argument><expr><name><name>QString</name><operator>::</operator><name>SkipEmptyParts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>listUrls</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
            <block>{<block_content>
                <decl_stmt><decl><type><name>QString</name></type> <name>url</name> <init>= <expr><name><name>listUrls</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>trimmed</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>QString</name></type> <name>host</name> <init>= <expr><call><name>QUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><name><name>QUrl</name><operator>::</operator><name>StrictMode</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>host</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>host</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
                <block>{<block_content>
                    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>thirdPartyTxUrlAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// use host as menu item label</comment>
                    <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
                        <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addSeparator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>thirdPartyTxUrlAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>thirdPartyTxUrlAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>this</name></argument>, <argument><name>url</name></argument>]</capture> <block>{<block_content> <expr_stmt><expr><call><name>openThirdPartyTxUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// show/hide column Watch-only</comment>
        <expr_stmt><expr><call><name>updateWatchOnlyColumn</name><argument_list>(<argument><expr><call><name><name>_model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>haveWatchOnly</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Watch-only signal</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_model</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>notifyWatchonlyChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>updateWatchOnlyColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>chooseDate</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QDate</name></type> <name>current</name> <init>= <expr><call><name><name>QDate</name><operator>::</operator><name>currentDate</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dateRangeWidget</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <switch>switch<condition>(<expr><call><name><name>dateWidget</name><operator>-&gt;</operator><name>itemData</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInt</name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
    <case>case <expr><name>All</name></expr>:</case>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MIN_DATE</name></name></expr></argument>,
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>Today</name></expr>:</case>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><name>current</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>ThisWeek</name></expr>:</case> <block>{<block_content>
        <comment type="line">// Find last Monday</comment>
        <decl_stmt><decl><type><name>QDate</name></type> <name>startOfWeek</name> <init>= <expr><call><name><name>current</name><operator>.</operator><name>addDays</name></name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><call><name><name>current</name><operator>.</operator><name>dayOfWeek</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><name>startOfWeek</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> <break>break;</break>
    <case>case <expr><name>ThisMonth</name></expr>:</case>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name>QDate</name><argument_list>(<argument><expr><call><name><name>current</name><operator>.</operator><name>year</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>current</name><operator>.</operator><name>month</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>LastMonth</name></expr>:</case>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name>QDate</name><argument_list>(<argument><expr><call><name><name>current</name><operator>.</operator><name>year</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>current</name><operator>.</operator><name>month</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>addMonths</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name>QDate</name><argument_list>(<argument><expr><call><name><name>current</name><operator>.</operator><name>year</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>current</name><operator>.</operator><name>month</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>ThisYear</name></expr>:</case>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
                <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name>QDate</name><argument_list>(<argument><expr><call><name><name>current</name><operator>.</operator><name>year</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>Range</name></expr>:</case>
        <expr_stmt><expr><call><name><name>dateRangeWidget</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>dateRangeChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    </block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>chooseType</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setTypeFilter</name></name><argument_list>(
        <argument><expr><call><name><name>typeWidget</name><operator>-&gt;</operator><name>itemData</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInt</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>chooseWatchonly</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setWatchOnlyFilter</name></name><argument_list>(
        <argument><expr><cast type="static">static_cast<argument_list type="generic">&lt;<argument><expr><name><name>TransactionFilterProxy</name><operator>::</operator><name>WatchOnlyFilter</name></name></expr></argument>&gt;</argument_list><argument_list>(<argument><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>itemData</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInt</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></cast></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>changedSearch</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setSearchString</name></name><argument_list>(<argument><expr><call><name><name>search_widget</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>changedAmount</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>CAmount</name></type> <name>amount_parsed</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>parse</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>amountWidget</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>amount_parsed</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setMinAmount</name></name><argument_list>(<argument><expr><name>amount_parsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setMinAmount</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>exportClicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>model</name> <operator>||</operator> <operator>!</operator><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// CSV is currently the only supported format</comment>
    <decl_stmt><decl><type><name>QString</name></type> <name>filename</name> <init>= <expr><call><name><name>GUIUtil</name><operator>::</operator><name>getSaveFileName</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Export Transaction History"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>QString</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Comma separated file (*.csv)"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>filename</name><operator>.</operator><name>isNull</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>CSVModelWriter</name></type> <name>writer</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <comment type="line">// name, column, role</comment>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>transactionProxyModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Confirmed"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>ConfirmedRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>haveWatchOnly</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Watch-only"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Watchonly</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Date"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>DateRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Type"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Type</name></name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Label"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>LabelRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Address"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AddressRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>getAmountColumnTitle</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>FormattedAmountRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"ID"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>message</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Exporting Failed"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"There was an error trying to save the transaction history to %1."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>arg</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><name><name>CClientUIInterface</name><operator>::</operator><name>MSG_ERROR</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
    </block_content>}</block></if>
    <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>message</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Exporting Successful"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The transaction history was successfully saved to %1."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>arg</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><name><name>CClientUIInterface</name><operator>::</operator><name>MSG_INFORMATION</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>contextualMenu</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QPoint</name> <modifier>&amp;</modifier></type><name>point</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>index</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>indexAt</name></name><argument_list>(<argument><expr><name>point</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>selection</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <comment type="line">// check if transaction can be abandoned, disable context menu action in case it doesn't</comment>
    <decl_stmt><decl><type><name>uint256</name></type> <name>hash</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>hash</name><operator>.</operator><name>SetHex</name></name><argument_list>(<argument><expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>abandonAction</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>transactionCanBeAbandoned</name><argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bumpFeeAction</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>transactionCanBeBumped</name><argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if<condition>(<expr><call><name><name>index</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>popup</name></name><argument_list>(<argument><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>viewport</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>mapToGlobal</name><argument_list>(<argument><expr><name>point</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>abandonTx</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionView</name> <operator>||</operator> <operator>!</operator><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// get the hash from the TxHashRole (QVariant / QString)</comment>
    <decl_stmt><decl><type><name>uint256</name></type> <name>hash</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>hashQStr</name> <init>= <expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>hash</name><operator>.</operator><name>SetHex</name></name><argument_list>(<argument><expr><call><name><name>hashQStr</name><operator>.</operator><name>toStdString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Abandon the wallet transaction over the walletModel</comment>
    <expr_stmt><expr><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>abandonTransaction</name><argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Update the table</comment>
    <expr_stmt><expr><call><name><name>model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>updateTransaction</name><argument_list>(<argument><expr><name>hashQStr</name></expr></argument>, <argument><expr><name>CT_UPDATED</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>bumpFee</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionView</name> <operator>||</operator> <operator>!</operator><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// get the hash from the TxHashRole (QVariant / QString)</comment>
    <decl_stmt><decl><type><name>uint256</name></type> <name>hash</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>hashQStr</name> <init>= <expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>hash</name><operator>.</operator><name>SetHex</name></name><argument_list>(<argument><expr><call><name><name>hashQStr</name><operator>.</operator><name>toStdString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Bump tx fee over the walletModel</comment>
    <decl_stmt><decl><type><name>uint256</name></type> <name>newHash</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>model</name><operator>-&gt;</operator><name>bumpFee</name></name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>newHash</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// Update the table</comment>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>clearSelection</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>updateTransaction</name><argument_list>(<argument><expr><name>hashQStr</name></expr></argument>, <argument><expr><name>CT_UPDATED</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>qApp</name><operator>-&gt;</operator><name>processEvents</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>bumpedFee</name><argument_list>(<argument><expr><name>newHash</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyAddress</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AddressRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyLabel</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>LabelRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyAmount</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>FormattedAmountRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyTxID</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyTxHex</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHexRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>copyTxPlainText</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxPlainTextRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>editLabel</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call> <operator>||</operator><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>selection</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>AddressTableModel</name> <modifier>*</modifier></type><name>addressBook</name> <init>= <expr><call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><operator>!</operator><name>addressBook</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return;</return></block_content></block></if></if_stmt>
        <decl_stmt><decl><type><name>QString</name></type> <name>address</name> <init>= <expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AddressRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><call><name><name>address</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <comment type="line">// If this transaction has no associated address, exit</comment>
            <return>return;</return>
        </block_content>}</block></if></if_stmt>
        <comment type="line">// Is address in address book? Address book can miss address when a transaction is</comment>
        <comment type="line">// sent from outside the UI.</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name><name>addressBook</name><operator>-&gt;</operator><name>lookupAddress</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><name>idx</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
        <block>{<block_content>
            <comment type="line">// Edit sending / receiving address</comment>
            <decl_stmt><decl><type><name>QModelIndex</name></type> <name>modelIdx</name> <init>= <expr><call><name><name>addressBook</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>QModelIndex</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line">// Determine type of address, launch appropriate editor dialog type</comment>
            <decl_stmt><decl><type><name>QString</name></type> <name>type</name> <init>= <expr><call><name><name>modelIdx</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>TypeRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>EditAddressDialog</name></type> <name>dlg</name><argument_list>(
                <argument><expr><ternary><condition><expr><name>type</name> <operator>==</operator> <name><name>AddressTableModel</name><operator>::</operator><name>Receive</name></name></expr>
                ?</condition><then> <expr><name><name>EditAddressDialog</name><operator>::</operator><name>EditReceivingAddress</name></name></expr>
                </then><else>: <expr><name><name>EditAddressDialog</name><operator>::</operator><name>EditSendingAddress</name></name></expr></else></ternary></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>addressBook</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>loadRow</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else
        <block>{<block_content>
            <comment type="line">// Add sending address</comment>
            <decl_stmt><decl><type><name>EditAddressDialog</name></type> <name>dlg</name><argument_list>(<argument><expr><name><name>EditAddressDialog</name><operator>::</operator><name>NewSendingAddress</name></name></expr></argument>,
                <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>addressBook</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setAddress</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>showDetails</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>selection</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>TransactionDescDialog</name> <modifier>*</modifier></type><name>dlg</name> <init>= <expr><operator>new</operator> <call><name>TransactionDescDialog</name><argument_list>(<argument><expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>-&gt;</operator><name>setAttribute</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>WA_DeleteOnClose</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>-&gt;</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>openThirdPartyTxUrl</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>url</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionView</name> <operator>||</operator> <operator>!</operator><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>selection</name> <init>= <expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>selection</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
         <expr_stmt><expr><call><name><name>QDesktopServices</name><operator>::</operator><name>openUrl</name></name><argument_list>(<argument><expr><call><name><name>QUrl</name><operator>::</operator><name>fromUserInput</name></name><argument_list>(<argument><expr><call><name><name>url</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><call><name><name>selection</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>QWidget</name> <modifier>*</modifier></type><name><name>TransactionView</name><operator>::</operator><name>createDateRangeWidget</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name>dateRangeWidget</name> <operator>=</operator> <operator>new</operator> <call><name>QFrame</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateRangeWidget</name><operator>-&gt;</operator><name>setFrameStyle</name></name><argument_list>(<argument><expr><name><name>QFrame</name><operator>::</operator><name>Panel</name></name> <operator>|</operator> <name><name>QFrame</name><operator>::</operator><name>Raised</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateRangeWidget</name><operator>-&gt;</operator><name>setContentsMargins</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QHBoxLayout</name> <modifier>*</modifier></type><name>layout</name> <init>= <expr><operator>new</operator> <call><name>QHBoxLayout</name><argument_list>(<argument><expr><name>dateRangeWidget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>setContentsMargins</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addSpacing</name></name><argument_list>(<argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>QLabel</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Range:"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>dateFrom</name> <operator>=</operator> <operator>new</operator> <call><name>QDateTimeEdit</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateFrom</name><operator>-&gt;</operator><name>setDisplayFormat</name></name><argument_list>(<argument><expr><literal type="string">"dd/MM/yy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateFrom</name><operator>-&gt;</operator><name>setCalendarPopup</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateFrom</name><operator>-&gt;</operator><name>setMinimumWidth</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateFrom</name><operator>-&gt;</operator><name>setDate</name></name><argument_list>(<argument><expr><call><name><name>QDate</name><operator>::</operator><name>currentDate</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addDays</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>dateFrom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>QLabel</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"to"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>dateTo</name> <operator>=</operator> <operator>new</operator> <call><name>QDateTimeEdit</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateTo</name><operator>-&gt;</operator><name>setDisplayFormat</name></name><argument_list>(<argument><expr><literal type="string">"dd/MM/yy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateTo</name><operator>-&gt;</operator><name>setCalendarPopup</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateTo</name><operator>-&gt;</operator><name>setMinimumWidth</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dateTo</name><operator>-&gt;</operator><name>setDate</name></name><argument_list>(<argument><expr><call><name><name>QDate</name><operator>::</operator><name>currentDate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>dateTo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>layout</name><operator>-&gt;</operator><name>addStretch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Hide by default</comment>
    <expr_stmt><expr><call><name><name>dateRangeWidget</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Notify on change</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>dateFrom</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QDateTimeEdit</name><operator>::</operator><name>dateChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>dateRangeChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>dateTo</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QDateTimeEdit</name><operator>::</operator><name>dateChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>dateRangeChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>dateRangeWidget</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>dateRangeChanged</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>setDateRange</name></name><argument_list>(
            <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name><name>dateFrom</name><operator>-&gt;</operator><name>date</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>QDateTime</name><argument_list>(<argument><expr><call><name><name>dateTo</name><operator>-&gt;</operator><name>date</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>addDays</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>focusTransaction</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>targetIdx</name> <init>= <expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>mapFromSource</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>scrollTo</name></name><argument_list>(<argument><expr><name>targetIdx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setCurrentIndex</name></name><argument_list>(<argument><expr><name>targetIdx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>focusTransaction</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint256</name><modifier>&amp;</modifier></type> <name>txid</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>transactionProxyModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><specifier>const</specifier> <name>QModelIndexList</name></type> <name>results</name> <init>= <expr><call><name><name>this</name><operator>-&gt;</operator><name>model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>match</name><argument_list>(
        <argument><expr><call><name><name>this</name><operator>-&gt;</operator><name>model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>index</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>,
        <argument><expr><call><name><name>QString</name><operator>::</operator><name>fromStdString</name></name><argument_list>(<argument><expr><call><name><name>txid</name><operator>.</operator><name>ToString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>clearSelection</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><specifier>const</specifier> <name>QModelIndex</name><modifier>&amp;</modifier></type> <name>index</name> <range>: <expr><name>results</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><specifier>const</specifier> <name>QModelIndex</name></type> <name>targetIndex</name> <init>= <expr><call><name><name>transactionProxyModel</name><operator>-&gt;</operator><name>mapFromSource</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>select</name><argument_list>(
            <argument><expr><name>targetIndex</name></expr></argument>,
            <argument><expr><name><name>QItemSelectionModel</name><operator>::</operator><name>Rows</name></name> <operator>|</operator> <name><name>QItemSelectionModel</name><operator>::</operator><name>Select</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// Called once per destination to ensure all results are in view, unless</comment>
        <comment type="line">// transactions are not ordered by (ascending or descending) date.</comment>
        <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>scrollTo</name></name><argument_list>(<argument><expr><name>targetIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// scrollTo() does not scroll far enough the first time when transactions</comment>
        <comment type="line">// are ordered by ascending date.</comment>
        <if_stmt><if>if <condition>(<expr><name>index</name> <operator>==</operator> <name><name>results</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>scrollTo</name></name><argument_list>(<argument><expr><name>targetIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>

<comment type="line">// We override the virtual resizeEvent of the QWidget to adjust tables column</comment>
<comment type="line">// sizes as the tables width is proportional to the dialogs width.</comment>
<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>resizeEvent</name></name><parameter_list>(<parameter><decl><type><name>QResizeEvent</name><modifier>*</modifier></type> <name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>resizeEvent</name></name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>columnResizingFixer</name><operator>-&gt;</operator><name>stretchColumnWidth</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>ToAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// Need to override default Ctrl+C action for amount as default behaviour is just to copy DisplayRole text</comment>
<function><type><name>bool</name></type> <name><name>TransactionView</name><operator>::</operator><name>eventFilter</name></name><parameter_list>(<parameter><decl><type><name>QObject</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>QEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>event</name><operator>-&gt;</operator><name>type</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>QEvent</name><operator>::</operator><name>KeyPress</name></name></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>QKeyEvent</name> <modifier>*</modifier></type><name>ke</name> <init>= <expr><cast type="static">static_cast<argument_list type="generic">&lt;<argument><expr><name>QKeyEvent</name> <operator>*</operator></expr></argument>&gt;</argument_list><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></cast></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>ke</name><operator>-&gt;</operator><name>key</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>Key_C</name></name> <operator>&amp;&amp;</operator> <call><name><name>ke</name><operator>-&gt;</operator><name>modifiers</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>testFlag</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ControlModifier</name></name></expr></argument>)</argument_list></call></expr>)</condition>
        <block>{<block_content>
             <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxPlainTextRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>QWidget</name><operator>::</operator><name>eventFilter</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="line">// show/hide column Watch-only</comment>
<function><type><name>void</name></type> <name><name>TransactionView</name><operator>::</operator><name>updateWatchOnlyColumn</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fHaveWatchOnly</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>watchOnlyWidget</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>fHaveWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setColumnHidden</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Watchonly</name></name></expr></argument>, <argument><expr><operator>!</operator><name>fHaveWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
