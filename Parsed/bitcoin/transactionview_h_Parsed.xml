<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/transactionview.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_TRANSACTIONVIEW_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_TRANSACTIONVIEW_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;uint256.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QWidget&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QKeyEvent&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>TransactionFilterProxy</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QComboBox</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QDateTimeEdit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QFrame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QLineEdit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QMenu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QModelIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QTableView</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/** Widget showing the transaction list for a wallet, including a filter row.
    Using the filter row, the user can view or export a subset of the transactions.
  */</comment>
<name>class</name></type> <name>TransactionView</name> <range>: <expr><name>public</name> <name>QWidget</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>TransactionView</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr></argument>, <argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// Date ranges for filter</comment>
    enum <expr><name>DateEnum</name>
    <block>{
        <expr><name>All</name></expr>,
        <expr><name>Today</name></expr>,
        <expr><name>ThisWeek</name></expr>,
        <expr><name>ThisMonth</name></expr>,
        <expr><name>LastMonth</name></expr>,
        <expr><name>ThisYear</name></expr>,
        <expr><name>Range</name></expr>
    }</block></expr>;

    enum <expr><name>ColumnWidths</name> <block>{
        <expr><name>STATUS_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">30</literal></expr>,
        <expr><name>WATCHONLY_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">23</literal></expr>,
        <expr><name>DATE_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">120</literal></expr>,
        <expr><name>TYPE_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">113</literal></expr>,
        <expr><name>AMOUNT_MINIMUM_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">120</literal></expr>,
        <expr><name>MINIMUM_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">23</literal></expr>
    }</block></expr>;

<expr><name>private</name><operator>:</operator>
    <name>WalletModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><name>TransactionFilterProxy</name> <operator>*</operator><name>transactionProxyModel</name></expr>;
    <expr><name>QTableView</name> <operator>*</operator><name>transactionView</name></expr>;

    <expr><name>QComboBox</name> <operator>*</operator><name>dateWidget</name></expr>;
    <expr><name>QComboBox</name> <operator>*</operator><name>typeWidget</name></expr>;
    <expr><name>QComboBox</name> <operator>*</operator><name>watchOnlyWidget</name></expr>;
    <expr><name>QLineEdit</name> <operator>*</operator><name>search_widget</name></expr>;
    <expr><name>QLineEdit</name> <operator>*</operator><name>amountWidget</name></expr>;

    <expr><name>QMenu</name> <operator>*</operator><name>contextMenu</name></expr>;

    <expr><name>QFrame</name> <operator>*</operator><name>dateRangeWidget</name></expr>;
    <expr><name>QDateTimeEdit</name> <operator>*</operator><name>dateFrom</name></expr>;
    <expr><name>QDateTimeEdit</name> <operator>*</operator><name>dateTo</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>abandonAction</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>bumpFeeAction</name></expr>;

    <expr><name>QWidget</name> <operator>*</operator><call><name>createDateRangeWidget</name><argument_list>()</argument_list></call></expr>;

    <expr><name>GUIUtil</name><operator>::</operator><name>TableViewLastColumnResizingFixer</name> <operator>*</operator><name>columnResizingFixer</name></expr>;

    <expr><name>virtual</name> <name>void</name> <call><name>resizeEvent</name><argument_list>(<argument><expr><name>QResizeEvent</name><operator>*</operator> <name>event</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>bool</name> <call><name>eventFilter</name><argument_list>(<argument><expr><name>QObject</name> <operator>*</operator><name>obj</name></expr></argument>, <argument><expr><name>QEvent</name> <operator>*</operator><name>event</name></expr></argument>)</argument_list></call></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>contextualMenu</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QPoint</name> <operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>dateRangeChanged</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>showDetails</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyAddress</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>editLabel</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyLabel</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyAmount</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyTxID</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyTxHex</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyTxPlainText</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <macro><name>openThirdPartyTxUrl</name><argument_list>(<argument>QString url</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <macro><name>updateWatchOnlyColumn</name><argument_list>(<argument>bool fHaveWatchOnly</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>abandonTx</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>bumpFee</name><argument_list>()</argument_list></call></expr>;

<expr><name>Q_SIGNALS</name><operator>:</operator>
    <name>void</name> <call><name>doubleClicked</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QModelIndex</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;

    <comment type="block" format="doxygen">/**  Fired when a message should be reported to the user */</comment>
    <expr><name>void</name> <macro><name>message</name><argument_list>(<argument>const QString &amp;title</argument>, <argument>const QString &amp;message</argument>, <argument>unsigned int style</argument>)</argument_list></macro></expr>;

    <expr><name>void</name> <call><name>bumpedFee</name><argument_list>(<argument><expr><specifier>const</specifier> <name>uint256</name><operator>&amp;</operator> <name>txid</name></expr></argument>)</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <macro><name>chooseDate</name><argument_list>(<argument>int idx</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <macro><name>chooseType</name><argument_list>(<argument>int idx</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <macro><name>chooseWatchonly</name><argument_list>(<argument>int idx</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>changedAmount</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>changedSearch</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>exportClicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>focusTransaction</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QModelIndex</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>focusTransaction</name><argument_list>(<argument><expr><specifier>const</specifier> <name>uint256</name><operator>&amp;</operator> <name>txid</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_TRANSACTIONVIEW_H</comment>
</unit>
