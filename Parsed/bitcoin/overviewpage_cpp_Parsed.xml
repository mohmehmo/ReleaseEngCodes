<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/overviewpage.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/overviewpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/forms/ui_overviewpage.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/bitcoinunits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/clientmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiconstants.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/optionsmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionfilterproxy.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactiontablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QAbstractItemDelegate&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPainter&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECORATION_SIZE</name></cpp:macro> <cpp:value>54</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NUM_ITEMS</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<macro><name>Q_DECLARE_METATYPE</name><argument_list>(<argument>interfaces::WalletBalances</argument>)</argument_list></macro>

<class>class <name>TxViewDelegate</name> <super_list>: <super><specifier>public</specifier> <name>QAbstractItemDelegate</name></super></super_list>
<block>{<private type="default">
    <macro><name>Q_OBJECT</name></macro>
</private><public>public:
    <constructor><specifier>explicit</specifier> <name>TxViewDelegate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>_platformStyle</name></decl></parameter>, <parameter><decl><type><name>QObject</name> <modifier>*</modifier></type><name>parent</name><init>=<expr><literal type="null">nullptr</literal></expr></init></decl></parameter>)</parameter_list><member_init_list>:
        <call><name>QAbstractItemDelegate</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>, <call><name>unit</name><argument_list>(<argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>BTC</name></name></expr></argument>)</argument_list></call>,
        <call><name>platformStyle</name><argument_list>(<argument><expr><name>_platformStyle</name></expr></argument>)</argument_list></call>
    </member_init_list><block>{<block_content>

    </block_content>}</block></constructor>

    <function><type><specifier>inline</specifier> <name>void</name></type> <name>paint</name><parameter_list>(<parameter><decl><type><name>QPainter</name> <modifier>*</modifier></type><name>painter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QStyleOptionViewItem</name> <modifier>&amp;</modifier></type><name>option</name></decl></parameter>,
                      <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter> )</parameter_list> <specifier>const</specifier>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>save</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>QIcon</name></type> <name>icon</name> <init>= <expr><call><name><name>qvariant_cast</name><argument_list type="generic">&lt;<argument><expr><name>QIcon</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>RawDecorationRole</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QRect</name></type> <name>mainRect</name> <init>= <expr><name><name>option</name><operator>.</operator><name>rect</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QRect</name></type> <name>decorationRect</name><argument_list>(<argument><expr><call><name><name>mainRect</name><operator>.</operator><name>topLeft</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>QSize</name><argument_list>(<argument><expr><name>DECORATION_SIZE</name></expr></argument>, <argument><expr><name>DECORATION_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>xspace</name> <init>= <expr><name>DECORATION_SIZE</name> <operator>+</operator> <literal type="number">8</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>ypad</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>halfheight</name> <init>= <expr><operator>(</operator><call><name><name>mainRect</name><operator>.</operator><name>height</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">2</literal><operator>*</operator><name>ypad</name><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QRect</name></type> <name>amountRect</name><argument_list>(<argument><expr><call><name><name>mainRect</name><operator>.</operator><name>left</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>xspace</name></expr></argument>, <argument><expr><call><name><name>mainRect</name><operator>.</operator><name>top</name></name><argument_list>()</argument_list></call><operator>+</operator><name>ypad</name></expr></argument>, <argument><expr><call><name><name>mainRect</name><operator>.</operator><name>width</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>xspace</name></expr></argument>, <argument><expr><name>halfheight</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QRect</name></type> <name>addressRect</name><argument_list>(<argument><expr><call><name><name>mainRect</name><operator>.</operator><name>left</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>xspace</name></expr></argument>, <argument><expr><call><name><name>mainRect</name><operator>.</operator><name>top</name></name><argument_list>()</argument_list></call><operator>+</operator><name>ypad</name><operator>+</operator><name>halfheight</name></expr></argument>, <argument><expr><call><name><name>mainRect</name><operator>.</operator><name>width</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>xspace</name></expr></argument>, <argument><expr><name>halfheight</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><name>icon</name> <operator>=</operator> <call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>icon</name><operator>.</operator><name>paint</name></name><argument_list>(<argument><expr><name>painter</name></expr></argument>, <argument><expr><name>decorationRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>QDateTime</name></type> <name>date</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>DateRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toDateTime</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QString</name></type> <name>address</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>qint64</name></type> <name>amount</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AmountRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toLongLong</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>bool</name></type> <name>confirmed</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>ConfirmedRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toBool</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QVariant</name></type> <name>value</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ForegroundRole</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>QColor</name></type> <name>foreground</name> <init>= <expr><call><name><name>option</name><operator>.</operator><name>palette</name><operator>.</operator><name>color</name></name><argument_list>(<argument><expr><name><name>QPalette</name><operator>::</operator><name>Text</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><call><name><name>value</name><operator>.</operator><name>canConvert</name><argument_list type="generic">&lt;<argument><expr><name>QBrush</name></expr></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <decl_stmt><decl><type><name>QBrush</name></type> <name>brush</name> <init>= <expr><call><name><name>qvariant_cast</name><argument_list type="generic">&lt;<argument><expr><name>QBrush</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>foreground</name> <operator>=</operator> <call><name><name>brush</name><operator>.</operator><name>color</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>setPen</name></name><argument_list>(<argument><expr><name>foreground</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>QRect</name></type> <name>boundingRect</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>drawText</name></name><argument_list>(<argument><expr><name>addressRect</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>AlignLeft</name></name><operator>|</operator><name><name>Qt</name><operator>::</operator><name>AlignVCenter</name></name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>boundingRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>WatchonlyRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toBool</name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <decl_stmt><decl><type><name>QIcon</name></type> <name>iconWatchonly</name> <init>= <expr><call><name><name>qvariant_cast</name><argument_list type="generic">&lt;<argument><expr><name>QIcon</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>WatchonlyDecorationRole</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>QRect</name></type> <name>watchonlyRect</name><argument_list>(<argument><expr><call><name><name>boundingRect</name><operator>.</operator><name>right</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>mainRect</name><operator>.</operator><name>top</name></name><argument_list>()</argument_list></call><operator>+</operator><name>ypad</name><operator>+</operator><name>halfheight</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>halfheight</name></expr></argument>)</argument_list></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>iconWatchonly</name><operator>.</operator><name>paint</name></name><argument_list>(<argument><expr><name>painter</name></expr></argument>, <argument><expr><name>watchonlyRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if<condition>(<expr><name>amount</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><name>foreground</name> <operator>=</operator> <name>COLOR_NEGATIVE</name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif">else if<condition>(<expr><operator>!</operator><name>confirmed</name></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><name>foreground</name> <operator>=</operator> <name>COLOR_UNCONFIRMED</name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else
        <block>{<block_content>
            <expr_stmt><expr><name>foreground</name> <operator>=</operator> <call><name><name>option</name><operator>.</operator><name>palette</name><operator>.</operator><name>color</name></name><argument_list>(<argument><expr><name><name>QPalette</name><operator>::</operator><name>Text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>setPen</name></name><argument_list>(<argument><expr><name>foreground</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>QString</name></type> <name>amountText</name> <init>= <expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name>amount</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><operator>!</operator><name>confirmed</name></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><name>amountText</name> <operator>=</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"["</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>amountText</name> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>drawText</name></name><argument_list>(<argument><expr><name>amountRect</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>AlignRight</name></name><operator>|</operator><name><name>Qt</name><operator>::</operator><name>AlignVCenter</name></name></expr></argument>, <argument><expr><name>amountText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>setPen</name></name><argument_list>(<argument><expr><call><name><name>option</name><operator>.</operator><name>palette</name><operator>.</operator><name>color</name></name><argument_list>(<argument><expr><name><name>QPalette</name><operator>::</operator><name>Text</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>drawText</name></name><argument_list>(<argument><expr><name>amountRect</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>AlignLeft</name></name><operator>|</operator><name><name>Qt</name><operator>::</operator><name>AlignVCenter</name></name></expr></argument>, <argument><expr><call><name><name>GUIUtil</name><operator>::</operator><name>dateTimeStr</name></name><argument_list>(<argument><expr><name>date</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>painter</name><operator>-&gt;</operator><name>restore</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>inline</specifier> <name>QSize</name></type> <name>sizeHint</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QStyleOptionViewItem</name> <modifier>&amp;</modifier></type><name>option</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
    <block>{<block_content>
        <return>return <expr><call><name>QSize</name><argument_list>(<argument><expr><name>DECORATION_SIZE</name></expr></argument>, <argument><expr><name>DECORATION_SIZE</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <decl_stmt><decl><type><name>int</name></type> <name>unit</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>platformStyle</name></decl>;</decl_stmt>

</public>}</block>;</class>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/overviewpage.moc&gt;</cpp:file></cpp:include>

<constructor><name><name>OverviewPage</name><operator>::</operator><name>OverviewPage</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>platformStyle</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QWidget</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>ui</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Ui</name><operator>::</operator><name>OverviewPage</name></name></expr></argument>)</argument_list></call>,
    <call><name>clientModel</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>walletModel</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>txdelegate</name><argument_list>(<argument><expr><operator>new</operator> <call><name>TxViewDelegate</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>setupUi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>m_balances</name><operator>.</operator><name>balance</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

    <comment type="line">// use a SingleColorIcon for the "out of sync warning" icon</comment>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>icon</name> <init>= <expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/warning"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>icon</name><operator>.</operator><name>addPixmap</name></name><argument_list>(<argument><expr><call><name><name>icon</name><operator>.</operator><name>pixmap</name></name><argument_list>(<argument><expr><call><name>QSize</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>,<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>QIcon</name><operator>::</operator><name>Normal</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>QIcon</name><operator>::</operator><name>Disabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// also set the disabled icon because we are using a disabled QPushButton to work around missing HiDPI support of QLabel (https://bugreports.qt.io/browse/QTBUG-42503)</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelTransactionsStatus</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWalletStatus</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Recent transactions</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setItemDelegate</name></name><argument_list>(<argument><expr><name>txdelegate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setIconSize</name></name><argument_list>(<argument><expr><call><name>QSize</name><argument_list>(<argument><expr><name>DECORATION_SIZE</name></expr></argument>, <argument><expr><name>DECORATION_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setMinimumHeight</name></name><argument_list>(<argument><expr><name>NUM_ITEMS</name> <operator>*</operator> <operator>(</operator><name>DECORATION_SIZE</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setAttribute</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>WA_MacShowFocusRect</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QListView</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>handleTransactionClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// start with displaying the "out of sync" warnings</comment>
    <expr_stmt><expr><call><name>showOutOfSyncWarning</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>labelWalletStatus</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>handleOutOfSyncWarningClicks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>labelTransactionsStatus</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>handleOutOfSyncWarningClicks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>handleTransactionClicked</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><name>filter</name></expr>)</condition><block type="pseudo"><block_content>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>transactionClicked</name><argument_list>(<argument><expr><call><name><name>filter</name><operator>-&gt;</operator><name>mapToSource</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>handleOutOfSyncWarningClicks</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>outOfSyncWarningClicked</name><argument_list>()</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<destructor><name><name>OverviewPage</name><operator>::</operator><name>~OverviewPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>delete</operator> <name>ui</name></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>setBalance</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>interfaces</name><operator>::</operator><name>WalletBalances</name></name><modifier>&amp;</modifier></type> <name>balances</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>unit</name> <init>= <expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>m_balances</name> <operator>=</operator> <name>balances</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>privateKeysDisabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelBalance</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelUnconfirmed</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>unconfirmed_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelImmature</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>immature_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelTotal</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>watch_only_balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>unconfirmed_watch_only_balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>immature_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelBalance</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelUnconfirmed</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>unconfirmed_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelImmature</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>immature_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelTotal</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>unconfirmed_balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>immature_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchAvailable</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchPending</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>unconfirmed_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchImmature</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>immature_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchTotal</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>formatWithUnit</name></name><argument_list>(<argument><expr><name>unit</name></expr></argument>, <argument><expr><name><name>balances</name><operator>.</operator><name>watch_only_balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>unconfirmed_watch_only_balance</name></name> <operator>+</operator> <name><name>balances</name><operator>.</operator><name>immature_watch_only_balance</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorAlways</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <comment type="line">// only show immature (newly mined) balance if it's non-zero, so as not to complicate things</comment>
    <comment type="line">// for the non-mining users</comment>
    <decl_stmt><decl><type><name>bool</name></type> <name>showImmature</name> <init>= <expr><name><name>balances</name><operator>.</operator><name>immature_balance</name></name> <operator>!=</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>showWatchOnlyImmature</name> <init>= <expr><name><name>balances</name><operator>.</operator><name>immature_watch_only_balance</name></name> <operator>!=</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// for symmetry reasons also show immature label when the watch-only one is shown</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelImmature</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showImmature</name> <operator>||</operator> <name>showWatchOnlyImmature</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelImmatureText</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showImmature</name> <operator>||</operator> <name>showWatchOnlyImmature</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchImmature</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>walletModel</name><operator>-&gt;</operator><name>privateKeysDisabled</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>showWatchOnlyImmature</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// show watch-only immature balance</comment>
</block_content>}</block></function>

<comment type="line">// show/hide watch-only labels</comment>
<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>updateWatchOnlyLabels</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>showWatchOnly</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelSpendable</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="line">// show spendable label (only when watch-only is active)</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchonly</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="line">// show watch-only label</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>lineWatchBalance</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line">// show watch-only balance separator line</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchAvailable</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// show watch-only available balance</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchPending</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line">// show watch-only pending balance</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchTotal</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>showWatchOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line">// show watch-only total balance</comment>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>showWatchOnly</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWatchImmature</name><operator>-&gt;</operator><name>hide</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>setClientModel</name></name><parameter_list>(<parameter><decl><type><name>ClientModel</name> <modifier>*</modifier></type><name>model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>clientModel</name></name> <operator>=</operator> <name>model</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>model</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// Show warning, for example if this is a prerelease version</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>model</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ClientModel</name><operator>::</operator><name>alertsChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>updateAlerts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>updateAlerts</name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getStatusBarWarnings</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>setWalletModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>walletModel</name></name> <operator>=</operator> <name>model</name></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><name>model</name> <operator>&amp;&amp;</operator> <call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Set up transaction list</comment>
        <expr_stmt><expr><call><name><name>filter</name><operator>.</operator><name>reset</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TransactionFilterProxy</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>setSourceModel</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>setLimit</name></name><argument_list>(<argument><expr><name>NUM_ITEMS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>setDynamicSortFilter</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>setSortRole</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>setShowInactive</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>filter</name><operator>-&gt;</operator><name>sort</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Date</name></name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>DescendingOrder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>setModelColumn</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>ToAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keep up to date with wallet</comment>
        <decl_stmt><decl><type><name><name>interfaces</name><operator>::</operator><name>Wallet</name></name><modifier>&amp;</modifier></type> <name>wallet</name> <init>= <expr><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>interfaces</name><operator>::</operator><name>WalletBalances</name></name></type> <name>balances</name> <init>= <expr><call><name><name>wallet</name><operator>.</operator><name>getBalances</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>setBalance</name><argument_list>(<argument><expr><name>balances</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>model</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>balanceChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>setBalance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OptionsModel</name><operator>::</operator><name>displayUnitChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>updateDisplayUnit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>updateWatchOnlyLabels</name><argument_list>(<argument><expr><call><name><name>wallet</name><operator>.</operator><name>haveWatchOnly</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>model</name><operator>-&gt;</operator><name>privateKeysDisabled</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>model</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>notifyWatchonlyChanged</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>this</name></argument>]</capture><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>showWatchOnly</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>updateWatchOnlyLabels</name><argument_list>(<argument><expr><name>showWatchOnly</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>walletModel</name><operator>-&gt;</operator><name>privateKeysDisabled</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// update the display unit, to not use the default ("BTC")</comment>
    <expr_stmt><expr><call><name>updateDisplayUnit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>updateDisplayUnit</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><name>walletModel</name> <operator>&amp;&amp;</operator> <call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>m_balances</name><operator>.</operator><name>balance</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>setBalance</name><argument_list>(<argument><expr><name>m_balances</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// Update txdelegate-&gt;unit with the current unit</comment>
        <expr_stmt><expr><name><name>txdelegate</name><operator>-&gt;</operator><name>unit</name></name> <operator>=</operator> <call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>listTransactions</name><operator>-&gt;</operator><name>update</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>updateAlerts</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>warnings</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>this</name><operator>-&gt;</operator><name>ui</name><operator>-&gt;</operator><name>labelAlerts</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>warnings</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>-&gt;</operator><name>ui</name><operator>-&gt;</operator><name>labelAlerts</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name>warnings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>OverviewPage</name><operator>::</operator><name>showOutOfSyncWarning</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fShow</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelWalletStatus</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>fShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelTransactionsStatus</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><name>fShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
