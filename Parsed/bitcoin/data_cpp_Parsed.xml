<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/bench/data.cpp"><comment type="line">// Copyright (c) 2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bench/data.h&gt;</cpp:file></cpp:include>

<namespace>namespace <name>benchmark</name> <block>{
<namespace>namespace <name>data</name> <block>{

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bench/data/block413567.raw.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>uint8_t</name></expr></argument>&gt;</argument_list></name></type> <name>block413567</name><argument_list>{<argument><expr><name>block413567_raw</name></expr></argument>, <argument><expr><name>block413567_raw</name> <operator>+</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>block413567_raw</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> sizeof<operator>(</operator><name><name>block413567_raw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator></expr></argument>}</argument_list></decl>;</decl_stmt>

}</block></namespace> <comment type="line">// namespace data</comment>
}</block></namespace> <comment type="line">// namespace benchmark</comment>
</unit>
