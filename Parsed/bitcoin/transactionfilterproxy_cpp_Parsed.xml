<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/transactionfilterproxy.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionfilterproxy.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactiontablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionrecord.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdlib&gt;</cpp:file></cpp:include>

<comment type="line">// Earliest date that can be represented (far in the past)</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>QDateTime</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>MIN_DATE</name></name> <init>= <expr><call><name><name>QDateTime</name><operator>::</operator><name>fromTime_t</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<comment type="line">// Last date that can be represented (far in the future)</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>QDateTime</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>MAX_DATE</name></name> <init>= <expr><call><name><name>QDateTime</name><operator>::</operator><name>fromTime_t</name></name><argument_list>(<argument><expr><literal type="number">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<constructor><name><name>TransactionFilterProxy</name><operator>::</operator><name>TransactionFilterProxy</name></name><parameter_list>(<parameter><decl><type><name>QObject</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QSortFilterProxyModel</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>dateFrom</name><argument_list>(<argument><expr><name>MIN_DATE</name></expr></argument>)</argument_list></call>,
    <call><name>dateTo</name><argument_list>(<argument><expr><name>MAX_DATE</name></expr></argument>)</argument_list></call>,
    <call><name>m_search_string</name><argument_list>()</argument_list></call>,
    <call><name>typeFilter</name><argument_list>(<argument><expr><name>ALL_TYPES</name></expr></argument>)</argument_list></call>,
    <call><name>watchOnlyFilter</name><argument_list>(<argument><expr><name>WatchOnlyFilter_All</name></expr></argument>)</argument_list></call>,
    <call><name>minAmount</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call>,
    <call><name>limitRows</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call>,
    <call><name>showInactive</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
</block_content>}</block></constructor>

<function><type><name>bool</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>filterAcceptsRow</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>sourceRow</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>sourceParent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>index</name> <init>= <expr><call><name>sourceModel</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>index</name><argument_list>(<argument><expr><name>sourceRow</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>sourceParent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>status</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>StatusRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInt</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>showInactive</name> <operator>&amp;&amp;</operator> <name>status</name> <operator>==</operator> <name><name>TransactionStatus</name><operator>::</operator><name>Conflicted</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>type</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TypeRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInt</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>TYPE</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>typeFilter</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>bool</name></type> <name>involvesWatchAddress</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>WatchonlyRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toBool</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>involvesWatchAddress</name> <operator>&amp;&amp;</operator> <name>watchOnlyFilter</name> <operator>==</operator> <name>WatchOnlyFilter_No</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>involvesWatchAddress</name> <operator>&amp;&amp;</operator> <name>watchOnlyFilter</name> <operator>==</operator> <name>WatchOnlyFilter_Yes</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>QDateTime</name></type> <name>datetime</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>DateRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toDateTime</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>datetime</name> <argument_list type="generic">&lt; <argument><expr><name>dateFrom</name> <operator>||</operator> <name>datetime</name></expr></argument> &gt;</argument_list></name> <name>dateTo</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>QString</name></type> <name>address</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AddressRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>label</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>LabelRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>txid</name> <init>= <expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>TxHashRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>address</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>m_search_string</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
        <operator>!</operator>  <call><name><name>label</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>m_search_string</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
        <operator>!</operator>   <call><name><name>txid</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>m_search_string</name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>qint64</name></type> <name>amount</name> <init>= <expr><call><name>llabs</name><argument_list>(<argument><expr><call><name><name>index</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AmountRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toLongLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>amount</name> <operator>&lt;</operator> <name>minAmount</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setDateRange</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QDateTime</name> <modifier>&amp;</modifier></type><name>from</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QDateTime</name> <modifier>&amp;</modifier></type><name>to</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>dateFrom</name></name> <operator>=</operator> <name>from</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>dateTo</name></name> <operator>=</operator> <name>to</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setSearchString</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>search_string</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>m_search_string</name> <operator>==</operator> <name>search_string</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name>m_search_string</name> <operator>=</operator> <name>search_string</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setTypeFilter</name></name><parameter_list>(<parameter><decl><type><name>quint32</name></type> <name>modes</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>typeFilter</name></name> <operator>=</operator> <name>modes</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setMinAmount</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>CAmount</name><modifier>&amp;</modifier></type> <name>minimum</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>minAmount</name></name> <operator>=</operator> <name>minimum</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setWatchOnlyFilter</name></name><parameter_list>(<parameter><decl><type><name>WatchOnlyFilter</name></type> <name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>watchOnlyFilter</name></name> <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setLimit</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>limit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>limitRows</name></name> <operator>=</operator> <name>limit</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>setShowInactive</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>_showInactive</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>showInactive</name></name> <operator>=</operator> <name>_showInactive</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>invalidateFilter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name><name>TransactionFilterProxy</name><operator>::</operator><name>rowCount</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><name>limitRows</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
    <block>{<block_content>
        <return>return <expr><call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><call><name><name>QSortFilterProxyModel</name><operator>::</operator><name>rowCount</name></name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>limitRows</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content>
        <return>return <expr><call><name><name>QSortFilterProxyModel</name><operator>::</operator><name>rowCount</name></name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>
</unit>
