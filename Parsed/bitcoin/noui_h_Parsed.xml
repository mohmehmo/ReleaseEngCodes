<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/noui.h"><comment type="line">// Copyright (c) 2013-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_NOUI_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_NOUI_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<comment type="block" format="doxygen">/** Non-GUI handler, which logs and prints messages. */</comment>
<decl_stmt><decl><type><name>bool</name></type> <name>noui_ThreadSafeMessageBox</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>message</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>caption</name></expr></argument>, <argument><expr><name>unsigned</name> <name>int</name> <name>style</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<comment type="block" format="doxygen">/** Non-GUI handler, which logs and prints questions. */</comment>
<decl_stmt><decl><type><name>bool</name></type> <name>noui_ThreadSafeQuestion</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator></expr></argument> <comment type="block">/* ignored interactive message */</comment>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>message</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>caption</name></expr></argument>, <argument><expr><name>unsigned</name> <name>int</name> <name>style</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<comment type="block" format="doxygen">/** Non-GUI handler, which only logs a message. */</comment>
<decl_stmt><decl><type><name>void</name></type> <name>noui_InitMessage</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>message</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen">/** Connect all bitcoind signal handlers */</comment>
<function_decl><type><name>void</name></type> <name>noui_connect</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block" format="doxygen">/** Redirect all bitcoind signal handlers to LogPrintf. Used to check or suppress output during test runs that produce expected errors */</comment>
<function_decl><type><name>void</name></type> <name>noui_test_redirect</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block" format="doxygen">/** Reconnects the regular Non-GUI handlers after having used noui_test_redirect */</comment>
<function_decl><type><name>void</name></type> <name>noui_reconnect</name><parameter_list>()</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_NOUI_H</comment>
</unit>
