<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/recentrequeststablemodel.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/sendcoinsrecipient.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QAbstractTableModel&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QStringList&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDateTime&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>RecentRequestEntry</name>
<block>{<block_content>
<label><name>public</name>:</label>
    <expr_stmt><expr><call><name>RecentRequestEntry</name><argument_list>()</argument_list></call> <operator>:</operator> <call><name>nVersion</name><argument_list>(<argument><expr><name>RecentRequestEntry</name><operator>::</operator><name>CURRENT_VERSION</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>id</name><argument_list>(<argument><literal type="number">0</literal></argument>)</argument_list></macro> <expr><block>{ }</block>

    <specifier>static</specifier> <specifier>const</specifier> <name>int</name> <name>CURRENT_VERSION</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>nVersion</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>id</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QDateTime</name></type> <name>date</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SendCoinsRecipient</name></type> <name>recipient</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>ADD_SERIALIZE_METHODS</name></expr>;</expr_stmt>

    <function><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>Stream</name></expr></argument>, <argument><expr><name>typename</name> <name>Operation</name></expr></argument>&gt;</argument_list></name>
    <specifier>inline</specifier> <name>void</name></type> <name>SerializationOp</name><parameter_list>(<parameter><decl><type><name>Stream</name><modifier>&amp;</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>Operation</name></type> <name>ser_action</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nDate</name> <init>= <expr><call><name><name>date</name><operator>.</operator><name>toTime_t</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>READWRITE</name><argument_list>(<argument><expr><name><name>this</name><operator>-&gt;</operator><name>nVersion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>READWRITE</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>READWRITE</name><argument_list>(<argument><expr><name>nDate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>READWRITE</name><argument_list>(<argument><expr><name>recipient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>ser_action</name><operator>.</operator><name>ForRead</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>date</name> <operator>=</operator> <name>QDateTime</name><operator>::</operator><call><name>fromTime_t</name><argument_list>(<argument><expr><name>nDate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></function>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>RecentRequestEntryLessThan</name>
<block>{<block_content>
<label><name>public</name>:</label>
    <macro><name>RecentRequestEntryLessThan</name><argument_list>(<argument>int nColumn</argument>, <argument>Qt::SortOrder fOrder</argument>)</argument_list></macro>:
        <expr_stmt><expr><call><name>column</name><argument_list>(<argument><expr><name>nColumn</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>order</name><argument_list>(<argument>fOrder</argument>)</argument_list></macro> <expr><block>{}</block>
    <name>bool</name> <macro><name>operator</name><argument_list>()</argument_list></macro><operator>(</operator><specifier>const</specifier> <name>RecentRequestEntry</name><operator>&amp;</operator> <name>left</name><operator>,</operator> <specifier>const</specifier> <name>RecentRequestEntry</name><operator>&amp;</operator> <name>right</name><operator>)</operator> <specifier>const</specifier></expr>;</expr_stmt>

<label><name>private</name>:</label>
    <decl_stmt><decl><type><name>int</name></type> <name>column</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>Qt</name><operator>::</operator><name>SortOrder</name> <name>order</name></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<comment type="block" format="doxygen">/** Model for list of recently generated payment requests / bitcoin: URIs.
 * Part of wallet model.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>RecentRequestsTableModel</name><range>: <expr><name>public</name> <name>QAbstractTableModel</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>RecentRequestsTableModel</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>parent</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>RecentRequestsTableModel</name><argument_list>()</argument_list></call></expr>;

    enum <expr><name>ColumnIndex</name> <block>{
        <expr><name>Date</name> <operator>=</operator> <literal type="number">0</literal></expr>,
        <expr><name>Label</name> <operator>=</operator> <literal type="number">1</literal></expr>,
        <expr><name>Message</name> <operator>=</operator> <literal type="number">2</literal></expr>,
        <expr><name>Amount</name> <operator>=</operator> <literal type="number">3</literal></expr>,
        <expr><name>NUMBER_OF_COLUMNS</name></expr>
    }</block></expr>;

    <comment type="block" format="doxygen">/** @name Methods overridden from QAbstractTableModel
        @{*/</comment>
    <expr><name>int</name> <macro><name>rowCount</name><argument_list>(<argument>const QModelIndex &amp;parent</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>int</name> <macro><name>columnCount</name><argument_list>(<argument>const QModelIndex &amp;parent</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>QVariant</name> <macro><name>data</name><argument_list>(<argument>const QModelIndex &amp;index</argument>, <argument>int role</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>bool</name> <macro><name>setData</name><argument_list>(<argument>const QModelIndex &amp;index</argument>, <argument>const QVariant &amp;value</argument>, <argument>int role</argument>)</argument_list></macro></expr>;
    <expr><name>QVariant</name> <macro><name>headerData</name><argument_list>(<argument>int section</argument>, <argument>Qt::Orientation orientation</argument>, <argument>int role</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>QModelIndex</name> <macro><name>index</name><argument_list>(<argument>int row</argument>, <argument>int column</argument>, <argument>const QModelIndex &amp;parent = QModelIndex()</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>bool</name> <macro><name>removeRows</name><argument_list>(<argument>int row</argument>, <argument>int count</argument>, <argument>const QModelIndex &amp;parent = QModelIndex()</argument>)</argument_list></macro></expr>;
    <expr><name>Qt</name><operator>::</operator><name>ItemFlags</name> <macro><name>flags</name><argument_list>(<argument>const QModelIndex &amp;index</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
    <comment type="block">/*@}*/</comment>

    <expr><specifier>const</specifier> <name>RecentRequestEntry</name> <operator>&amp;</operator><macro><name>entry</name><argument_list>(<argument>int row</argument>)</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name><name>list</name><index>[<expr><name>row</name></expr>]</index></name></expr>;</return> }</block>
    <name>void</name> <call><name>addNewRequest</name><argument_list>(<argument><expr><specifier>const</specifier> <name>SendCoinsRecipient</name> <operator>&amp;</operator><name>recipient</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>addNewRequest</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator><name>recipient</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>addNewRequest</name><argument_list>(<argument><expr><name>RecentRequestEntry</name> <operator>&amp;</operator><name>recipient</name></expr></argument>)</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <macro><name>sort</name><argument_list>(<argument>int column</argument>, <argument>Qt::SortOrder order = Qt::AscendingOrder</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>updateDisplayUnit</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>WalletModel</name> <operator>*</operator><name>walletModel</name></expr>;
    <expr><name>QStringList</name> <name>columns</name></expr>;
    <expr><name><name>QList</name><argument_list type="generic">&lt;<argument><expr><name>RecentRequestEntry</name></expr></argument>&gt;</argument_list></name> <name>list</name></expr>;
    <expr><name>int64_t</name> <name>nReceiveRequestsMaxId</name><block>{<expr><literal type="number">0</literal></expr>}</block></expr>;

    <comment type="block" format="doxygen">/** Updates the column title to "Amount (DisplayUnit)" and emits headerDataChanged() signal for table headers to react. */</comment>
    <expr><name>void</name> <call><name>updateAmountColumnTitle</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Gets title for amount column including current display unit if optionsModel reference available. */</comment>
    <expr><name>QString</name> <call><name>getAmountTitle</name><argument_list>()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H</comment>
</unit>
