<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/platformstyle.h"><comment type="line">// Copyright (c) 2015 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_PLATFORMSTYLE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_PLATFORMSTYLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QIcon&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPixmap&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QString&gt;</cpp:file></cpp:include>

<comment type="block">/* Coin network-specific GUI style information */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name>
<block>{<block_content>
<label><name>public</name>:</label>
    <comment type="block" format="doxygen">/** Get style associated with provided platform name, or 0 if not known */</comment>
    <function_decl><type><specifier>static</specifier> <specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>instantiate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>platformId</name></decl></parameter>)</parameter_list>;</function_decl>

    <expr_stmt><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><macro><name>getName</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>name</name></expr>;</return> }</block></expr></expr_stmt>

    <expr_stmt><expr><name>bool</name> <macro><name>getImagesOnButtons</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>imagesOnButtons</name></expr>;</return> }</block></expr></expr_stmt>
    <expr_stmt><expr><name>bool</name> <macro><name>getUseExtraSpacing</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>useExtraSpacing</name></expr>;</return> }</block></expr></expr_stmt>

    <expr_stmt><expr><name>QColor</name> <macro><name>TextColor</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>textColor</name></expr>;</return> }</block></expr></expr_stmt>
    <expr_stmt><expr><name>QColor</name> <macro><name>SingleColor</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>singleColor</name></expr>;</return> }</block></expr></expr_stmt>

    <comment type="block" format="doxygen">/** Colorize an image (given filename) with the icon color */</comment>
    <decl_stmt><decl><type><name>QImage</name></type> <name>SingleColorImage</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name><operator>&amp;</operator> <name>filename</name></expr></argument>)</argument_list> const</decl>;</decl_stmt>

    <comment type="block" format="doxygen">/** Colorize an icon (given filename) with the icon color */</comment>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>SingleColorIcon</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name><operator>&amp;</operator> <name>filename</name></expr></argument>)</argument_list> const</decl>;</decl_stmt>

    <comment type="block" format="doxygen">/** Colorize an icon (given object) with the icon color */</comment>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>SingleColorIcon</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QIcon</name><operator>&amp;</operator> <name>icon</name></expr></argument>)</argument_list> const</decl>;</decl_stmt>

    <comment type="block" format="doxygen">/** Colorize an icon (given object) with the text color */</comment>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>TextColorIcon</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QIcon</name><operator>&amp;</operator> <name>icon</name></expr></argument>)</argument_list> const</decl>;</decl_stmt>

<label><name>private</name>:</label>
    <macro><name>PlatformStyle</name><argument_list>(<argument>const QString &amp;name</argument>, <argument>bool imagesOnButtons</argument>, <argument>bool colorizeIcons</argument>, <argument>bool useExtraSpacing</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

    <decl_stmt><decl><type><name>QString</name></type> <name>name</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>imagesOnButtons</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>colorizeIcons</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>useExtraSpacing</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QColor</name></type> <name>singleColor</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QColor</name></type> <name>textColor</name></decl>;</decl_stmt>
    <comment type="block">/* ... more to come later */</comment>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_PLATFORMSTYLE_H</comment>

</unit>
