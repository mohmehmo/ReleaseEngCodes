<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/leveldb/db/log_format.h"><comment type="line">// Copyright (c) 2011 The LevelDB Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file. See the AUTHORS file for names of contributors.</comment>
<comment type="line">//</comment>
<comment type="line">// Log format information shared by reader and writer.</comment>
<comment type="line">// See ../doc/log_format.md for more detail.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>STORAGE_LEVELDB_DB_LOG_FORMAT_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STORAGE_LEVELDB_DB_LOG_FORMAT_H_</name></cpp:macro></cpp:define>

<decl_stmt><decl><type><name>namespace</name></type> <name>leveldb</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>log</name> <block>{<block_content>

<enum>enum <name>RecordType</name> <block>{
  <comment type="line">// Zero is reserved for preallocated files</comment>
  <decl><name>kZeroType</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

  <decl><name>kFullType</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

  <comment type="line">// For fragments</comment>
  <decl><name>kFirstType</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
  <decl><name>kMiddleType</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
  <decl><name>kLastType</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name>kMaxRecordType</name> <init>= <expr><name>kLastType</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name>kBlockSize</name> <init>= <expr><literal type="number">32768</literal></expr></init></decl>;</decl_stmt>

<comment type="line">// Header is checksum (4 bytes), length (2 bytes), type (1 byte).</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name>kHeaderSize</name> <init>= <expr><literal type="number">4</literal> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace log</comment>
</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace leveldb</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// STORAGE_LEVELDB_DB_LOG_FORMAT_H_</comment>
</unit>
