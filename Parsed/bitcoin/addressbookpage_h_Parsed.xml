<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/addressbookpage.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_ADDRESSBOOKPAGE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_ADDRESSBOOKPAGE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDialog&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>AddressBookSortFilterProxyModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>AddressTableModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>Ui</name> <block>{<block_content>
    <decl_stmt><decl><type><name>class</name></type> <name>AddressBookPage</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QItemSelection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QMenu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QModelIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/** Widget that shows a list of sending or receiving addresses.
  */</comment>
<name>class</name></type> <name>AddressBookPage</name> <range>: <expr><name>public</name> <name>QDialog</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    enum <name>Tabs</name> <block>{
        <expr><name>SendingTab</name> <operator>=</operator> <literal type="number">0</literal></expr>,
        <expr><name>ReceivingTab</name> <operator>=</operator> <literal type="number">1</literal></expr>
    }</block></expr>;

    enum <expr><name>Mode</name> <block>{
        <expr><name>ForSelection</name></expr>, <comment type="block" format="doxygen">/**&lt; Open address book to pick address */</comment>
        <expr><name>ForEditing</name></expr>  <comment type="block" format="doxygen">/**&lt; Open address book for editing */</comment>
    }</block></expr>;

    <expr><name>explicit</name> <macro><name>AddressBookPage</name><argument_list>(<argument>const PlatformStyle *platformStyle</argument>, <argument>Mode mode</argument>, <argument>Tabs tab</argument>, <argument>QWidget *parent = nullptr</argument>)</argument_list></macro></expr>;
    <expr><operator>~</operator><call><name>AddressBookPage</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>AddressTableModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><macro><name>getReturnValue</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>returnValue</name></expr>;</return> }</block>

<name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <macro><name>done</name><argument_list>(<argument>int retval</argument>)</argument_list></macro></expr>;

<expr><name>private</name><operator>:</operator>
    <name>Ui</name><operator>::</operator><name>AddressBookPage</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>AddressTableModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><name>Mode</name> <name>mode</name></expr>;
    <expr><name>Tabs</name> <name>tab</name></expr>;
    <expr><name>QString</name> <name>returnValue</name></expr>;
    <expr><name>AddressBookSortFilterProxyModel</name> <operator>*</operator><name>proxyModel</name></expr>;
    <expr><name>QMenu</name> <operator>*</operator><name>contextMenu</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>deleteAction</name></expr>; <comment type="line">// to be able to explicitly disable it</comment>
    <expr><name>QString</name> <name>newAddressToSelect</name></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <comment type="block" format="doxygen">/** Delete currently selected address entry */</comment>
    <name>void</name> <call><name>on_deleteAddress_clicked</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Create a new address for receiving coins and / or add a new address book entry */</comment>
    <expr><name>void</name> <call><name>on_newAddress_clicked</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Copy address of currently selected address entry to clipboard */</comment>
    <expr><name>void</name> <call><name>on_copyAddress_clicked</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Copy label of currently selected address entry to clipboard (no button) */</comment>
    <expr><name>void</name> <call><name>onCopyLabelAction</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Edit currently selected address entry (no button) */</comment>
    <expr><name>void</name> <call><name>onEditAction</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Export button clicked */</comment>
    <expr><name>void</name> <call><name>on_exportButton_clicked</name><argument_list>()</argument_list></call></expr>;

    <comment type="block" format="doxygen">/** Set button states based on selected tab and selection */</comment>
    <expr><name>void</name> <call><name>selectionChanged</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Spawn contextual menu (right mouse menu) for address book entry */</comment>
    <expr><name>void</name> <call><name>contextualMenu</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QPoint</name> <operator>&amp;</operator><name>point</name></expr></argument>)</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** New entry/entries were added to address table */</comment>
    <expr><name>void</name> <macro><name>selectNewAddress</name><argument_list>(<argument>const QModelIndex &amp;parent</argument>, <argument>int begin</argument>, <argument>int</argument> <comment type="block">/*end*/</comment>)</argument_list></macro></expr>;

<expr><name>Q_SIGNALS</name><operator>:</operator>
    <name>void</name> <macro><name>sendCoins</name><argument_list>(<argument>QString addr</argument>)</argument_list></macro></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_ADDRESSBOOKPAGE_H</comment>
</unit>
