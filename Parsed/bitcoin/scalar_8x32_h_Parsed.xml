<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/secp256k1/src/scalar_8x32.h"><comment type="block" format="doxygen">/**********************************************************************
 * Copyright (c) 2014 Pieter Wuille                                   *
 * Distributed under the MIT software license, see the accompanying   *
 * file COPYING or http://www.opensource.org/licenses/mit-license.php.*
 **********************************************************************/</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SECP256K1_SCALAR_REPR_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECP256K1_SCALAR_REPR_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<comment type="block" format="doxygen">/** A scalar modulo the group order of the secp256k1 curve. */</comment>
<typedef>typedef <type><struct>struct <block>{
    <decl_stmt><decl><type><name>uint32_t</name></type> <name><name>d</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>secp256k1_scalar</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECP256K1_SCALAR_CONST</name><parameter_list>(<parameter><type><name>d7</name></type></parameter>, <parameter><type><name>d6</name></type></parameter>, <parameter><type><name>d5</name></type></parameter>, <parameter><type><name>d4</name></type></parameter>, <parameter><type><name>d3</name></type></parameter>, <parameter><type><name>d2</name></type></parameter>, <parameter><type><name>d1</name></type></parameter>, <parameter><type><name>d0</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{{(d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7)}}</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SECP256K1_SCALAR_REPR_H */</comment>
</unit>
