<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/zmq/zmqnotificationinterface.h"><comment type="line">// Copyright (c) 2015-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;validationinterface.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;list&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>CBlockIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>CZMQAbstractNotifier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name> <name>CZMQNotificationInterface</name></type> <name>final</name> <range>: <expr><name>public</name> <name>CValidationInterface</name>
<block>{
<expr><name>public</name><operator>:</operator>
    <name>virtual</name> <operator>~</operator><call><name>CZMQNotificationInterface</name><argument_list>()</argument_list></call></expr>;

    <expr><name>std</name><operator>::</operator><name><name>list</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>CZMQAbstractNotifier</name><operator>*</operator></expr></argument>&gt;</argument_list></name> <macro><name>GetActiveNotifiers</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;

    <expr><specifier>static</specifier> <name>CZMQNotificationInterface</name><operator>*</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;

<expr><name>protected</name><operator>:</operator>
    <name>bool</name> <call><name>Initialize</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>Shutdown</name><argument_list>()</argument_list></call></expr>;

    <comment type="line">// CValidationInterface</comment>
    <expr><name>void</name> <macro><name>TransactionAddedToMempool</name><argument_list>(<argument>const CTransactionRef&amp; tx</argument>)</argument_list></macro> <name>override</name></expr>;
    <expr><name>void</name> <macro><name>BlockConnected</name><argument_list>(<argument>const std::shared_ptr&lt;const CBlock&gt;&amp; pblock</argument>, <argument>const CBlockIndex* pindexConnected</argument>, <argument>const std::vector&lt;CTransactionRef&gt;&amp; vtxConflicted</argument>)</argument_list></macro> <name>override</name></expr>;
    <expr><name>void</name> <macro><name>BlockDisconnected</name><argument_list>(<argument>const std::shared_ptr&lt;const CBlock&gt;&amp; pblock</argument>, <argument>const CBlockIndex* pindexDisconnected</argument>)</argument_list></macro> <name>override</name></expr>;
    <expr><name>void</name> <macro><name>UpdatedBlockTip</name><argument_list>(<argument>const CBlockIndex *pindexNew</argument>, <argument>const CBlockIndex *pindexFork</argument>, <argument>bool fInitialDownload</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>private</name><operator>:</operator>
    <call><name>CZMQNotificationInterface</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <operator>*</operator><name>pcontext</name></expr>;
    <expr><name>std</name><operator>::</operator><name><name>list</name><argument_list type="generic">&lt;<argument><expr><name>CZMQAbstractNotifier</name><operator>*</operator></expr></argument>&gt;</argument_list></name> <name>notifiers</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>CZMQNotificationInterface</name><modifier>*</modifier></type> <name>g_zmq_notification_interface</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H</comment>
</unit>
