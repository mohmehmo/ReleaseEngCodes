<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/walletview.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletview.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addressbookpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/askpassphrasedialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/bitcoingui.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/clientmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/optionsmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/overviewpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/receivecoinsdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/sendcoinsdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/signverifymessagedialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactiontablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/transactionview.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interfaces/node.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ui_interface.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QAction&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QActionGroup&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QFileDialog&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QHBoxLayout&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QProgressDialog&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPushButton&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QVBoxLayout&gt;</cpp:file></cpp:include>

<constructor><name><name>WalletView</name><operator>::</operator><name>WalletView</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>_platformStyle</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list><member_init_list>:
    <call><name>QStackedWidget</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>clientModel</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>walletModel</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>platformStyle</name><argument_list>(<argument><expr><name>_platformStyle</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <comment type="line">// Create tabs</comment>
    <expr_stmt><expr><name>overviewPage</name> <operator>=</operator> <operator>new</operator> <call><name>OverviewPage</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>transactionsPage</name> <operator>=</operator> <operator>new</operator> <call><name>QWidget</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QVBoxLayout</name> <modifier>*</modifier></type><name>vbox</name> <init>= <expr><operator>new</operator> <call><name>QVBoxLayout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QHBoxLayout</name> <modifier>*</modifier></type><name>hbox_buttons</name> <init>= <expr><operator>new</operator> <call><name>QHBoxLayout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>transactionView</name> <operator>=</operator> <operator>new</operator> <call><name>TransactionView</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vbox</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QPushButton</name> <modifier>*</modifier></type><name>exportButton</name> <init>= <expr><operator>new</operator> <call><name>QPushButton</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"&amp;Export"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>exportButton</name><operator>-&gt;</operator><name>setToolTip</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Export the data in the current tab to a file"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getImagesOnButtons</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>exportButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/export"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>hbox_buttons</name><operator>-&gt;</operator><name>addStretch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hbox_buttons</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>exportButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>vbox</name><operator>-&gt;</operator><name>addLayout</name></name><argument_list>(<argument><expr><name>hbox_buttons</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>transactionsPage</name><operator>-&gt;</operator><name>setLayout</name></name><argument_list>(<argument><expr><name>vbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>receiveCoinsPage</name> <operator>=</operator> <operator>new</operator> <call><name>ReceiveCoinsDialog</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>sendCoinsPage</name> <operator>=</operator> <operator>new</operator> <call><name>SendCoinsDialog</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>usedSendingAddressesPage</name> <operator>=</operator> <operator>new</operator> <call><name>AddressBookPage</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ForEditing</name></name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>SendingTab</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>usedReceivingAddressesPage</name> <operator>=</operator> <operator>new</operator> <call><name>AddressBookPage</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ForEditing</name></name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ReceivingTab</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>addWidget</name><argument_list>(<argument><expr><name>overviewPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>addWidget</name><argument_list>(<argument><expr><name>transactionsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>addWidget</name><argument_list>(<argument><expr><name>receiveCoinsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>addWidget</name><argument_list>(<argument><expr><name>sendCoinsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Clicking on a transaction on the overview pre-selects the transaction on the transaction history page</comment>
    <macro><name>connect</name><argument_list>(<argument>overviewPage</argument>, <argument>&amp;OverviewPage::transactionClicked</argument>, <argument>transactionView</argument>, <argument>static_cast&lt;void (TransactionView::*)(const QModelIndex&amp;)&gt;(&amp;TransactionView::focusTransaction)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>overviewPage</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>outOfSyncWarningClicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>requestedSyncWarningInfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Highlight transaction after send</comment>
    <macro><name>connect</name><argument_list>(<argument>sendCoinsPage</argument>, <argument>&amp;SendCoinsDialog::coinsSent</argument>, <argument>transactionView</argument>, <argument>static_cast&lt;void (TransactionView::*)(const uint256&amp;)&gt;(&amp;TransactionView::focusTransaction)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

    <comment type="line">// Clicking on "Export" allows to export the transaction list</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>exportButton</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>transactionView</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>exportClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Pass through messages from sendCoinsPage</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>sendCoinsPage</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsDialog</name><operator>::</operator><name>message</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Pass through messages from transactionView</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>transactionView</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionView</name><operator>::</operator><name>message</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>WalletView</name><operator>::</operator><name>~WalletView</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>setBitcoinGUI</name></name><parameter_list>(<parameter><decl><type><name>BitcoinGUI</name> <modifier>*</modifier></type><name>gui</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>gui</name></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Clicking on a transaction on the overview page simply sends you to transaction history page</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>overviewPage</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OverviewPage</name><operator>::</operator><name>transactionClicked</name></name></expr></argument>, <argument><expr><name>gui</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinGUI</name><operator>::</operator><name>gotoHistoryPage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Navigate to transaction history page after send</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>sendCoinsPage</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsDialog</name><operator>::</operator><name>coinsSent</name></name></expr></argument>, <argument><expr><name>gui</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinGUI</name><operator>::</operator><name>gotoHistoryPage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Receive and report messages</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>message</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>gui</name></argument>]</capture><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>message</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>style</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>gui</name><operator>-&gt;</operator><name>message</name></name><argument_list>(<argument><expr><name>title</name></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Pass through encryption status changed signals</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>encryptionStatusChanged</name></name></expr></argument>, <argument><expr><name>gui</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinGUI</name><operator>::</operator><name>updateWalletStatus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Pass through transaction notifications</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>incomingTransaction</name></name></expr></argument>, <argument><expr><name>gui</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinGUI</name><operator>::</operator><name>incomingTransaction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Connect HD enabled state signal</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>hdEnabledStatusChanged</name></name></expr></argument>, <argument><expr><name>gui</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinGUI</name><operator>::</operator><name>updateWalletStatus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>setClientModel</name></name><parameter_list>(<parameter><decl><type><name>ClientModel</name> <modifier>*</modifier></type><name>_clientModel</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>clientModel</name></name> <operator>=</operator> <name>_clientModel</name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>overviewPage</name><operator>-&gt;</operator><name>setClientModel</name></name><argument_list>(<argument><expr><name>_clientModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sendCoinsPage</name><operator>-&gt;</operator><name>setClientModel</name></name><argument_list>(<argument><expr><name>_clientModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>setWalletModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>_walletModel</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>walletModel</name></name> <operator>=</operator> <name>_walletModel</name></expr>;</expr_stmt>

    <comment type="line">// Put transaction list in tabs</comment>
    <expr_stmt><expr><call><name><name>transactionView</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>overviewPage</name><operator>-&gt;</operator><name>setWalletModel</name></name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>receiveCoinsPage</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sendCoinsPage</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>usedReceivingAddressesPage</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>_walletModel</name></expr> ?</condition><then> <expr><call><name><name>_walletModel</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">nullptr</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>usedSendingAddressesPage</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>_walletModel</name></expr> ?</condition><then> <expr><call><name><name>_walletModel</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">nullptr</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>_walletModel</name></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Receive and pass through messages from wallet model</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>message</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Handle changes in encryption status</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>encryptionStatusChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>encryptionStatusChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>updateEncryptionStatus</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// update HD status</comment>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>hdEnabledStatusChanged</name><argument_list>()</argument_list></decl>;</decl_stmt>

        <comment type="line">// Balloon pop-up for new transaction</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><call><name><name>_walletModel</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>TransactionTableModel</name><operator>::</operator><name>rowsInserted</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>processNewTransaction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Ask for passphrase if needed</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>requireUnlock</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>unlockWallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Show progress dialog</comment>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_walletModel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletModel</name><operator>::</operator><name>showProgress</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>showProgress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>processNewTransaction</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name><modifier>&amp;</modifier></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> <comment type="block">/*end*/</comment>)</parameter_list>
<block>{<block_content>
    <comment type="line">// Prevent balloon-spam when initial block download is in progress</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>walletModel</name> <operator>||</operator> <operator>!</operator><name>clientModel</name> <operator>||</operator> <call><name><name>clientModel</name><operator>-&gt;</operator><name>node</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isInitialBlockDownload</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>TransactionTableModel</name> <modifier>*</modifier></type><name>ttm</name> <init>= <expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getTransactionTableModel</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>ttm</name> <operator>||</operator> <call><name><name>ttm</name><operator>-&gt;</operator><name>processingQueuedTransactions</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>QString</name></type> <name>date</name> <init>= <expr><call><name><name>ttm</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Date</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qint64</name></type> <name>amount</name> <init>= <expr><call><name><name>ttm</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Amount</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toULongLong</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>type</name> <init>= <expr><call><name><name>ttm</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>Type</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>data</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>index</name> <init>= <expr><call><name><name>ttm</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>start</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>address</name> <init>= <expr><call><name><name>ttm</name><operator>-&gt;</operator><name>data</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>AddressRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>label</name> <init>= <expr><call><name><name>GUIUtil</name><operator>::</operator><name>HtmlEscape</name></name><argument_list>(<argument><expr><call><name><name>ttm</name><operator>-&gt;</operator><name>data</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><name><name>TransactionTableModel</name><operator>::</operator><name>LabelRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>incomingTransaction</name><argument_list>(<argument><expr><name>date</name></expr></argument>, <argument><expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>amount</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>address</name></expr></argument>, <argument><expr><name>label</name></expr></argument>, <argument><expr><call><name><name>GUIUtil</name><operator>::</operator><name>HtmlEscape</name></name><argument_list>(<argument><expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getWalletName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoOverviewPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setCurrentWidget</name><argument_list>(<argument><expr><name>overviewPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoHistoryPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setCurrentWidget</name><argument_list>(<argument><expr><name>transactionsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoReceiveCoinsPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setCurrentWidget</name><argument_list>(<argument><expr><name>receiveCoinsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoSendCoinsPage</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setCurrentWidget</name><argument_list>(<argument><expr><name>sendCoinsPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>addr</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>sendCoinsPage</name><operator>-&gt;</operator><name>setAddress</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoSignMessageTab</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// calls show() in showTab_SM()</comment>
    <decl_stmt><decl><type><name>SignVerifyMessageDialog</name> <modifier>*</modifier></type><name>signVerifyMessageDialog</name> <init>= <expr><operator>new</operator> <call><name>SignVerifyMessageDialog</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setAttribute</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>WA_DeleteOnClose</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>showTab_SM</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>addr</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setAddress_SM</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>gotoVerifyMessageTab</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// calls show() in showTab_VM()</comment>
    <decl_stmt><decl><type><name>SignVerifyMessageDialog</name> <modifier>*</modifier></type><name>signVerifyMessageDialog</name> <init>= <expr><operator>new</operator> <call><name>SignVerifyMessageDialog</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setAttribute</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>WA_DeleteOnClose</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>showTab_VM</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>addr</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>signVerifyMessageDialog</name><operator>-&gt;</operator><name>setAddress_VM</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>WalletView</name><operator>::</operator><name>handlePaymentRequest</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SendCoinsRecipient</name><modifier>&amp;</modifier></type> <name>recipient</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><call><name><name>sendCoinsPage</name><operator>-&gt;</operator><name>handlePaymentRequest</name></name><argument_list>(<argument><expr><name>recipient</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>showOutOfSyncWarning</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fShow</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>overviewPage</name><operator>-&gt;</operator><name>showOutOfSyncWarning</name></name><argument_list>(<argument><expr><name>fShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>updateEncryptionStatus</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>encryptionStatusChanged</name><argument_list>()</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>encryptWallet</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>status</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>walletModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>AskPassphraseDialog</name></type> <name>dlg</name><argument_list>(<argument><expr><ternary><condition><expr><name>status</name></expr> ?</condition><then> <expr><name><name>AskPassphraseDialog</name><operator>::</operator><name>Encrypt</name></name></expr> </then><else>: <expr><name><name>AskPassphraseDialog</name><operator>::</operator><name>Decrypt</name></name></expr></else></ternary></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>updateEncryptionStatus</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>backupWallet</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QString</name></type> <name>filename</name> <init>= <expr><call><name><name>GUIUtil</name><operator>::</operator><name>getSaveFileName</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Backup Wallet"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>QString</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Wallet Data (*.dat)"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>filename</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>walletModel</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>backupWallet</name><argument_list>(<argument><expr><call><name><name>filename</name><operator>.</operator><name>toLocal8Bit</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>data</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>message</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Backup Failed"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"There was an error trying to save the wallet data to %1."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>arg</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><name><name>CClientUIInterface</name><operator>::</operator><name>MSG_ERROR</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
        </block_content>}</block></if>
    <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>message</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Backup Successful"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The wallet data was successfully saved to %1."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>arg</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><name><name>CClientUIInterface</name><operator>::</operator><name>MSG_INFORMATION</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>changePassphrase</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>AskPassphraseDialog</name></type> <name>dlg</name><argument_list>(<argument><expr><name><name>AskPassphraseDialog</name><operator>::</operator><name>ChangePass</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>unlockWallet</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>walletModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <comment type="line">// Unlock wallet when requested by wallet model</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getEncryptionStatus</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>WalletModel</name><operator>::</operator><name>Locked</name></name></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>AskPassphraseDialog</name></type> <name>dlg</name><argument_list>(<argument><expr><name><name>AskPassphraseDialog</name><operator>::</operator><name>Unlock</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>usedSendingAddresses</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>walletModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>bringToFront</name></name><argument_list>(<argument><expr><name>usedSendingAddressesPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>usedReceivingAddresses</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>walletModel</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>bringToFront</name></name><argument_list>(<argument><expr><name>usedReceivingAddressesPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>showProgress</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nProgress</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>nProgress</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>progressDialog</name> <operator>=</operator> <operator>new</operator> <call><name>QProgressDialog</name><argument_list>(<argument><expr><name>title</name></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Cancel"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>PolishProgressDialog</name></name><argument_list>(<argument><expr><name>progressDialog</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>setWindowModality</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ApplicationModal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>setMinimumDuration</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>setAutoClose</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>setValue</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>nProgress</name> <operator>==</operator> <literal type="number">100</literal></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>progressDialog</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>deleteLater</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>progressDialog</name> <operator>=</operator> <literal type="null">nullptr</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>progressDialog</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>wasCanceled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>getWalletModel</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>wallet</name><argument_list>()</argument_list></call><operator>.</operator><call><name>abortRescan</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>progressDialog</name><operator>-&gt;</operator><name>setValue</name></name><argument_list>(<argument><expr><name>nProgress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletView</name><operator>::</operator><name>requestedSyncWarningInfo</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>outOfSyncWarningClicked</name><argument_list>()</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>
</unit>
