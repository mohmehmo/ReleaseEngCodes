<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/createwalletdialog.cpp"><comment type="line">// Copyright (c) 2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config/bitcoin-config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/createwalletdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/forms/ui_createwalletdialog.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPushButton&gt;</cpp:file></cpp:include>

<constructor><name><name>CreateWalletDialog</name><operator>::</operator><name>CreateWalletDialog</name></name><parameter_list>(<parameter><decl><type><name>QWidget</name><modifier>*</modifier></type> <name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QDialog</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>ui</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Ui</name><operator>::</operator><name>CreateWalletDialog</name></name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>setupUi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>buttonBox</name><operator>-&gt;</operator><name>button</name></name><argument_list>(<argument><expr><name><name>QDialogButtonBox</name><operator>::</operator><name>Ok</name></name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>setText</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Create"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>buttonBox</name><operator>-&gt;</operator><name>button</name></name><argument_list>(<argument><expr><name><name>QDialogButtonBox</name><operator>::</operator><name>Ok</name></name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>setEnabled</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>wallet_name_line_edit</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>ActiveWindowFocusReason</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>wallet_name_line_edit</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QLineEdit</name><operator>::</operator><name>textEdited</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>this</name></argument>]</capture><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name><modifier>&amp;</modifier></type> <name>text</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>buttonBox</name><operator>-&gt;</operator><name>button</name></name><argument_list>(<argument><expr><name><name>QDialogButtonBox</name><operator>::</operator><name>Ok</name></name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>setEnabled</name><argument_list>(<argument><expr><operator>!</operator><call><name><name>text</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>encrypt_wallet_checkbox</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QCheckBox</name><operator>::</operator><name>toggled</name></name></expr></argument>, <argument><expr><lambda><capture>[<argument><name>this</name></argument>]</capture><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>checked</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// Disable the disable_privkeys_checkbox when isEncryptWalletChecked is</comment>
        <comment type="line">// set to true, enable it when isEncryptWalletChecked is false.</comment>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>disable_privkeys_checkbox</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><operator>!</operator><name>checked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// When the disable_privkeys_checkbox is disabled, uncheck it.</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ui</name><operator>-&gt;</operator><name>disable_privkeys_checkbox</name><operator>-&gt;</operator><name>isEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>disable_privkeys_checkbox</name><operator>-&gt;</operator><name>setChecked</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>CreateWalletDialog</name><operator>::</operator><name>~CreateWalletDialog</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>delete</operator> <name>ui</name></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>QString</name></type> <name><name>CreateWalletDialog</name><operator>::</operator><name>walletName</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name><name>ui</name><operator>-&gt;</operator><name>wallet_name_line_edit</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>CreateWalletDialog</name><operator>::</operator><name>isEncryptWalletChecked</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name><name>ui</name><operator>-&gt;</operator><name>encrypt_wallet_checkbox</name><operator>-&gt;</operator><name>isChecked</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>CreateWalletDialog</name><operator>::</operator><name>isDisablePrivateKeysChecked</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name><name>ui</name><operator>-&gt;</operator><name>disable_privkeys_checkbox</name><operator>-&gt;</operator><name>isChecked</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>CreateWalletDialog</name><operator>::</operator><name>isMakeBlankWalletChecked</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name><name>ui</name><operator>-&gt;</operator><name>blank_wallet_checkbox</name><operator>-&gt;</operator><name>isChecked</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
