<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/wallet/test/init_test_fixture.cpp"><comment type="line">// Copyright (c) 2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/system.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/test/init_test_fixture.h&gt;</cpp:file></cpp:include>

<constructor><name><name>InitWalletDirTestingSetup</name><operator>::</operator><name>InitWalletDirTestingSetup</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>std</name><operator>::</operator><name>string</name></name><modifier>&amp;</modifier></type> <name>chainName</name></decl></parameter>)</parameter_list><member_init_list>: <call><name>BasicTestingSetup</name><argument_list>(<argument><expr><name>chainName</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><name>m_chain_client</name> <operator>=</operator> <call><name>MakeWalletClient</name><argument_list>(<argument><expr><operator>*</operator><name>m_chain</name></expr></argument>, <block>{<block_content/>}</block></argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></constructor>

    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>sep</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>sep</name> <operator>+=</operator> <name><name>fs</name><operator>::</operator><name>path</name><operator>::</operator><name>preferred_separator</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name>m_datadir</name> <operator>=</operator> <call><name>GetDataDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_cwd</name> <operator>=</operator> <call><name><name>fs</name><operator>::</operator><name>current_path</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"wallets"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"custom"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"my_wallets"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"nonexistent"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"path_does_not_exist"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"file"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"not_a_directory.dat"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"trailing"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"wallets"</literal> <operator>/</operator> <name>sep</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"trailing2"</literal></expr>]</index></name> <operator>=</operator> <name>m_datadir</name> <operator>/</operator> <literal type="string">"wallets"</literal> <operator>/</operator> <name>sep</name> <operator>/</operator> <name>sep</name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>fs</name><operator>::</operator><name>current_path</name></name><argument_list>(<argument><expr><name>m_datadir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"relative"</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"wallets"</literal></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>fs</name><operator>::</operator><name>create_directories</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"default"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fs</name><operator>::</operator><name>create_directories</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"custom"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fs</name><operator>::</operator><name>create_directories</name></name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"relative"</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>ofstream</name></name></type> <name>f</name><argument_list>(<argument><expr><name><name>m_walletdir_path_cases</name><index>[<expr><literal type="string">"file"</literal></expr>]</index></name><operator>.</operator><name>BOOST_FILESYSTEM_C_STR</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}

InitWalletDirTestingSetup<destructor><name><operator>::</operator><name>~InitWalletDirTestingSetup</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>fs</name><operator>::</operator><name>current_path</name></name><argument_list>(<argument><expr><name>m_cwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>InitWalletDirTestingSetup</name><operator>::</operator><name>SetWalletDir</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>fs</name><operator>::</operator><name>path</name></name><modifier>&amp;</modifier></type> <name>walletdir_path</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>gArgs</name><operator>.</operator><name>ForceSetArg</name></name><argument_list>(<argument><expr><literal type="string">"-walletdir"</literal></expr></argument>, <argument><expr><call><name><name>walletdir_path</name><operator>.</operator><name>string</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
