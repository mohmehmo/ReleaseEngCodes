<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/build_msvc/bitcoin_config.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_BITCOIN_CONFIG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_BITCOIN_CONFIG_H</name></cpp:macro></cpp:define>

<comment type="block">/* Define if building universal (internal helper macro) */</comment>
<comment type="block">/* #undef AC_APPLE_UNIVERSAL_BUILD */</comment>

<comment type="block">/* Version Build */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLIENT_VERSION_BUILD</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Version is release */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLIENT_VERSION_IS_RELEASE</name></cpp:macro> <cpp:value>false</cpp:value></cpp:define>

<comment type="block">/* Major version */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLIENT_VERSION_MAJOR</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Minor version */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLIENT_VERSION_MINOR</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>

<comment type="block">/* Build revision */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLIENT_VERSION_REVISION</name></cpp:macro> <cpp:value>99</cpp:value></cpp:define>

<comment type="block">/* Copyright holder(s) before %s replacement */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COPYRIGHT_HOLDERS</name></cpp:macro> <cpp:value>"The %s developers"</cpp:value></cpp:define>

<comment type="block">/* Copyright holder(s) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COPYRIGHT_HOLDERS_FINAL</name></cpp:macro> <cpp:value>"The Bitcoin Core developers"</cpp:value></cpp:define>

<comment type="block">/* Replacement for %s in copyright holders string */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COPYRIGHT_HOLDERS_SUBSTITUTION</name></cpp:macro> <cpp:value>"Bitcoin Core"</cpp:value></cpp:define>

<comment type="block">/* Copyright year */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COPYRIGHT_YEAR</name></cpp:macro> <cpp:value>2019</cpp:value></cpp:define>

<comment type="block">/* Define to 1 to enable wallet functions */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENABLE_WALLET</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 to enable ZMQ functions */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENABLE_ZMQ</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* parameter and return value type for __fdelt_chk */</comment>
<comment type="block">/* #undef FDELT_TYPE */</comment>

<comment type="block">/* define if the Boost library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::Chrono library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_CHRONO</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::Filesystem library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_FILESYSTEM</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::PROGRAM_OPTIONS library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_PROGRAM_OPTIONS</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::System library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_SYSTEM</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::Thread library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_THREAD</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* define if the Boost::Unit_Test_Framework library is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_BOOST_UNIT_TEST_FRAMEWORK</name></cpp:macro></cpp:define> <comment type="block">/**/</comment>

<comment type="block">/* Define to 1 if you have the &lt;byteswap.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_BYTESWAP_H */</comment>

<comment type="block">/* Define this symbol if the consensus lib has been built */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CONSENSUS_LIB</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* define if the compiler supports basic C++11 syntax */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_CXX11</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `be16toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BE16TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `be32toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BE32TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `be64toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BE64TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BSWAP_16</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BSWAP_32</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_BSWAP_64</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.
   */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_DAEMON</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htobe16', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOBE16</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htobe32', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOBE32</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htobe64', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOBE64</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htole16', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOLE16</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htole32', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOLE32</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `htole64', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_HTOLE64</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `le16toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_LE16TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `le32toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_LE32TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `le64toh', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_LE64TOH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_STRERROR_R</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `strnlen', and to 0 if you
   don't. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_DECL_STRNLEN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the declaration of `__builtin_clz', and to 0 if you
   don't. */</comment>
<comment type="line">//#define HAVE_DECL___BUILTIN_CLZ 1</comment>

<comment type="block">/* Define to 1 if you have the declaration of `__builtin_clzl', and to 0 if
   you don't. */</comment>
<comment type="line">//#define HAVE_DECL___BUILTIN_CLZL 1</comment>

<comment type="block">/* Define to 1 if you have the declaration of `__builtin_clzll', and to 0 if
   you don't. */</comment>
<comment type="line">//#define HAVE_DECL___BUILTIN_CLZLL 1</comment>

<comment type="block">/* Define to 1 if you have the &lt;dlfcn.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_DLFCN_H */</comment>

<comment type="block">/* Define to 1 if you have the &lt;endian.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_ENDIAN_H */</comment>

<comment type="block">/* Define to 1 if the system has the `dllexport' function attribute */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_FUNC_ATTRIBUTE_DLLEXPORT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if the system has the `dllimport' function attribute */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_FUNC_ATTRIBUTE_DLLIMPORT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if the system has the `visibility' function attribute */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_FUNC_ATTRIBUTE_VISIBILITY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if the BSD getentropy system call is available */</comment>
<comment type="block">/* #undef HAVE_GETENTROPY */</comment>

<comment type="block">/* Define this symbol if the BSD getentropy system call is available with
   sys/random.h */</comment>
<comment type="block">/* #undef HAVE_GETENTROPY_RAND */</comment>

<comment type="block">/* Define to 1 if you have the &lt;inttypes.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_INTTYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `advapi32' library (-ladvapi32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBADVAPI32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `comctl32' library (-lcomctl32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBCOMCTL32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `comdlg32' library (-lcomdlg32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBCOMDLG32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `crypt32' library (-lcrypt32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBCRYPT32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `gdi32' library (-lgdi32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBGDI32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `imm32' library (-limm32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBIMM32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `iphlpapi' library (-liphlpapi). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBIPHLPAPI</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `kernel32' library (-lkernel32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBKERNEL32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `mingwthrd' library (-lmingwthrd). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBMINGWTHRD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `mswsock' library (-lmswsock). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBMSWSOCK</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `ole32' library (-lole32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBOLE32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `oleaut32' library (-loleaut32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBOLEAUT32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `rpcrt4' library (-lrpcrt4). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBRPCRT4</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `rt' library (-lrt). */</comment>
<comment type="block">/* #undef HAVE_LIBRT */</comment>

<comment type="block">/* Define to 1 if you have the `shell32' library (-lshell32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBSHELL32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `shlwapi' library (-lshlwapi). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBSHLWAPI</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `ssp' library (-lssp). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBSSP</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `user32' library (-luser32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBUSER32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `uuid' library (-luuid). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBUUID</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `winmm' library (-lwinmm). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBWINMM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `winspool' library (-lwinspool). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBWINSPOOL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `ws2_32' library (-lws2_32). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBWS2_32</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `z ' library (-lz ). */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_LIBZ_</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if you have malloc_info */</comment>
<comment type="block">/* #undef HAVE_MALLOC_INFO */</comment>

<comment type="block">/* Define this symbol if you have mallopt with M_ARENA_MAX */</comment>
<comment type="block">/* #undef HAVE_MALLOPT_ARENA_MAX */</comment>

<comment type="block">/* Define to 1 if you have the &lt;memory.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MEMORY_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;miniupnpc/miniupnpc.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MINIUPNPC_MINIUPNPC_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;miniupnpc/miniwget.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MINIUPNPC_MINIWGET_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;miniupnpc/upnpcommands.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MINIUPNPC_UPNPCOMMANDS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;miniupnpc/upnperrors.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_MINIUPNPC_UPNPERRORS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if you have MSG_DONTWAIT */</comment>
<comment type="block">/* #undef HAVE_MSG_DONTWAIT */</comment>

<comment type="block">/* Define this symbol if you have MSG_NOSIGNAL */</comment>
<comment type="block">/* #undef HAVE_MSG_NOSIGNAL */</comment>

<comment type="block">/* Define if you have POSIX threads libraries and header files. */</comment>
<comment type="line">//#define HAVE_PTHREAD 1</comment>

<comment type="block">/* Have PTHREAD_PRIO_INHERIT. */</comment>
<comment type="line">//#define HAVE_PTHREAD_PRIO_INHERIT 1</comment>

<comment type="block">/* Define to 1 if you have the &lt;stdint.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDINT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;stdio.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDIO_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;stdlib.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STDLIB_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the `strerror_r' function. */</comment>
<comment type="block">/* #undef HAVE_STRERROR_R */</comment>

<comment type="block">/* Define to 1 if you have the &lt;strings.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRINGS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;string.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_STRING_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if the BSD sysctl(KERN_ARND) is available */</comment>
<comment type="block">/* #undef HAVE_SYSCTL_ARND */</comment>

<comment type="block">/* Define to 1 if you have the &lt;sys/endian.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_SYS_ENDIAN_H */</comment>

<comment type="block">/* Define this symbol if the Linux getrandom system call is available */</comment>
<comment type="block">/* #undef HAVE_SYS_GETRANDOM */</comment>

<comment type="block">/* Define to 1 if you have the &lt;sys/prctl.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_SYS_PRCTL_H */</comment>

<comment type="block">/* Define to 1 if you have the &lt;sys/select.h&gt; header file. */</comment>
<comment type="block">/* #undef HAVE_SYS_SELECT_H */</comment>

<comment type="block">/* Define to 1 if you have the &lt;sys/stat.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_STAT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;sys/types.h&gt; header file. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYS_TYPES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the &lt;unistd.h&gt; header file. */</comment>
<comment type="line">//#define HAVE_UNISTD_H 1</comment>

<comment type="block">/* Define if the visibility attribute is supported. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_VISIBILITY_ATTRIBUTE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if boost sleep works */</comment>
<comment type="block">/* #undef HAVE_WORKING_BOOST_SLEEP */</comment>

<comment type="block">/* Define this symbol if boost sleep_for works */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_WORKING_BOOST_SLEEP_FOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to the sub-directory where libtool stores uninstalled libraries. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LT_OBJDIR</name></cpp:macro> <cpp:value>".libs/"</cpp:value></cpp:define>

<comment type="block">/* Define to the address where bug reports for this package should be sent. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_BUGREPORT</name></cpp:macro> <cpp:value>"https://github.com/bitcoin/bitcoin/issues"</cpp:value></cpp:define>

<comment type="block">/* Define to the full name of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_NAME</name></cpp:macro> <cpp:value>"Bitcoin Core"</cpp:value></cpp:define>

<comment type="block">/* Define to the full name and version of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_STRING</name></cpp:macro> <cpp:value>"Bitcoin Core 0.19.99"</cpp:value></cpp:define>

<comment type="block">/* Define to the one symbol short name of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_TARNAME</name></cpp:macro> <cpp:value>"bitcoin"</cpp:value></cpp:define>

<comment type="block">/* Define to the home page for this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_URL</name></cpp:macro> <cpp:value>"https://bitcoincore.org/"</cpp:value></cpp:define>

<comment type="block">/* Define to the version of this package. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKAGE_VERSION</name></cpp:macro> <cpp:value>"0.19.99"</cpp:value></cpp:define>

<comment type="block">/* Define to necessary symbol if this constant uses a non-standard name on
   your system. */</comment>
<comment type="block">/* #undef PTHREAD_CREATE_JOINABLE */</comment>

<comment type="block">/* Define this symbol if the qt platform is cocoa */</comment>
<comment type="block">/* #undef QT_QPA_PLATFORM_COCOA */</comment>

<comment type="block">/* Define this symbol if the minimal qt platform exists */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QT_QPA_PLATFORM_MINIMAL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if the qt platform is windows */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QT_QPA_PLATFORM_WINDOWS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define this symbol if the qt platform is xcb */</comment>
<comment type="block">/* #undef QT_QPA_PLATFORM_XCB */</comment>

<comment type="block">/* Define this symbol if qt plugins are static */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QT_STATICPLUGIN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if you have the ANSI C header files. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STDC_HEADERS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<comment type="block">/* Define to 1 if strerror_r returns char *. */</comment>
<comment type="block">/* #undef STRERROR_R_CHAR_P */</comment>

<comment type="block">/* Define this symbol to build in assembly routines */</comment>
<comment type="line">//#define USE_ASM 1</comment>

<comment type="block">/* Define this symbol if coverage is enabled */</comment>
<comment type="block">/* #undef USE_COVERAGE */</comment>

<comment type="block">/* Define if dbus support should be compiled in */</comment>
<comment type="block">/* #undef USE_DBUS */</comment>

<comment type="block">/* Define if QR support should be compiled in */</comment>
<comment type="line">//#define USE_QRCODE 1</comment>

<comment type="block">/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines
   default state */</comment>
<comment type="line">//#define USE_UPNP 0</comment>

<comment type="block">/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>AC_APPLE_UNIVERSAL_BUILD</name></expr></cpp:if>
<cpp:if># <cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>__BIG_ENDIAN__</name></expr></cpp:if>
<cpp:define>#  <cpp:directive>define</cpp:directive> <cpp:macro><name>WORDS_BIGENDIAN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif># <cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:ifndef># <cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
<comment type="block">/* #  undef WORDS_BIGENDIAN */</comment>
<cpp:endif># <cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Enable large inode numbers on Mac OS X 10.5.  */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_DARWIN_USE_64_BIT_INODE</name></cpp:ifndef>
<cpp:define># <cpp:directive>define</cpp:directive> <cpp:macro><name>_DARWIN_USE_64_BIT_INODE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Number of bits in a file offset, on hosts where this is settable. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_FILE_OFFSET_BITS</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<comment type="block">/* Define for large files, on AIX-style hosts. */</comment>
<comment type="block">/* #undef _LARGE_FILES */</comment>

<comment type="block">/* Windows Universal Platform constraints */</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WINAPI_FAMILY</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>(</operator><name>WINAPI_FAMILY</name> <operator>==</operator> <name>WINAPI_FAMILY_DESKTOP_APP</name><operator>)</operator></expr></cpp:if>
<comment type="block">/* Either a desktop application without API restrictions, or and older system
   before these macros were defined. */</comment>

<comment type="block">/* ::wsystem is available */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HAVE_SYSTEM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//BITCOIN_BITCOIN_CONFIG_H</comment>
</unit>
