<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/test/fs_tests.cpp"><comment type="line">// Copyright (c) 2011-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>
<comment type="line">//</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test/util/setup_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/system.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;boost/test/unit_test.hpp&gt;</cpp:file></cpp:include>

<macro><name>BOOST_FIXTURE_TEST_SUITE</name><argument_list>(<argument>fs_tests</argument>, <argument>BasicTestingSetup</argument>)</argument_list></macro>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>fsbridge_fstream</argument>)</argument_list></macro>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>tmpfolder</name> <init>= <expr><call><name>GetDataDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// tmpfile1 should be the same as tmpfile2</comment>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>tmpfile1</name> <init>= <expr><name>tmpfolder</name> <operator>/</operator> <literal type="string">"fs_tests_â¿_ð"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>fs</name><operator>::</operator><name>path</name></name></type> <name>tmpfile2</name> <init>= <expr><name>tmpfolder</name> <operator>/</operator> <literal type="string">"fs_tests_â¿_ð"</literal></expr></init></decl>;</decl_stmt>
    <block>{<block_content>
        <function_decl><type><name><name>fsbridge</name><operator>::</operator><name>ofstream</name></name></type> <name>file</name><parameter_list>(<parameter><decl><type><name>tmpfile1</name></type></decl></parameter>)</parameter_list>;</function_decl>
        <expr_stmt><expr><name>file</name> <operator>&lt;&lt;</operator> <literal type="string">"bitcoin"</literal></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <function_decl><type><name><name>fsbridge</name><operator>::</operator><name>ifstream</name></name></type> <name>file</name><parameter_list>(<parameter><decl><type><name>tmpfile2</name></type></decl></parameter>)</parameter_list>;</function_decl>
        <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>input_buffer</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&gt;&gt;</operator> <name>input_buffer</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>input_buffer</name></expr></argument>, <argument><expr><literal type="string">"bitcoin"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <decl_stmt><decl><type><name><name>fsbridge</name><operator>::</operator><name>ifstream</name></name></type> <name>file</name><argument_list>(<argument><expr><name>tmpfile1</name></expr></argument>, <argument><expr><name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>in</name></name> <operator>|</operator> <name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>ate</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>input_buffer</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&gt;&gt;</operator> <name>input_buffer</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>input_buffer</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <decl_stmt><decl><type><name><name>fsbridge</name><operator>::</operator><name>ofstream</name></name></type> <name>file</name><argument_list>(<argument><expr><name>tmpfile2</name></expr></argument>, <argument><expr><name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>out</name></name> <operator>|</operator> <name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>app</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&lt;&lt;</operator> <literal type="string">"tests"</literal></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <function_decl><type><name><name>fsbridge</name><operator>::</operator><name>ifstream</name></name></type> <name>file</name><parameter_list>(<parameter><decl><type><name>tmpfile1</name></type></decl></parameter>)</parameter_list>;</function_decl>
        <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>input_buffer</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&gt;&gt;</operator> <name>input_buffer</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>input_buffer</name></expr></argument>, <argument><expr><literal type="string">"bitcointests"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <decl_stmt><decl><type><name><name>fsbridge</name><operator>::</operator><name>ofstream</name></name></type> <name>file</name><argument_list>(<argument><expr><name>tmpfile2</name></expr></argument>, <argument><expr><name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>out</name></name> <operator>|</operator> <name><name>std</name><operator>::</operator><name>ios_base</name><operator>::</operator><name>trunc</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&lt;&lt;</operator> <literal type="string">"bitcoin"</literal></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>
        <function_decl><type><name><name>fsbridge</name><operator>::</operator><name>ifstream</name></name></type> <name>file</name><parameter_list>(<parameter><decl><type><name>tmpfile1</name></type></decl></parameter>)</parameter_list>;</function_decl>
        <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>input_buffer</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>file</name> <operator>&gt;&gt;</operator> <name>input_buffer</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>input_buffer</name></expr></argument>, <argument><expr><literal type="string">"bitcoin"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
</block_content>}</block>

<macro><name>BOOST_AUTO_TEST_SUITE_END</name><argument_list>()</argument_list></macro>
</unit>
