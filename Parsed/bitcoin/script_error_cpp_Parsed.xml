<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/script/script_error.cpp"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;script/script_error.h&gt;</cpp:file></cpp:include>

<function><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>ScriptErrorString</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ScriptError</name></type> <name>serror</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <switch>switch <condition>(<expr><name>serror</name></expr>)</condition>
    <block>{<block_content>
        <case>case <expr><name>SCRIPT_ERR_OK</name></expr>:</case>
            <return>return <expr><literal type="string">"No error"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_EVAL_FALSE</name></expr>:</case>
            <return>return <expr><literal type="string">"Script evaluated without error but finished with a false/empty top stack element"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_VERIFY</name></expr>:</case>
            <return>return <expr><literal type="string">"Script failed an OP_VERIFY operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_EQUALVERIFY</name></expr>:</case>
            <return>return <expr><literal type="string">"Script failed an OP_EQUALVERIFY operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_CHECKMULTISIGVERIFY</name></expr>:</case>
            <return>return <expr><literal type="string">"Script failed an OP_CHECKMULTISIGVERIFY operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_CHECKSIGVERIFY</name></expr>:</case>
            <return>return <expr><literal type="string">"Script failed an OP_CHECKSIGVERIFY operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_NUMEQUALVERIFY</name></expr>:</case>
            <return>return <expr><literal type="string">"Script failed an OP_NUMEQUALVERIFY operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SCRIPT_SIZE</name></expr>:</case>
            <return>return <expr><literal type="string">"Script is too big"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_PUSH_SIZE</name></expr>:</case>
            <return>return <expr><literal type="string">"Push value size limit exceeded"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_OP_COUNT</name></expr>:</case>
            <return>return <expr><literal type="string">"Operation limit exceeded"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_STACK_SIZE</name></expr>:</case>
            <return>return <expr><literal type="string">"Stack size limit exceeded"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_COUNT</name></expr>:</case>
            <return>return <expr><literal type="string">"Signature count negative or greater than pubkey count"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_PUBKEY_COUNT</name></expr>:</case>
            <return>return <expr><literal type="string">"Pubkey count negative or limit exceeded"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_BAD_OPCODE</name></expr>:</case>
            <return>return <expr><literal type="string">"Opcode missing or not understood"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_DISABLED_OPCODE</name></expr>:</case>
            <return>return <expr><literal type="string">"Attempted to use a disabled opcode"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_INVALID_STACK_OPERATION</name></expr>:</case>
            <return>return <expr><literal type="string">"Operation not valid with the current stack size"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_INVALID_ALTSTACK_OPERATION</name></expr>:</case>
            <return>return <expr><literal type="string">"Operation not valid with the current altstack size"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_OP_RETURN</name></expr>:</case>
            <return>return <expr><literal type="string">"OP_RETURN was encountered"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_UNBALANCED_CONDITIONAL</name></expr>:</case>
            <return>return <expr><literal type="string">"Invalid OP_IF construction"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_NEGATIVE_LOCKTIME</name></expr>:</case>
            <return>return <expr><literal type="string">"Negative locktime"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_UNSATISFIED_LOCKTIME</name></expr>:</case>
            <return>return <expr><literal type="string">"Locktime requirement not satisfied"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_HASHTYPE</name></expr>:</case>
            <return>return <expr><literal type="string">"Signature hash type missing or not understood"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_DER</name></expr>:</case>
            <return>return <expr><literal type="string">"Non-canonical DER signature"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_MINIMALDATA</name></expr>:</case>
            <return>return <expr><literal type="string">"Data push larger than necessary"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_PUSHONLY</name></expr>:</case>
            <return>return <expr><literal type="string">"Only non-push operators allowed in signatures"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_HIGH_S</name></expr>:</case>
            <return>return <expr><literal type="string">"Non-canonical signature: S value is unnecessarily high"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_NULLDUMMY</name></expr>:</case>
            <return>return <expr><literal type="string">"Dummy CHECKMULTISIG argument must be zero"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_MINIMALIF</name></expr>:</case>
            <return>return <expr><literal type="string">"OP_IF/NOTIF argument must be minimal"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_NULLFAIL</name></expr>:</case>
            <return>return <expr><literal type="string">"Signature must be zero for failed CHECK(MULTI)SIG operation"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS</name></expr>:</case>
            <return>return <expr><literal type="string">"NOPx reserved for soft-fork upgrades"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness version reserved for soft-fork upgrades"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_PUBKEYTYPE</name></expr>:</case>
            <return>return <expr><literal type="string">"Public key is neither compressed or uncompressed"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_CLEANSTACK</name></expr>:</case>
            <return>return <expr><literal type="string">"Extra items left on stack after execution"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness program has incorrect length"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness program was passed an empty witness"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness program hash mismatch"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_MALLEATED</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness requires empty scriptSig"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_MALLEATED_P2SH</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness requires only-redeemscript scriptSig"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_UNEXPECTED</name></expr>:</case>
            <return>return <expr><literal type="string">"Witness provided for non-witness script"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_WITNESS_PUBKEYTYPE</name></expr>:</case>
            <return>return <expr><literal type="string">"Using non-compressed keys in segwit"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_OP_CODESEPARATOR</name></expr>:</case>
            <return>return <expr><literal type="string">"Using OP_CODESEPARATOR in non-witness script"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_SIG_FINDANDDELETE</name></expr>:</case>
            <return>return <expr><literal type="string">"Signature is found in scriptCode"</literal></expr>;</return>
        <case>case <expr><name>SCRIPT_ERR_UNKNOWN_ERROR</name></expr>:</case>
        <case>case <expr><name>SCRIPT_ERR_ERROR_COUNT</name></expr>:</case>
        <default>default:</default> <break>break;</break>
    </block_content>}</block></switch>
    <return>return <expr><literal type="string">"unknown error"</literal></expr>;</return>
</block_content>}</block></function>
</unit>
