<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/wallet/coincontrol.cpp"><comment type="line">// Copyright (c) 2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/coincontrol.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/system.h&gt;</cpp:file></cpp:include>

<function><type><name>void</name></type> <name><name>CCoinControl</name><operator>::</operator><name>SetNull</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name>destChange</name> <operator>=</operator> <call><name>CNoDestination</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>m_change_type</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>fAllowOtherInputs</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>fAllowWatchOnly</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_avoid_partial_spends</name> <operator>=</operator> <call><name><name>gArgs</name><operator>.</operator><name>GetBoolArg</name></name><argument_list>(<argument><expr><literal type="string">"-avoidpartialspends"</literal></expr></argument>, <argument><expr><name>DEFAULT_AVOIDPARTIALSPENDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_avoid_address_reuse</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>setSelected</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>m_feerate</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>fOverrideFeeRate</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>m_confirm_target</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>m_signal_bip125_rbf</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_fee_mode</name> <operator>=</operator> <name><name>FeeEstimateMode</name><operator>::</operator><name>UNSET</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_min_depth</name> <operator>=</operator> <name>DEFAULT_MIN_DEPTH</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_max_depth</name> <operator>=</operator> <name>DEFAULT_MAX_DEPTH</name></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
