<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h"><comment type="block">/* DO NOT EDIT THIS FILE - it is machine generated */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"include/secp256k1.h"</cpp:file></cpp:include>
<comment type="block">/* Header for class org_bitcoin_NativeSecp256k1 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_Included_org_bitcoin_NativeSecp256k1</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_Included_org_bitcoin_NativeSecp256k1</name></cpp:macro></cpp:define>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ctx_clone
 * Signature: (J)J
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jlong</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ctx_1clone</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_context_randomize
 * Signature: (Ljava/nio/ByteBuffer;J)I
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jint</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1context_1randomize</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_privkey_tweak_add
 * Signature: (Ljava/nio/ByteBuffer;J)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1add</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_privkey_tweak_mul
 * Signature: (Ljava/nio/ByteBuffer;J)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1mul</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_pubkey_tweak_add
 * Signature: (Ljava/nio/ByteBuffer;JI)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1add</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>, <parameter><decl><type><name>jint</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_pubkey_tweak_mul
 * Signature: (Ljava/nio/ByteBuffer;JI)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1mul</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>, <parameter><decl><type><name>jint</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_destroy_context
 * Signature: (J)V
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>void</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1destroy_1context</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ecdsa_verify
 * Signature: (Ljava/nio/ByteBuffer;JII)I
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jint</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1verify</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>, <parameter><decl><type><name>jint</name></type></decl></parameter>, <parameter><decl><type><name>jint</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ecdsa_sign
 * Signature: (Ljava/nio/ByteBuffer;J)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1sign</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ec_seckey_verify
 * Signature: (Ljava/nio/ByteBuffer;J)I
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jint</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1seckey_1verify</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ec_pubkey_create
 * Signature: (Ljava/nio/ByteBuffer;J)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1create</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ec_pubkey_parse
 * Signature: (Ljava/nio/ByteBuffer;JI)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1parse</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>jclass</name></type></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter>, <parameter><decl><type><name>jlong</name></type></decl></parameter>, <parameter><decl><type><name>jint</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Class:     org_bitcoin_NativeSecp256k1
 * Method:    secp256k1_ecdh
 * Signature: (Ljava/nio/ByteBuffer;JI)[[B
 */</comment>
<function_decl><type><name>SECP256K1_API</name> <name>jobjectArray</name> <name>JNICALL</name></type> <name>Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdh</name>
  <parameter_list>(<parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jclass</name></type> <name>classObject</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type> <name>byteBufferObject</name></decl></parameter>, <parameter><decl><type><name>jlong</name></type> <name>ctx_l</name></decl></parameter>, <parameter><decl><type><name>jint</name></type> <name>publen</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
