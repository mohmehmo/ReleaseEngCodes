<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/walletframe.cpp"><comment type="line">// Copyright (c) 2011-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletframe.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/bitcoingui.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletview.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cassert&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QHBoxLayout&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QLabel&gt;</cpp:file></cpp:include>

<constructor><name><name>WalletFrame</name><operator>::</operator><name>WalletFrame</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>_platformStyle</name></decl></parameter>, <parameter><decl><type><name>BitcoinGUI</name> <modifier>*</modifier></type><name>_gui</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QFrame</name><argument_list>(<argument><expr><name>_gui</name></expr></argument>)</argument_list></call>,
    <call><name>gui</name><argument_list>(<argument><expr><name>_gui</name></expr></argument>)</argument_list></call>,
    <call><name>platformStyle</name><argument_list>(<argument><expr><name>_platformStyle</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <comment type="line">// Leave HBox hook for adding a list view later</comment>
    <decl_stmt><decl><type><name>QHBoxLayout</name> <modifier>*</modifier></type><name>walletFrameLayout</name> <init>= <expr><operator>new</operator> <call><name>QHBoxLayout</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setContentsMargins</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>walletStack</name> <operator>=</operator> <operator>new</operator> <call><name>QStackedWidget</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletFrameLayout</name><operator>-&gt;</operator><name>setContentsMargins</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletFrameLayout</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>walletStack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>QLabel</name> <modifier>*</modifier></type><name>noWallet</name> <init>= <expr><operator>new</operator> <call><name>QLabel</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"No wallet has been loaded."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>noWallet</name><operator>-&gt;</operator><name>setAlignment</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>AlignCenter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>noWallet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>WalletFrame</name><operator>::</operator><name>~WalletFrame</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>setClientModel</name></name><parameter_list>(<parameter><decl><type><name>ClientModel</name> <modifier>*</modifier></type><name>_clientModel</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>clientModel</name></name> <operator>=</operator> <name>_clientModel</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>addWallet</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>walletModel</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>gui</name> <operator>||</operator> <operator>!</operator><name>clientModel</name> <operator>||</operator> <operator>!</operator><name>walletModel</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>mapWalletViews</name><operator>.</operator><name>count</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><operator>new</operator> <call><name>WalletView</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>setBitcoinGUI</name></name><argument_list>(<argument><expr><name>gui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>setClientModel</name></name><argument_list>(<argument><expr><name>clientModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>setWalletModel</name></name><argument_list>(<argument><expr><name>walletModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>showOutOfSyncWarning</name></name><argument_list>(<argument><expr><name>bOutOfSync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>WalletView</name><modifier>*</modifier></type> <name>current_wallet_view</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>current_wallet_view</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>setCurrentIndex</name></name><argument_list>(<argument><expr><call><name><name>current_wallet_view</name><operator>-&gt;</operator><name>currentIndex</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>gotoOverviewPage</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <expr_stmt><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>addWidget</name></name><argument_list>(<argument><expr><name>walletView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>mapWalletViews</name><index>[<expr><name>walletModel</name></expr>]</index></name> <operator>=</operator> <name>walletView</name></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>walletView</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletView</name><operator>::</operator><name>outOfSyncWarningClicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>WalletFrame</name><operator>::</operator><name>outOfSyncWarningClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>setCurrentWallet</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name><modifier>*</modifier></type> <name>wallet_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>mapWalletViews</name><operator>.</operator><name>count</name></name><argument_list>(<argument><expr><name>wallet_model</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name><name>mapWalletViews</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><name>wallet_model</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>setCurrentWidget</name></name><argument_list>(<argument><expr><name>walletView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>walletView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>updateEncryptionStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>removeWallet</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name><modifier>*</modifier></type> <name>wallet_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>mapWalletViews</name><operator>.</operator><name>count</name></name><argument_list>(<argument><expr><name>wallet_model</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name><name>mapWalletViews</name><operator>.</operator><name>take</name></name><argument_list>(<argument><expr><name>wallet_model</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>removeWidget</name></name><argument_list>(<argument><expr><name>walletView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><operator>delete</operator> <name>walletView</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>removeAllWallets</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>removeWidget</name></name><argument_list>(<argument><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><call><name><name>mapWalletViews</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>WalletFrame</name><operator>::</operator><name>handlePaymentRequest</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SendCoinsRecipient</name> <modifier>&amp;</modifier></type><name>recipient</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <return>return <expr><call><name><name>walletView</name><operator>-&gt;</operator><name>handlePaymentRequest</name></name><argument_list>(<argument><expr><name>recipient</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>showOutOfSyncWarning</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fShow</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name>bOutOfSync</name> <operator>=</operator> <name>fShow</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>showOutOfSyncWarning</name><argument_list>(<argument><expr><name>fShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoOverviewPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>gotoOverviewPage</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoHistoryPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>gotoHistoryPage</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoReceiveCoinsPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>gotoReceiveCoinsPage</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoSendCoinsPage</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><modifier>*</modifier></expr></argument>, <argument><expr><name>WalletView</name><modifier>*</modifier></expr></argument>&gt;</argument_list></name><operator>::</operator><name>const_iterator</name></name></type> <name>i</name></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constBegin</name></name><argument_list>()</argument_list></call></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name><name>mapWalletViews</name><operator>.</operator><name>constEnd</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>value</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>gotoSendCoinsPage</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoSignMessageTab</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>gotoSignMessageTab</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>gotoVerifyMessageTab</name></name><parameter_list>(<parameter><decl><type><name>QString</name></type> <name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>gotoVerifyMessageTab</name></name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>encryptWallet</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>status</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>encryptWallet</name></name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>backupWallet</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>backupWallet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>changePassphrase</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>changePassphrase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>unlockWallet</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>unlockWallet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>usedSendingAddresses</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>usedSendingAddresses</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>usedReceivingAddresses</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name> <modifier>*</modifier></type><name>walletView</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>walletView</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>walletView</name><operator>-&gt;</operator><name>usedReceivingAddresses</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>WalletView</name><modifier>*</modifier></type> <name><name>WalletFrame</name><operator>::</operator><name>currentWalletView</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name><name>qobject_cast</name><argument_list type="generic">&lt;<argument><expr><name>WalletView</name><operator>*</operator></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>walletStack</name><operator>-&gt;</operator><name>currentWidget</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>WalletModel</name><modifier>*</modifier></type> <name><name>WalletFrame</name><operator>::</operator><name>currentWalletModel</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <decl_stmt><decl><type><name>WalletView</name><modifier>*</modifier></type> <name>wallet_view</name> <init>= <expr><call><name>currentWalletView</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><ternary><condition><expr><name>wallet_view</name></expr> ?</condition><then> <expr><call><name><name>wallet_view</name><operator>-&gt;</operator><name>getWalletModel</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">nullptr</literal></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>WalletFrame</name><operator>::</operator><name>outOfSyncWarningClicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>requestedSyncWarningInfo</name><argument_list>()</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>
</unit>
