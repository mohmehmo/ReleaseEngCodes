<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/sendcoinsentry.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config/bitcoin-config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/sendcoinsentry.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/forms/ui_sendcoinsentry.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addressbookpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addresstablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/optionsmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QApplication&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QClipboard&gt;</cpp:file></cpp:include>

<constructor><name><name>SendCoinsEntry</name><operator>::</operator><name>SendCoinsEntry</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>_platformStyle</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QStackedWidget</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>ui</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Ui</name><operator>::</operator><name>SendCoinsEntry</name></name></expr></argument>)</argument_list></call>,
    <call><name>model</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>platformStyle</name><argument_list>(<argument><expr><name>_platformStyle</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>setupUi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressBookButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/address-book"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>pasteButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/editpaste"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteButton_is</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteButton_s</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>setCurrentWidget</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>SendCoins</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getUseExtraSpacing</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payToLayout</name><operator>-&gt;</operator><name>setSpacing</name></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>setPlaceholderText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Enter a label for this address to add it to your address book"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// normal bitcoin address field</comment>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>setupAddressWidget</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>payTo</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// just a label for displaying bitcoin address(es)</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo_is</name><operator>-&gt;</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>GUIUtil</name><operator>::</operator><name>fixedPitchFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Connect signals</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>BitcoinAmountField</name><operator>::</operator><name>valueChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>payAmountChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QCheckBox</name><operator>::</operator><name>toggled</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>subtractFeeFromAmountChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>deleteButton</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>deleteClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>deleteButton_is</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>deleteClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>deleteButton_s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>deleteClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>useAvailableBalanceButton</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>useAvailableBalanceClicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>SendCoinsEntry</name><operator>::</operator><name>~SendCoinsEntry</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>delete</operator> <name>ui</name></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>on_pasteButton_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <comment type="line">// Paste text from clipboard into recipient field</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>QApplication</name><operator>::</operator><name>clipboard</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>text</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>on_addressBookButton_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>AddressBookPage</name></type> <name>dlg</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ForSelection</name></name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>SendingTab</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>dlg</name><operator>.</operator><name>getReturnValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>on_payTo_textChanged</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>address</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>updateLabel</name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>setModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>model</name></name> <operator>=</operator> <name>_model</name></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>_model</name> <operator>&amp;&amp;</operator> <call><name><name>_model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><call><name><name>_model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OptionsModel</name><operator>::</operator><name>displayUnitChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>SendCoinsEntry</name><operator>::</operator><name>updateDisplayUnit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt><expr><call><name>clear</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>clear</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <comment type="line">// clear UI elements for normal payment</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name><operator>-&gt;</operator><name>setCheckState</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>Unchecked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageTextLabel</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageTextLabel</name><operator>-&gt;</operator><name>hide</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageLabel</name><operator>-&gt;</operator><name>hide</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// clear UI elements for unauthenticated payment request</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo_is</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>memoTextLabel_is</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount_is</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// clear UI elements for authenticated payment request</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo_s</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>memoTextLabel_s</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount_s</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// update the display unit, to not use the default ("BTC")</comment>
    <expr_stmt><expr><call><name>updateDisplayUnit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>checkSubtractFeeFromAmount</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name><operator>-&gt;</operator><name>setChecked</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>deleteClicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>removeEntry</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>useAvailableBalanceClicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>useAvailableBalance</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>validate</name></name><parameter_list>(<parameter><decl><type><name><name>interfaces</name><operator>::</operator><name>Node</name></name><modifier>&amp;</modifier></type> <name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line">// Check input validity</comment>
    <decl_stmt><decl><type><name>bool</name></type> <name>retval</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>model</name><operator>-&gt;</operator><name>validateAddress</name></name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>retval</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>validate</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>retval</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Sending a zero amount is invalid</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>value</name></name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>retval</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Reject dust outputs:</comment>
    <if_stmt><if>if <condition>(<expr><name>retval</name> <operator>&amp;&amp;</operator> <call><name><name>GUIUtil</name><operator>::</operator><name>isDust</name></name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>value</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>retval</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>retval</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>SendCoinsRecipient</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>getValue</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>recipient</name><operator>.</operator><name>address</name></name> <operator>=</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>recipient</name><operator>.</operator><name>label</name></name> <operator>=</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>recipient</name><operator>.</operator><name>amount</name></name> <operator>=</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>value</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>recipient</name><operator>.</operator><name>message</name></name> <operator>=</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>messageTextLabel</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>recipient</name><operator>.</operator><name>fSubtractFeeFromAmount</name></name> <operator>=</operator> <operator>(</operator><call><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name><operator>-&gt;</operator><name>checkState</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>Checked</name></name><operator>)</operator></expr>;</expr_stmt>

    <return>return <expr><name>recipient</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>QWidget</name> <modifier>*</modifier></type><name><name>SendCoinsEntry</name><operator>::</operator><name>setupTabChain</name></name><parameter_list>(<parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name>prev</name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>payTo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>payTo</name></name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>w</name> <init>= <expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setupTabChain</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>checkboxSubtractFeeFromAmount</name></name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addressBookButton</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addressBookButton</name></name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>pasteButton</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>QWidget</name><operator>::</operator><name>setTabOrder</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>pasteButton</name></name></expr></argument>, <argument><expr><name><name>ui</name><operator>-&gt;</operator><name>deleteButton</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>ui</name><operator>-&gt;</operator><name>deleteButton</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>setValue</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SendCoinsRecipient</name> <modifier>&amp;</modifier></type><name>value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name>recipient</name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
    <block>{<block_content>
        <comment type="line">// message</comment>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageTextLabel</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>recipient</name><operator>.</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageTextLabel</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>recipient</name><operator>.</operator><name>message</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageLabel</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>recipient</name><operator>.</operator><name>message</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>recipient</name><operator>.</operator><name>address</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this may set a label from addressbook</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>recipient</name><operator>.</operator><name>label</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <comment type="line">// if a label had been set from the addressbook, don't overwrite with an empty label</comment>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>recipient</name><operator>.</operator><name>label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setValue</name></name><argument_list>(<argument><expr><name><name>recipient</name><operator>.</operator><name>amount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>setAddress</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>address</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>setAmount</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>CAmount</name> <modifier>&amp;</modifier></type><name>amount</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setValue</name></name><argument_list>(<argument><expr><name>amount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>isClear</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <return>return <expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>payTo_is</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>payTo_s</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>setFocus</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payTo</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>updateDisplayUnit</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><name>model</name> <operator>&amp;&amp;</operator> <call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Update payAmount with the current unit</comment>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount</name><operator>-&gt;</operator><name>setDisplayUnit</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount_is</name><operator>-&gt;</operator><name>setDisplayUnit</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>payAmount_s</name><operator>-&gt;</operator><name>setDisplayUnit</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>SendCoinsEntry</name><operator>::</operator><name>updateLabel</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>address</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line">// Fill in label from address book, if address has an associated label</comment>
    <decl_stmt><decl><type><name>QString</name></type> <name>associatedLabel</name> <init>= <expr><call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>labelForAddress</name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>associatedLabel</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addAsLabel</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name>associatedLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
</block_content>}</block></function>
</unit>
