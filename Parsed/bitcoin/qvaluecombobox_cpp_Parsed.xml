<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/qvaluecombobox.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/qvaluecombobox.h&gt;</cpp:file></cpp:include>

<constructor><name><name>QValueComboBox</name><operator>::</operator><name>QValueComboBox</name></name><parameter_list>(<parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
        <call><name>QComboBox</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>, <call><name>role</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>UserRole</name></name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <macro><name>connect</name><argument_list>(<argument>this</argument>, <argument>static_cast&lt;void (QComboBox::*)(int)&gt;(&amp;QComboBox::currentIndexChanged)</argument>, <argument>this</argument>, <argument>&amp;QValueComboBox::handleSelectionChanged</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
</block_content>}</block></constructor>

<function><type><name>QVariant</name></type> <name><name>QValueComboBox</name><operator>::</operator><name>value</name></name><parameter_list>()</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><call><name>itemData</name><argument_list>(<argument><expr><call><name>currentIndex</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>role</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>QValueComboBox</name><operator>::</operator><name>setValue</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QVariant</name> <modifier>&amp;</modifier></type><name>value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setCurrentIndex</name><argument_list>(<argument><expr><call><name>findData</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name>role</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>QValueComboBox</name><operator>::</operator><name>setRole</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>_role</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>role</name></name> <operator>=</operator> <name>_role</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>QValueComboBox</name><operator>::</operator><name>handleSelectionChanged</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>valueChanged</name><argument_list>()</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>
</unit>
