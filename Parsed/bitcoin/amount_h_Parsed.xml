<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/amount.h"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_AMOUNT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_AMOUNT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<comment type="block" format="doxygen">/** Amount in satoshis (Can be negative) */</comment>
<typedef>typedef <type><name>int64_t</name></type> <name>CAmount</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>CAmount</name></type> <name>COIN</name> <init>= <expr><literal type="number">100000000</literal></expr></init></decl>;</decl_stmt>

<comment type="block" format="doxygen">/** No amount larger than this (in satoshi) is valid.
 *
 * Note that this constant is *not* the total money supply, which in Bitcoin
 * currently happens to be less than 21,000,000 BTC for various reasons, but
 * rather a sanity check. As this sanity check is used by consensus-critical
 * validation code, the exact value of the MAX_MONEY constant is consensus
 * critical; in unusual circumstances like a(nother) overflow bug that allowed
 * for the creation of coins out of thin air modification could lead to a fork.
 * */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>CAmount</name></type> <name>MAX_MONEY</name> <init>= <expr><literal type="number">21000000</literal> <operator>*</operator> <name>COIN</name></expr></init></decl>;</decl_stmt>
<function><type><specifier>inline</specifier> <name>bool</name></type> <name>MoneyRange</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>CAmount</name><modifier>&amp;</modifier></type> <name>nValue</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>nValue</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>nValue</name> <operator>&lt;=</operator> <name>MAX_MONEY</name><operator>)</operator></expr>;</return> </block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">//  BITCOIN_AMOUNT_H</comment>
</unit>
