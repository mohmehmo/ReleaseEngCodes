<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/crypto/sha256.cpp"><comment type="line">// Copyright (c) 2014-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;crypto/sha256.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;crypto/common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;compat/cpuid.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__amd64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__i386__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ASM</name></expr></argument>)</argument_list></call></expr></cpp:if>
<namespace>namespace <name>sha256_sse4</name>
<block>{
<function_decl><type><name>void</name></type> <name>Transform</name><parameter_list>(<parameter><decl><type><name>uint32_t</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>chunk</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>blocks</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></namespace>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<namespace>namespace <name>sha256d64_sse41</name>
<block>{
<function_decl><type><name>void</name></type> <name>Transform_4way</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></namespace>

<namespace>namespace <name>sha256d64_avx2</name>
<block>{
<function_decl><type><name>void</name></type> <name>Transform_8way</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></namespace>

<namespace>namespace <name>sha256d64_shani</name>
<block>{
<function_decl><type><name>void</name></type> <name>Transform_2way</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></namespace>

<namespace>namespace <name>sha256_shani</name>
<block>{
<function_decl><type><name>void</name></type> <name>Transform</name><parameter_list>(<parameter><decl><type><name>uint32_t</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>chunk</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>blocks</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></namespace>

<comment type="line">// Internal implementation code.</comment>
<namespace>namespace
<block>{
<comment type="line" format="doxygen">/// Internal SHA-256 implementation.</comment>
<namespace>namespace <name>sha256</name>
<block>{
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>Ch</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><name>z</name> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&amp;</operator> <operator>(</operator><name>y</name> <operator>^</operator> <name>z</name><operator>)</operator><operator>)</operator></expr>;</return> </block_content>}</block></function>
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>Maj</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>x</name> <operator>&amp;</operator> <name>y</name><operator>)</operator> <operator>|</operator> <operator>(</operator><name>z</name> <operator>&amp;</operator> <operator>(</operator><name>x</name> <operator>|</operator> <name>y</name><operator>)</operator><operator>)</operator></expr>;</return> </block_content>}</block></function>
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>Sigma0</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">13</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">19</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">22</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal><operator>)</operator></expr>;</return> </block_content>}</block></function>
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>Sigma1</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">6</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">26</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">11</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">25</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator></expr>;</return> </block_content>}</block></function>
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>sigma0</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">7</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">25</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">18</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return> </block_content>}</block></function>
<function><type><name>uint32_t</name> <specifier>inline</specifier></type> <name>sigma1</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">17</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">15</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">19</literal> <operator>|</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">13</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">10</literal><operator>)</operator></expr>;</return> </block_content>}</block></function>

<comment type="block" format="doxygen">/** One round of SHA-256. */</comment>
<function><type><name>void</name> <specifier>inline</specifier></type> <name>Round</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>b</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name><modifier>&amp;</modifier></type> <name>d</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>e</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>f</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>g</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name><modifier>&amp;</modifier></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>k</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>t1</name> <init>= <expr><name>h</name> <operator>+</operator> <call><name>Sigma1</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>Ch</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>k</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>t2</name> <init>= <expr><call><name>Sigma0</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>Maj</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>d</name> <operator>+=</operator> <name>t1</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>h</name> <operator>=</operator> <name>t1</name> <operator>+</operator> <name>t2</name></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block" format="doxygen">/** Initialize SHA-256 state. */</comment>
<function><type><name>void</name> <specifier>inline</specifier></type> <name>Initialize</name><parameter_list>(<parameter><decl><type><name>uint32_t</name><modifier>*</modifier></type> <name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x6a09e667ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xbb67ae85ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x3c6ef372ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xa54ff53aul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x510e527ful</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x9b05688cul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x1f83d9abul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x5be0cd19ul</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block" format="doxygen">/** Perform a number of SHA-256 transformations, processing 64-byte chunks. */</comment>
<function><type><name>void</name></type> <name>Transform</name><parameter_list>(<parameter><decl><type><name>uint32_t</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>chunk</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>blocks</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <while>while <condition>(<expr><name>blocks</name><operator>--</operator></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>uint32_t</name></type> <name>a</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>b</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>c</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>d</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>e</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>f</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>g</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>h</name> <init>= <expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>uint32_t</name></type> <name>w0</name></decl>, <decl><type ref="prev"/><name>w1</name></decl>, <decl><type ref="prev"/><name>w2</name></decl>, <decl><type ref="prev"/><name>w3</name></decl>, <decl><type ref="prev"/><name>w4</name></decl>, <decl><type ref="prev"/><name>w5</name></decl>, <decl><type ref="prev"/><name>w6</name></decl>, <decl><type ref="prev"/><name>w7</name></decl>, <decl><type ref="prev"/><name>w8</name></decl>, <decl><type ref="prev"/><name>w9</name></decl>, <decl><type ref="prev"/><name>w10</name></decl>, <decl><type ref="prev"/><name>w11</name></decl>, <decl><type ref="prev"/><name>w12</name></decl>, <decl><type ref="prev"/><name>w13</name></decl>, <decl><type ref="prev"/><name>w14</name></decl>, <decl><type ref="prev"/><name>w15</name></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x428a2f98</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x71374491</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb5c0fbcf</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xe9b5dba5</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x3956c25b</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x59f111f1</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x923f82a4</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xab1c5ed5</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xd807aa98</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x12835b01</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">36</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x243185be</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">40</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x550c7dc3</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">44</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x72be5d74</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x80deb1fe</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">52</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x9bdc06a7</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc19bf174</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>chunk</name> <operator>+</operator> <literal type="number">60</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xe49b69c1</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xefbe4786</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x0fc19dc6</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x240ca1cc</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x2de92c6f</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4a7484aa</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5cb0a9dc</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x76f988da</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x983e5152</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa831c66d</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb00327c8</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xbf597fc7</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xc6e00bf3</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd5a79147</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x06ca6351</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x14292967</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x27b70a85</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x2e1b2138</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x4d2c6dfc</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x53380d13</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x650a7354</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x766a0abb</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x81c2c92e</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x92722c85</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xa2bfe8a1</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa81a664b</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xc24b8b70</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xc76c51a3</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xd192e819</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd6990624</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xf40e3585</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x106aa070</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x19a4c116</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x1e376c08</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x2748774c</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x34b0bcb5</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x391c0cb3</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4ed8aa4a</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5b9cca4f</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x682e6ff3</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x748f82ee</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x78a5636f</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x84c87814</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x8cc70208</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x90befffa</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xa4506ceb</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xbef9a3f7</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc67178f2</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+=</operator> <name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+=</operator> <name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+=</operator> <name>e</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+=</operator> <name>f</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>+=</operator> <name>g</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>+=</operator> <name>h</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>chunk</name> <operator>+=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>TransformD64</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// Transform 1</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>a</name> <init>= <expr><literal type="number">0x6a09e667ul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>b</name> <init>= <expr><literal type="number">0xbb67ae85ul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>c</name> <init>= <expr><literal type="number">0x3c6ef372ul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>d</name> <init>= <expr><literal type="number">0xa54ff53aul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>e</name> <init>= <expr><literal type="number">0x510e527ful</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>f</name> <init>= <expr><literal type="number">0x9b05688cul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>g</name> <init>= <expr><literal type="number">0x1f83d9abul</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>h</name> <init>= <expr><literal type="number">0x5be0cd19ul</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>w0</name></decl>, <decl><type ref="prev"/><name>w1</name></decl>, <decl><type ref="prev"/><name>w2</name></decl>, <decl><type ref="prev"/><name>w3</name></decl>, <decl><type ref="prev"/><name>w4</name></decl>, <decl><type ref="prev"/><name>w5</name></decl>, <decl><type ref="prev"/><name>w6</name></decl>, <decl><type ref="prev"/><name>w7</name></decl>, <decl><type ref="prev"/><name>w8</name></decl>, <decl><type ref="prev"/><name>w9</name></decl>, <decl><type ref="prev"/><name>w10</name></decl>, <decl><type ref="prev"/><name>w11</name></decl>, <decl><type ref="prev"/><name>w12</name></decl>, <decl><type ref="prev"/><name>w13</name></decl>, <decl><type ref="prev"/><name>w14</name></decl>, <decl><type ref="prev"/><name>w15</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x428a2f98ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x71374491ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb5c0fbcful</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xe9b5dba5ul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x3956c25bul</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x59f111f1ul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x923f82a4ul</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xab1c5ed5ul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xd807aa98ul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x12835b01ul</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">36</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x243185beul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">40</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x550c7dc3ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">44</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x72be5d74ul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x80deb1feul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">52</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x9bdc06a7ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc19bf174ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>=</operator> <call><name>ReadBE32</name><argument_list>(<argument><expr><name>in</name> <operator>+</operator> <literal type="number">60</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xe49b69c1ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xefbe4786ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x0fc19dc6ul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x240ca1ccul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x2de92c6ful</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4a7484aaul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5cb0a9dcul</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x76f988daul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x983e5152ul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa831c66dul</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb00327c8ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xbf597fc7ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xc6e00bf3ul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd5a79147ul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x06ca6351ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x14292967ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x27b70a85ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x2e1b2138ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x4d2c6dfcul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x53380d13ul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x650a7354ul</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x766a0abbul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x81c2c92eul</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x92722c85ul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xa2bfe8a1ul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa81a664bul</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xc24b8b70ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xc76c51a3ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xd192e819ul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd6990624ul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xf40e3585ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x106aa070ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x19a4c116ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x1e376c08ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x2748774cul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x34b0bcb5ul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x391c0cb3ul</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4ed8aa4aul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5b9cca4ful</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x682e6ff3ul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x748f82eeul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x78a5636ful</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x84c87814ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x8cc70208ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x90befffaul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xa4506cebul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xbef9a3f7ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc67178f2ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>a</name> <operator>+=</operator> <literal type="number">0x6a09e667ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name> <operator>+=</operator> <literal type="number">0xbb67ae85ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>c</name> <operator>+=</operator> <literal type="number">0x3c6ef372ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>d</name> <operator>+=</operator> <literal type="number">0xa54ff53aul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>e</name> <operator>+=</operator> <literal type="number">0x510e527ful</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name> <operator>+=</operator> <literal type="number">0x9b05688cul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>g</name> <operator>+=</operator> <literal type="number">0x1f83d9abul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>h</name> <operator>+=</operator> <literal type="number">0x5be0cd19ul</literal></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>t0</name> <init>= <expr><name>a</name></expr></init></decl>, <decl><type ref="prev"/><name>t1</name> <init>= <expr><name>b</name></expr></init></decl>, <decl><type ref="prev"/><name>t2</name> <init>= <expr><name>c</name></expr></init></decl>, <decl><type ref="prev"/><name>t3</name> <init>= <expr><name>d</name></expr></init></decl>, <decl><type ref="prev"/><name>t4</name> <init>= <expr><name>e</name></expr></init></decl>, <decl><type ref="prev"/><name>t5</name> <init>= <expr><name>f</name></expr></init></decl>, <decl><type ref="prev"/><name>t6</name> <init>= <expr><name>g</name></expr></init></decl>, <decl><type ref="prev"/><name>t7</name> <init>= <expr><name>h</name></expr></init></decl>;</decl_stmt>

    <comment type="line">// Transform 2</comment>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xc28a2f98ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x71374491ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb5c0fbcful</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xe9b5dba5ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x3956c25bul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x59f111f1ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x923f82a4ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xab1c5ed5ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xd807aa98ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x12835b01ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x243185beul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x550c7dc3ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x72be5d74ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x80deb1feul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x9bdc06a7ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc19bf374ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x649b69c1ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xf0fe4786ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x0fe1edc6ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x240cf254ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x4fe9346ful</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x6cc984beul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x61b9411eul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x16f988faul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xf2c65152ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa88e5a6dul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb019fc65ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xb9d99ec7ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x9a1231c3ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xe70eeaa0ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xfdb1232bul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc7353eb0ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x3069bad5ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xcb976d5ful</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x5a0f118ful</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xdc1eeefdul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x0a35b689ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xde0b7a04ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x58f4ca9dul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xe15d5b16ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x007f3e86ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x37088980ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xa507ea32ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x6fab9537ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x17406110ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x0d8cd6f1ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xcdaa3b6dul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc0bbbe37ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x83613bdaul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xdb48a363ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x0b02e931ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x6fd15ca7ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x521afacaul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x31338431ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x6ed41a95ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x6d437890ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xc39c91f2ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x9eccabbdul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb5c9a0e6ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x532fb63cul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xd2c741c6ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x07237ea3ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xa4954b68ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x4c191d76ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>w0</name> <operator>=</operator> <name>t0</name> <operator>+</operator> <name>a</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w1</name> <operator>=</operator> <name>t1</name> <operator>+</operator> <name>b</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w2</name> <operator>=</operator> <name>t2</name> <operator>+</operator> <name>c</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w3</name> <operator>=</operator> <name>t3</name> <operator>+</operator> <name>d</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w4</name> <operator>=</operator> <name>t4</name> <operator>+</operator> <name>e</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w5</name> <operator>=</operator> <name>t5</name> <operator>+</operator> <name>f</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w6</name> <operator>=</operator> <name>t6</name> <operator>+</operator> <name>g</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>w7</name> <operator>=</operator> <name>t7</name> <operator>+</operator> <name>h</name></expr>;</expr_stmt>

    <comment type="line">// Transform 3</comment>
    <expr_stmt><expr><name>a</name> <operator>=</operator> <literal type="number">0x6a09e667ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>b</name> <operator>=</operator> <literal type="number">0xbb67ae85ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>c</name> <operator>=</operator> <literal type="number">0x3c6ef372ul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">0xa54ff53aul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>e</name> <operator>=</operator> <literal type="number">0x510e527ful</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <literal type="number">0x9b05688cul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>g</name> <operator>=</operator> <literal type="number">0x1f83d9abul</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>h</name> <operator>=</operator> <literal type="number">0x5be0cd19ul</literal></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x428a2f98ul</literal> <operator>+</operator> <name>w0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x71374491ul</literal> <operator>+</operator> <name>w1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb5c0fbcful</literal> <operator>+</operator> <name>w2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xe9b5dba5ul</literal> <operator>+</operator> <name>w3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x3956c25bul</literal> <operator>+</operator> <name>w4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x59f111f1ul</literal> <operator>+</operator> <name>w5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x923f82a4ul</literal> <operator>+</operator> <name>w6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xab1c5ed5ul</literal> <operator>+</operator> <name>w7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x5807aa98ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x12835b01ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x243185beul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x550c7dc3ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x72be5d74ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x80deb1feul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x9bdc06a7ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc19bf274ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xe49b69c1ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xefbe4786ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <literal type="number">0xa00000ul</literal> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x0fc19dc6ul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x240ca1ccul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x2de92c6ful</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4a7484aaul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5cb0a9dcul</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">0x100ul</literal> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x76f988daul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <literal type="number">0x11002000ul</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x983e5152ul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>=</operator> <literal type="number">0x80000000ul</literal> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa831c66dul</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xb00327c8ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xbf597fc7ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xc6e00bf3ul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd5a79147ul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x06ca6351ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <literal type="number">0x400022ul</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x14292967ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>=</operator> <literal type="number">0x100ul</literal> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x27b70a85ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x2e1b2138ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x4d2c6dfcul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x53380d13ul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x650a7354ul</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x766a0abbul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x81c2c92eul</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x92722c85ul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0xa2bfe8a1ul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0xa81a664bul</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0xc24b8b70ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0xc76c51a3ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0xd192e819ul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xd6990624ul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xf40e3585ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x106aa070ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x19a4c116ul</literal> <operator>+</operator> <operator>(</operator><name>w0</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w9</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x1e376c08ul</literal> <operator>+</operator> <operator>(</operator><name>w1</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w10</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x2748774cul</literal> <operator>+</operator> <operator>(</operator><name>w2</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w11</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x34b0bcb5ul</literal> <operator>+</operator> <operator>(</operator><name>w3</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w1</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w12</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x391c0cb3ul</literal> <operator>+</operator> <operator>(</operator><name>w4</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w2</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w13</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0x4ed8aa4aul</literal> <operator>+</operator> <operator>(</operator><name>w5</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w3</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w14</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0x5b9cca4ful</literal> <operator>+</operator> <operator>(</operator><name>w6</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w4</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w15</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0x682e6ff3ul</literal> <operator>+</operator> <operator>(</operator><name>w7</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w5</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w0</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0x748f82eeul</literal> <operator>+</operator> <operator>(</operator><name>w8</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w6</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w1</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><literal type="number">0x78a5636ful</literal> <operator>+</operator> <operator>(</operator><name>w9</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w7</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w2</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0x84c87814ul</literal> <operator>+</operator> <operator>(</operator><name>w10</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w8</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w3</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="number">0x8cc70208ul</literal> <operator>+</operator> <operator>(</operator><name>w11</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w9</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w4</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">0x90befffaul</literal> <operator>+</operator> <operator>(</operator><name>w12</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w10</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w5</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0xa4506cebul</literal> <operator>+</operator> <operator>(</operator><name>w13</name> <operator>+=</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w11</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w6</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w14</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0xbef9a3f7ul</literal> <operator>+</operator> <operator>(</operator><name>w14</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w12</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w7</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w15</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Round</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0xc67178f2ul</literal> <operator>+</operator> <operator>(</operator><name>w15</name> <operator>+</operator> <call><name>sigma1</name><argument_list>(<argument><expr><name>w13</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>w8</name> <operator>+</operator> <call><name>sigma0</name><argument_list>(<argument><expr><name>w0</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Output</comment>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><name>a</name> <operator>+</operator> <literal type="number">0x6a09e667ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>b</name> <operator>+</operator> <literal type="number">0xbb67ae85ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>c</name> <operator>+</operator> <literal type="number">0x3c6ef372ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name>d</name> <operator>+</operator> <literal type="number">0xa54ff53aul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>e</name> <operator>+</operator> <literal type="number">0x510e527ful</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><name>f</name> <operator>+</operator> <literal type="number">0x9b05688cul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>, <argument><expr><name>g</name> <operator>+</operator> <literal type="number">0x1f83d9abul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>, <argument><expr><name>h</name> <operator>+</operator> <literal type="number">0x5be0cd19ul</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

}</block></namespace> <comment type="line">// namespace sha256</comment>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>TransformType</name>)<parameter_list>(<parameter><decl><type><name>uint32_t</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>TransformD64Type</name>)<parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function><template>template<parameter_list>&lt;<parameter><type><name>TransformType</name></type> <name>tr</name></parameter>&gt;</parameter_list></template>
<type><name>void</name></type> <name>TransformD64Wrapper</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name><name>s</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>padding1</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
        <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>
    }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>buffer2</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
        <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>
    }</block></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>sha256</name><operator>::</operator><name>Initialize</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tr</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tr</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>padding1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>buffer2</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sha256</name><operator>::</operator><name>Initialize</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tr</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>buffer2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>out</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><name>TransformType</name></type> <name>Transform</name> <init>= <expr><name><name>sha256</name><operator>::</operator><name>Transform</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TransformD64Type</name></type> <name>TransformD64</name> <init>= <expr><name><name>sha256</name><operator>::</operator><name>TransformD64</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TransformD64Type</name></type> <name>TransformD64_2way</name> <init>= <expr><literal type="null">nullptr</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TransformD64Type</name></type> <name>TransformD64_4way</name> <init>= <expr><literal type="null">nullptr</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TransformD64Type</name></type> <name>TransformD64_8way</name> <init>= <expr><literal type="null">nullptr</literal></expr></init></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>SelfTest</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// Input state (equal to the initial SHA256 state)</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>init</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
        <expr><literal type="number">0x6a09e667ul</literal></expr>, <expr><literal type="number">0xbb67ae85ul</literal></expr>, <expr><literal type="number">0x3c6ef372ul</literal></expr>, <expr><literal type="number">0xa54ff53aul</literal></expr>, <expr><literal type="number">0x510e527ful</literal></expr>, <expr><literal type="number">0x9b05688cul</literal></expr>, <expr><literal type="number">0x1f83d9abul</literal></expr>, <expr><literal type="number">0x5be0cd19ul</literal></expr>
    }</block></expr></init></decl>;</decl_stmt>
    <comment type="line">// Some random input data to test with</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>data</name><index>[<expr><literal type="number">641</literal></expr>]</index></name> <init>= <expr><literal type="string">"-"</literal> <comment type="line">// Intentionally not aligned</comment>
        <literal type="string">"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "</literal>
        <literal type="string">"eiusmod tempor incididunt ut labore et dolore magna aliqua. Et m"</literal>
        <literal type="string">"olestie ac feugiat sed lectus vestibulum mattis ullamcorper. Mor"</literal>
        <literal type="string">"bi blandit cursus risus at ultrices mi tempus imperdiet nulla. N"</literal>
        <literal type="string">"unc congue nisi vita suscipit tellus mauris. Imperdiet proin fer"</literal>
        <literal type="string">"mentum leo vel orci. Massa tempor nec feugiat nisl pretium fusce"</literal>
        <literal type="string">" id velit. Telus in metus vulputate eu scelerisque felis. Mi tem"</literal>
        <literal type="string">"pus imperdiet nulla malesuada pellentesque. Tristique magna sit."</literal></expr></init></decl>;</decl_stmt>
    <comment type="line">// Expected output state for hashing the i*64 first input bytes above (excluding SHA256 padding).</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>result</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
        <expr><block>{<expr><literal type="number">0x6a09e667ul</literal></expr>, <expr><literal type="number">0xbb67ae85ul</literal></expr>, <expr><literal type="number">0x3c6ef372ul</literal></expr>, <expr><literal type="number">0xa54ff53aul</literal></expr>, <expr><literal type="number">0x510e527ful</literal></expr>, <expr><literal type="number">0x9b05688cul</literal></expr>, <expr><literal type="number">0x1f83d9abul</literal></expr>, <expr><literal type="number">0x5be0cd19ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0x91f8ec6bul</literal></expr>, <expr><literal type="number">0x4da10fe3ul</literal></expr>, <expr><literal type="number">0x1c9c292cul</literal></expr>, <expr><literal type="number">0x45e18185ul</literal></expr>, <expr><literal type="number">0x435cc111ul</literal></expr>, <expr><literal type="number">0x3ca26f09ul</literal></expr>, <expr><literal type="number">0xeb954caeul</literal></expr>, <expr><literal type="number">0x402a7069ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0xcabea5acul</literal></expr>, <expr><literal type="number">0x374fb97cul</literal></expr>, <expr><literal type="number">0x182ad996ul</literal></expr>, <expr><literal type="number">0x7bd69cbful</literal></expr>, <expr><literal type="number">0x450ff900ul</literal></expr>, <expr><literal type="number">0xc1d2be8aul</literal></expr>, <expr><literal type="number">0x6a41d505ul</literal></expr>, <expr><literal type="number">0xe6212dc3ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0xbcff09d6ul</literal></expr>, <expr><literal type="number">0x3e76f36eul</literal></expr>, <expr><literal type="number">0x3ecb2501ul</literal></expr>, <expr><literal type="number">0x78866e97ul</literal></expr>, <expr><literal type="number">0xe1c1e2fdul</literal></expr>, <expr><literal type="number">0x32f4eafful</literal></expr>, <expr><literal type="number">0x8aa6c4e5ul</literal></expr>, <expr><literal type="number">0xdfc024bcul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0xa08c5d94ul</literal></expr>, <expr><literal type="number">0x0a862f93ul</literal></expr>, <expr><literal type="number">0x6b7f2f40ul</literal></expr>, <expr><literal type="number">0x8f9fae76ul</literal></expr>, <expr><literal type="number">0x6d40439ful</literal></expr>, <expr><literal type="number">0x79dcee0cul</literal></expr>, <expr><literal type="number">0x3e39ff3aul</literal></expr>, <expr><literal type="number">0xdc3bdbb1ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0x216a0895ul</literal></expr>, <expr><literal type="number">0x9f1a3662ul</literal></expr>, <expr><literal type="number">0xe99946f9ul</literal></expr>, <expr><literal type="number">0x87ba4364ul</literal></expr>, <expr><literal type="number">0x0fb5db2cul</literal></expr>, <expr><literal type="number">0x12bed3d3ul</literal></expr>, <expr><literal type="number">0x6689c0c7ul</literal></expr>, <expr><literal type="number">0x292f1b04ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0xca3067f8ul</literal></expr>, <expr><literal type="number">0xbc8c2656ul</literal></expr>, <expr><literal type="number">0x37cb7e0dul</literal></expr>, <expr><literal type="number">0x9b6b8b0ful</literal></expr>, <expr><literal type="number">0x46dc380bul</literal></expr>, <expr><literal type="number">0xf1287f57ul</literal></expr>, <expr><literal type="number">0xc42e4b23ul</literal></expr>, <expr><literal type="number">0x3fefe94dul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0x3e4c4039ul</literal></expr>, <expr><literal type="number">0xbb6fca8cul</literal></expr>, <expr><literal type="number">0x6f27d2f7ul</literal></expr>, <expr><literal type="number">0x301e44a4ul</literal></expr>, <expr><literal type="number">0x8352ba14ul</literal></expr>, <expr><literal type="number">0x5769ce37ul</literal></expr>, <expr><literal type="number">0x48a1155ful</literal></expr>, <expr><literal type="number">0xc0e1c4c6ul</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="number">0xfe2fa9ddul</literal></expr>, <expr><literal type="number">0x69d0862bul</literal></expr>, <expr><literal type="number">0x1ae0db23ul</literal></expr>, <expr><literal type="number">0x471f9244ul</literal></expr>, <expr><literal type="number">0xf55c0145ul</literal></expr>, <expr><literal type="number">0xc30f9c3bul</literal></expr>, <expr><literal type="number">0x40a84ea0ul</literal></expr>, <expr><literal type="number">0x5b8a266cul</literal></expr>}</block></expr>,
    }</block></expr></init></decl>;</decl_stmt>
    <comment type="line">// Expected output for each of the individual 8 64-byte messages under full double SHA256 (including padding).</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>result_d64</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{
        <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0xa0</literal></expr>,
        <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0x52</literal></expr>,
        <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0x25</literal></expr>,
        <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0xb7</literal></expr>,
        <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x45</literal></expr>,
        <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x3e</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x3e</literal></expr>,
        <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0x16</literal></expr>,
        <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xe9</literal></expr>,
        <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0xd8</literal></expr>,
        <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0xd1</literal></expr>,
        <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xc7</literal></expr>,
        <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x4d</literal></expr>,
        <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x84</literal></expr>,
        <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x4e</literal></expr>,
        <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x9a</literal></expr>,
        <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x51</literal></expr>
    }</block></expr></init></decl>;</decl_stmt>


    <comment type="line">// Test Transform() for 0 through 8 transformations.</comment>
    <for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>uint32_t</name></type> <name><name>state</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>copy</name></name><argument_list>(<argument><expr><name>init</name></expr></argument>, <argument><expr><name>init</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Transform</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>data</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>std</name><operator>::</operator><name>equal</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>state</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>result</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>

    <comment type="line">// Test TransformD64</comment>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>out</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>TransformD64</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>data</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>std</name><operator>::</operator><name>equal</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>out</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>, <argument><expr><name>result_d64</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line">// Test TransformD64_2way, if available.</comment>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_2way</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>out</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TransformD64_2way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>data</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>std</name><operator>::</operator><name>equal</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>out</name> <operator>+</operator> <literal type="number">64</literal></expr></argument>, <argument><expr><name>result_d64</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Test TransformD64_4way, if available.</comment>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_4way</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>out</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TransformD64_4way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>data</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>std</name><operator>::</operator><name>equal</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>out</name> <operator>+</operator> <literal type="number">128</literal></expr></argument>, <argument><expr><name>result_d64</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Test TransformD64_8way, if available.</comment>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_8way</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>out</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TransformD64_8way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>data</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>std</name><operator>::</operator><name>equal</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>out</name> <operator>+</operator> <literal type="number">256</literal></expr></argument>, <argument><expr><name>result_d64</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ASM</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__amd64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__i386__</name></expr></argument>)</argument_list></call><operator>)</operator></expr></cpp:if>
<comment type="block" format="doxygen">/** Check whether the OS has enabled AVX registers. */</comment>
<function><type><name>bool</name></type> <name>AVXEnabled</name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
    <asm>__asm__("xgetbv" : "=a"(a), "=d"(d) : "c"(0));</asm>
    <return>return <expr><operator>(</operator><name>a</name> <operator>&amp;</operator> <literal type="number">6</literal><operator>)</operator> <operator>==</operator> <literal type="number">6</literal></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></namespace> <comment type="line">// namespace</comment>


<function><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>SHA256AutoDetect</name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>ret</name> <init>= <expr><literal type="string">"standard"</literal></expr></init></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ASM</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAVE_GETCPUID</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name>bool</name></type> <name>have_sse4</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>have_xsave</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>have_avx</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>have_avx2</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>have_shani</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>enabled_avx</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>AVXEnabled</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>have_sse4</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>have_avx</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>have_xsave</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>have_avx2</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>have_shani</name></expr>;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>enabled_avx</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>uint32_t</name></type> <name>eax</name></decl>, <decl><type ref="prev"/><name>ebx</name></decl>, <decl><type ref="prev"/><name>ecx</name></decl>, <decl><type ref="prev"/><name>edx</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>GetCPUID</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>eax</name></expr></argument>, <argument><expr><name>ebx</name></expr></argument>, <argument><expr><name>ecx</name></expr></argument>, <argument><expr><name>edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>have_sse4</name> <operator>=</operator> <operator>(</operator><name>ecx</name> <operator>&gt;&gt;</operator> <literal type="number">19</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>have_xsave</name> <operator>=</operator> <operator>(</operator><name>ecx</name> <operator>&gt;&gt;</operator> <literal type="number">27</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>have_avx</name> <operator>=</operator> <operator>(</operator><name>ecx</name> <operator>&gt;&gt;</operator> <literal type="number">28</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>have_xsave</name> <operator>&amp;&amp;</operator> <name>have_avx</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>enabled_avx</name> <operator>=</operator> <call><name>AVXEnabled</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>have_sse4</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>GetCPUID</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>eax</name></expr></argument>, <argument><expr><name>ebx</name></expr></argument>, <argument><expr><name>ecx</name></expr></argument>, <argument><expr><name>edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>have_avx2</name> <operator>=</operator> <operator>(</operator><name>ebx</name> <operator>&gt;&gt;</operator> <literal type="number">5</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>have_shani</name> <operator>=</operator> <operator>(</operator><name>ebx</name> <operator>&gt;&gt;</operator> <literal type="number">29</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ENABLE_SHANI</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BUILD_BITCOIN_INTERNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <if_stmt><if>if <condition>(<expr><name>have_shani</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>Transform</name> <operator>=</operator> <name><name>sha256_shani</name><operator>::</operator><name>Transform</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>TransformD64</name> <operator>=</operator> <name><name>TransformD64Wrapper</name><argument_list type="generic">&lt;<argument><expr><name><name>sha256_shani</name><operator>::</operator><name>Transform</name></name></expr></argument>&gt;</argument_list></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>TransformD64_2way</name> <operator>=</operator> <name><name>sha256d64_shani</name><operator>::</operator><name>Transform_2way</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="string">"shani(1way,2way)"</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>have_sse4</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt> <comment type="line">// Disable SSE4/AVX2;</comment>
        <expr_stmt><expr><name>have_avx2</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

    <if_stmt><if>if <condition>(<expr><name>have_sse4</name></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__amd64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
        <expr_stmt><expr><name>Transform</name> <operator>=</operator> <name><name>sha256_sse4</name><operator>::</operator><name>Transform</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>TransformD64</name> <operator>=</operator> <name><name>TransformD64Wrapper</name><argument_list type="generic">&lt;<argument><expr><name><name>sha256_sse4</name><operator>::</operator><name>Transform</name></name></expr></argument>&gt;</argument_list></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="string">"sse4(1way)"</literal></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ENABLE_SSE41</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BUILD_BITCOIN_INTERNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>
        <expr_stmt><expr><name>TransformD64_4way</name> <operator>=</operator> <name><name>sha256d64_sse41</name><operator>::</operator><name>Transform_4way</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ret</name> <operator>+=</operator> <literal type="string">",sse41(4way)"</literal></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
    </block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ENABLE_AVX2</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BUILD_BITCOIN_INTERNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <if_stmt><if>if <condition>(<expr><name>have_avx2</name> <operator>&amp;&amp;</operator> <name>have_avx</name> <operator>&amp;&amp;</operator> <name>enabled_avx</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>TransformD64_8way</name> <operator>=</operator> <name><name>sha256d64_avx2</name><operator>::</operator><name>Transform_8way</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ret</name> <operator>+=</operator> <literal type="string">",avx2(8way)"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>SelfTest</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="line" format="doxygen">////// SHA-256</comment>

<constructor><name><name>CSHA256</name><operator>::</operator><name>CSHA256</name></name><parameter_list>()</parameter_list> <member_init_list>: <call><name>bytes</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>sha256</name><operator>::</operator><name>Initialize</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<function><type><name>CSHA256</name><modifier>&amp;</modifier></type> <name><name>CSHA256</name><operator>::</operator><name>Write</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>end</name> <init>= <expr><name>data</name> <operator>+</operator> <name>len</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>size_t</name></type> <name>bufsize</name> <init>= <expr><name>bytes</name> <operator>%</operator> <literal type="number">64</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>bufsize</name> <operator>&amp;&amp;</operator> <name>bufsize</name> <operator>+</operator> <name>len</name> <operator>&gt;=</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// Fill the buffer, and process it.</comment>
        <expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <name>bufsize</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="number">64</literal> <operator>-</operator> <name>bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>bytes</name> <operator>+=</operator> <literal type="number">64</literal> <operator>-</operator> <name>bufsize</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">64</literal> <operator>-</operator> <name>bufsize</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>Transform</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>bufsize</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>end</name> <operator>-</operator> <name>data</name> <operator>&gt;=</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>size_t</name></type> <name>blocks</name> <init>= <expr><operator>(</operator><name>end</name> <operator>-</operator> <name>data</name><operator>)</operator> <operator>/</operator> <literal type="number">64</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>Transform</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>data</name> <operator>+=</operator> <literal type="number">64</literal> <operator>*</operator> <name>blocks</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>bytes</name> <operator>+=</operator> <literal type="number">64</literal> <operator>*</operator> <name>blocks</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>end</name> <operator>&gt;</operator> <name>data</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// Fill the buffer with what remains.</comment>
        <expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <name>bufsize</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>end</name> <operator>-</operator> <name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>bytes</name> <operator>+=</operator> <name>end</name> <operator>-</operator> <name>data</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><operator>*</operator><name>this</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>CSHA256</name><operator>::</operator><name>Finalize</name></name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name></type> <name><name>hash</name><index>[<expr><name>OUTPUT_SIZE</name></expr>]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>pad</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0x80</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>sizedesc</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>WriteBE64</name><argument_list>(<argument><expr><name>sizedesc</name></expr></argument>, <argument><expr><name>bytes</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Write</name><argument_list>(<argument><expr><name>pad</name></expr></argument>, <argument><expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><operator>(</operator><literal type="number">119</literal> <operator>-</operator> <operator>(</operator><name>bytes</name> <operator>%</operator> <literal type="number">64</literal><operator>)</operator><operator>)</operator> <operator>%</operator> <literal type="number">64</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Write</name><argument_list>(<argument><expr><name>sizedesc</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>WriteBE32</name><argument_list>(<argument><expr><name>hash</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>, <argument><expr><name><name>s</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>CSHA256</name><modifier>&amp;</modifier></type> <name><name>CSHA256</name><operator>::</operator><name>Reset</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name>bytes</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sha256</name><operator>::</operator><name>Initialize</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>*</operator><name>this</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>SHA256D64</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>blocks</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_8way</name></expr>)</condition> <block>{<block_content>
        <while>while <condition>(<expr><name>blocks</name> <operator>&gt;=</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>TransformD64_8way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">256</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>in</name> <operator>+=</operator> <literal type="number">512</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>blocks</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_4way</name></expr>)</condition> <block>{<block_content>
        <while>while <condition>(<expr><name>blocks</name> <operator>&gt;=</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>TransformD64_4way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>in</name> <operator>+=</operator> <literal type="number">256</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>blocks</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TransformD64_2way</name></expr>)</condition> <block>{<block_content>
        <while>while <condition>(<expr><name>blocks</name> <operator>&gt;=</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>TransformD64_2way</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>in</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>blocks</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
        </block_content>}</block></while>
    </block_content>}</block></if></if_stmt>
    <while>while <condition>(<expr><name>blocks</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>TransformD64</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>out</name> <operator>+=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>in</name> <operator>+=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
        <expr_stmt><expr><operator>--</operator><name>blocks</name></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>
</unit>
