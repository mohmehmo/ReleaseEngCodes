<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/recentrequeststablemodel.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/recentrequeststablemodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/bitcoinunits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/optionsmodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;clientversion.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;streams.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utility&gt;</cpp:file></cpp:include>

<constructor><name><name>RecentRequestsTableModel</name><operator>::</operator><name>RecentRequestsTableModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QAbstractTableModel</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>, <call><name>walletModel</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <comment type="line">// Load entries from wallet</comment>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name><name>std</name><operator>::</operator><name>string</name></name></expr></argument>&gt;</argument_list></name></type> <name>vReceiveRequests</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>parent</name><operator>-&gt;</operator><name>loadReceiveRequests</name></name><argument_list>(<argument><expr><name>vReceiveRequests</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><specifier>const</specifier> <name><name>std</name><operator>::</operator><name>string</name></name><modifier>&amp;</modifier></type> <name>request</name> <range>: <expr><name>vReceiveRequests</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>addNewRequest</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <comment type="block">/* These columns must match the indices in the ColumnIndex enumeration */</comment>
    <expr_stmt><expr><name>columns</name> <operator>&lt;&lt;</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Date"</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Label"</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Message"</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <call><name>getAmountTitle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>OptionsModel</name><operator>::</operator><name>displayUnitChanged</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>RecentRequestsTableModel</name><operator>::</operator><name>updateDisplayUnit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>RecentRequestsTableModel</name><operator>::</operator><name>~RecentRequestsTableModel</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <comment type="block">/* Intentionally left empty */</comment>
</block_content>}</block></destructor>

<function><type><name>int</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>rowCount</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <expr_stmt><expr><call><name>Q_UNUSED</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name><name>list</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>columnCount</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <expr_stmt><expr><call><name>Q_UNUSED</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name><name>columns</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>QVariant</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>data</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>role</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>index</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>index</name><operator>.</operator><name>row</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <call><name><name>list</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><call><name>QVariant</name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if<condition>(<expr><name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name> <operator>||</operator> <name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name> <modifier>*</modifier></type><name>rec</name> <init>= <expr><operator>&amp;</operator><name><name>list</name><index>[<expr><call><name><name>index</name><operator>.</operator><name>row</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <switch>switch<condition>(<expr><call><name><name>index</name><operator>.</operator><name>column</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
        <case>case <expr><name>Date</name></expr>:</case>
            <return>return <expr><call><name><name>GUIUtil</name><operator>::</operator><name>dateTimeStr</name></name><argument_list>(<argument><expr><name><name>rec</name><operator>-&gt;</operator><name>date</name></name></expr></argument>)</argument_list></call></expr>;</return>
        <case>case <expr><name>Label</name></expr>:</case>
            <if_stmt><if>if<condition>(<expr><call><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>label</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name></expr>)</condition>
            <block>{<block_content>
                <return>return <expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"(no label)"</literal></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></if>
            <else>else
            <block>{<block_content>
                <return>return <expr><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>label</name></name></expr>;</return>
            </block_content>}</block></else></if_stmt>
        <case>case <expr><name>Message</name></expr>:</case>
            <if_stmt><if>if<condition>(<expr><call><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>message</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name></expr>)</condition>
            <block>{<block_content>
                <return>return <expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"(no message)"</literal></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></if>
            <else>else
            <block>{<block_content>
                <return>return <expr><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>message</name></name></expr>;</return>
            </block_content>}</block></else></if_stmt>
        <case>case <expr><name>Amount</name></expr>:</case>
            <if_stmt><if>if <condition>(<expr><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>amount</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"(no amount requested)"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
            <if type="elseif">else if <condition>(<expr><name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>format</name></name><argument_list>(<argument><expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>amount</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name><name>BitcoinUnits</name><operator>::</operator><name>separatorNever</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
            <else>else<block type="pseudo"><block_content>
                <return>return <expr><call><name><name>BitcoinUnits</name><operator>::</operator><name>format</name></name><argument_list>(<argument><expr><call><name><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>amount</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>
        </block_content>}</block></switch>
    </block_content>}</block></if>
    <if type="elseif">else if <condition>(<expr><name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>TextAlignmentRole</name></name></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>index</name><operator>.</operator><name>column</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>Amount</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name><name>Qt</name><operator>::</operator><name>AlignRight</name></name><operator>|</operator><name><name>Qt</name><operator>::</operator><name>AlignVCenter</name></name><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>QVariant</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>setData</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QVariant</name> <modifier>&amp;</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>role</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>QVariant</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>headerData</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>section</name></decl></parameter>, <parameter><decl><type><name><name>Qt</name><operator>::</operator><name>Orientation</name></name></type> <name>orientation</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>role</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><name>orientation</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>Horizontal</name></name></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if<condition>(<expr><name>role</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DisplayRole</name></name> <operator>&amp;&amp;</operator> <name>section</name> <operator>&lt;</operator> <call><name><name>columns</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <return>return <expr><name><name>columns</name><index>[<expr><name>section</name></expr>]</index></name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>QVariant</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/** Updates the column title to "Amount (DisplayUnit)" and emits headerDataChanged() signal for table headers to react. */</comment>
<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>updateAmountColumnTitle</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>columns</name><index>[<expr><name>Amount</name></expr>]</index></name> <operator>=</operator> <call><name>getAmountTitle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>headerDataChanged</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>Horizontal</name></name></expr></argument>,<argument><expr><name>Amount</name></expr></argument>,<argument><expr><name>Amount</name></expr></argument>)</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<comment type="block" format="doxygen">/** Gets title for amount column including current display unit if optionsModel reference available. */</comment>
<function><type><name>QString</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>getAmountTitle</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <return>return <expr><ternary><condition><expr><operator>(</operator><call><name><name>this</name><operator>-&gt;</operator><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">nullptr</literal><operator>)</operator></expr> ?</condition><then> <expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Requested"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">" ("</literal><operator>+</operator><call><name><name>BitcoinUnits</name><operator>::</operator><name>shortName</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>-&gt;</operator><name>walletModel</name><operator>-&gt;</operator><name>getOptionsModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>getDisplayUnit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">")"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><name>QModelIndex</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>index</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>column</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <expr_stmt><expr><call><name>Q_UNUSED</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>createIndex</name><argument_list>(<argument><expr><name>row</name></expr></argument>, <argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>removeRows</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>Q_UNUSED</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if<condition>(<expr><name>count</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>row</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>row</name><operator>+</operator><name>count</name><operator>)</operator> <operator>&lt;=</operator> <call><name><name>list</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
        <block>{<block_content>
            <decl_stmt><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name><modifier>*</modifier></type> <name>rec</name> <init>= <expr><operator>&amp;</operator><name><name>list</name><index>[<expr><name>row</name><operator>+</operator><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>walletModel</name><operator>-&gt;</operator><name>saveReceiveRequest</name></name><argument_list>(<argument><expr><call><name><name>rec</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>address</name><operator>.</operator><name>toStdString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>rec</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></for>

        <expr_stmt><expr><call><name>beginRemoveRows</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>row</name></expr></argument>, <argument><expr><name>row</name> <operator>+</operator> <name>count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>erase</name></name><argument_list>(<argument><expr><call><name><name>list</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>row</name></expr></argument>, <argument><expr><call><name><name>list</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>row</name> <operator>+</operator> <name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>endRemoveRows</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name><name>Qt</name><operator>::</operator><name>ItemFlags</name></name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>flags</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>index</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <return>return <expr><name><name>Qt</name><operator>::</operator><name>ItemIsSelectable</name></name> <operator>|</operator> <name><name>Qt</name><operator>::</operator><name>ItemIsEnabled</name></name></expr>;</return>
</block_content>}</block></function>

<comment type="line">// called when adding a request from the GUI</comment>
<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>addNewRequest</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SendCoinsRecipient</name> <modifier>&amp;</modifier></type><name>recipient</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>RecentRequestEntry</name></type> <name>newEntry</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>newEntry</name><operator>.</operator><name>id</name></name> <operator>=</operator> <operator>++</operator><name>nReceiveRequestsMaxId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>newEntry</name><operator>.</operator><name>date</name></name> <operator>=</operator> <call><name><name>QDateTime</name><operator>::</operator><name>currentDateTime</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>newEntry</name><operator>.</operator><name>recipient</name></name> <operator>=</operator> <name>recipient</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>CDataStream</name></type> <name>ss</name><argument_list>(<argument><expr><name>SER_DISK</name></expr></argument>, <argument><expr><name>CLIENT_VERSION</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&lt;&lt;</operator> <name>newEntry</name></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>walletModel</name><operator>-&gt;</operator><name>saveReceiveRequest</name></name><argument_list>(<argument><expr><call><name><name>recipient</name><operator>.</operator><name>address</name><operator>.</operator><name>toStdString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>newEntry</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><call><name><name>ss</name><operator>.</operator><name>str</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><call><name>addNewRequest</name><argument_list>(<argument><expr><name>newEntry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// called from ctor when loading from wallet</comment>
<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>addNewRequest</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>std</name><operator>::</operator><name>string</name></name> <modifier>&amp;</modifier></type><name>recipient</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>char</name></expr></argument>&gt;</argument_list></name></type> <name>data</name><argument_list>(<argument><expr><call><name><name>recipient</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>recipient</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CDataStream</name></type> <name>ss</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>SER_DISK</name></expr></argument>, <argument><expr><name>CLIENT_VERSION</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>RecentRequestEntry</name></type> <name>entry</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&gt;&gt;</operator> <name>entry</name></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>.</operator><name>id</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <comment type="line">// should not happen</comment>
        <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>.</operator><name>id</name></name> <operator>&gt;</operator> <name>nReceiveRequestsMaxId</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>nReceiveRequestsMaxId</name> <operator>=</operator> <name><name>entry</name><operator>.</operator><name>id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt><expr><call><name>addNewRequest</name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// actually add to table in GUI</comment>
<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>addNewRequest</name></name><parameter_list>(<parameter><decl><type><name>RecentRequestEntry</name> <modifier>&amp;</modifier></type><name>recipient</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>beginInsertRows</name><argument_list>(<argument><expr><call><name>QModelIndex</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>prepend</name></name><argument_list>(<argument><expr><name>recipient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>endInsertRows</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>sort</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>column</name></decl></parameter>, <parameter><decl><type><name><name>Qt</name><operator>::</operator><name>SortOrder</name></name></type> <name>order</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>sort</name></name><argument_list>(<argument><expr><call><name><name>list</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>list</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>RecentRequestEntryLessThan</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><name>order</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Q_EMIT</name></type> <name>dataChanged</name><argument_list>(<argument><expr><call><name>index</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>QModelIndex</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>index</name><argument_list>(<argument><expr><call><name><name>list</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>NUMBER_OF_COLUMNS</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><call><name>QModelIndex</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>RecentRequestsTableModel</name><operator>::</operator><name>updateDisplayUnit</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>updateAmountColumnTitle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function type="operator"><type><name>bool</name></type> <name><name>RecentRequestEntryLessThan</name><operator>::</operator><name>operator<name>()</name></name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name><modifier>&amp;</modifier></type> <name>left</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name><modifier>&amp;</modifier></type> <name>right</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name><modifier>*</modifier></type> <name>pLeft</name> <init>= <expr><operator>&amp;</operator><name>left</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>RecentRequestEntry</name><modifier>*</modifier></type> <name>pRight</name> <init>= <expr><operator>&amp;</operator><name>right</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>order</name> <operator>==</operator> <name><name>Qt</name><operator>::</operator><name>DescendingOrder</name></name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>swap</name></name><argument_list>(<argument><expr><name>pLeft</name></expr></argument>, <argument><expr><name>pRight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <switch>switch<condition>(<expr><name>column</name></expr>)</condition>
    <block>{<block_content>
    <case>case <expr><name><name>RecentRequestsTableModel</name><operator>::</operator><name>Date</name></name></expr>:</case>
        <return>return <expr><call><name><name>pLeft</name><operator>-&gt;</operator><name>date</name><operator>.</operator><name>toTime_t</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <call><name><name>pRight</name><operator>-&gt;</operator><name>date</name><operator>.</operator><name>toTime_t</name></name><argument_list>()</argument_list></call></expr>;</return>
    <case>case <expr><name><name>RecentRequestsTableModel</name><operator>::</operator><name>Label</name></name></expr>:</case>
        <return>return <expr><name><name>pLeft</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>label</name></name> <operator>&lt;</operator> <name><name>pRight</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>label</name></name></expr>;</return>
    <case>case <expr><name><name>RecentRequestsTableModel</name><operator>::</operator><name>Message</name></name></expr>:</case>
        <return>return <expr><name><name>pLeft</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>message</name></name> <operator>&lt;</operator> <name><name>pRight</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>message</name></name></expr>;</return>
    <case>case <expr><name><name>RecentRequestsTableModel</name><operator>::</operator><name>Amount</name></name></expr>:</case>
        <return>return <expr><name><name>pLeft</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>amount</name></name> <operator>&lt;</operator> <name><name>pRight</name><operator>-&gt;</operator><name>recipient</name><operator>.</operator><name>amount</name></name></expr>;</return>
    <default>default:</default>
        <return>return <expr><name><name>pLeft</name><operator>-&gt;</operator><name>id</name></name> <operator>&lt;</operator> <name><name>pRight</name><operator>-&gt;</operator><name>id</name></name></expr>;</return>
    </block_content>}</block></switch>
</block_content>}</block></function>
</unit>
