<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/script/script_error.h"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_SCRIPT_SCRIPT_ERROR_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_SCRIPT_SCRIPT_ERROR_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><enum>enum <name>ScriptError_t</name>
<block>{
    <decl><name>SCRIPT_ERR_OK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
    <decl><name>SCRIPT_ERR_UNKNOWN_ERROR</name></decl>,
    <decl><name>SCRIPT_ERR_EVAL_FALSE</name></decl>,
    <decl><name>SCRIPT_ERR_OP_RETURN</name></decl>,

    <comment type="block">/* Max sizes */</comment>
    <decl><name>SCRIPT_ERR_SCRIPT_SIZE</name></decl>,
    <decl><name>SCRIPT_ERR_PUSH_SIZE</name></decl>,
    <decl><name>SCRIPT_ERR_OP_COUNT</name></decl>,
    <decl><name>SCRIPT_ERR_STACK_SIZE</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_COUNT</name></decl>,
    <decl><name>SCRIPT_ERR_PUBKEY_COUNT</name></decl>,

    <comment type="block">/* Failed verify operations */</comment>
    <decl><name>SCRIPT_ERR_VERIFY</name></decl>,
    <decl><name>SCRIPT_ERR_EQUALVERIFY</name></decl>,
    <decl><name>SCRIPT_ERR_CHECKMULTISIGVERIFY</name></decl>,
    <decl><name>SCRIPT_ERR_CHECKSIGVERIFY</name></decl>,
    <decl><name>SCRIPT_ERR_NUMEQUALVERIFY</name></decl>,

    <comment type="block">/* Logical/Format/Canonical errors */</comment>
    <decl><name>SCRIPT_ERR_BAD_OPCODE</name></decl>,
    <decl><name>SCRIPT_ERR_DISABLED_OPCODE</name></decl>,
    <decl><name>SCRIPT_ERR_INVALID_STACK_OPERATION</name></decl>,
    <decl><name>SCRIPT_ERR_INVALID_ALTSTACK_OPERATION</name></decl>,
    <decl><name>SCRIPT_ERR_UNBALANCED_CONDITIONAL</name></decl>,

    <comment type="block">/* CHECKLOCKTIMEVERIFY and CHECKSEQUENCEVERIFY */</comment>
    <decl><name>SCRIPT_ERR_NEGATIVE_LOCKTIME</name></decl>,
    <decl><name>SCRIPT_ERR_UNSATISFIED_LOCKTIME</name></decl>,

    <comment type="block">/* Malleability */</comment>
    <decl><name>SCRIPT_ERR_SIG_HASHTYPE</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_DER</name></decl>,
    <decl><name>SCRIPT_ERR_MINIMALDATA</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_PUSHONLY</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_HIGH_S</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_NULLDUMMY</name></decl>,
    <decl><name>SCRIPT_ERR_PUBKEYTYPE</name></decl>,
    <decl><name>SCRIPT_ERR_CLEANSTACK</name></decl>,
    <decl><name>SCRIPT_ERR_MINIMALIF</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_NULLFAIL</name></decl>,

    <comment type="block">/* softfork safeness */</comment>
    <decl><name>SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS</name></decl>,
    <decl><name>SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM</name></decl>,

    <comment type="block">/* segregated witness */</comment>
    <decl><name>SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_MALLEATED</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_MALLEATED_P2SH</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_UNEXPECTED</name></decl>,
    <decl><name>SCRIPT_ERR_WITNESS_PUBKEYTYPE</name></decl>,

    <comment type="block">/* Constant scriptCode */</comment>
    <decl><name>SCRIPT_ERR_OP_CODESEPARATOR</name></decl>,
    <decl><name>SCRIPT_ERR_SIG_FINDANDDELETE</name></decl>,

    <decl><name>SCRIPT_ERR_ERROR_COUNT</name></decl>
}</block></enum></type> <name>ScriptError</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_ERR_LAST</name></cpp:macro> <cpp:value>SCRIPT_ERR_ERROR_COUNT</cpp:value></cpp:define>

<function_decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>ScriptErrorString</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ScriptError</name></type> <name>error</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_SCRIPT_SCRIPT_ERROR_H</comment>
</unit>
