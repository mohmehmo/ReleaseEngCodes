<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/signverifymessagedialog.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/signverifymessagedialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/forms/ui_signverifymessagedialog.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addressbookpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/walletmodel.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;key_io.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;util/validation.h&gt;</cpp:file></cpp:include> <comment type="line">// For strMessageMagic</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/wallet.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QClipboard&gt;</cpp:file></cpp:include>

<constructor><name><name>SignVerifyMessageDialog</name><operator>::</operator><name>SignVerifyMessageDialog</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>_platformStyle</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QDialog</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>ui</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Ui</name><operator>::</operator><name>SignVerifyMessageDialog</name></name></expr></argument>)</argument_list></call>,
    <call><name>model</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>platformStyle</name><argument_list>(<argument><expr><name>_platformStyle</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>setupUi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressBookButton_SM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/address-book"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>pasteButton_SM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/editpaste"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>copySignatureButton_SM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/editcopy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signMessageButton_SM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/edit"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>clearButton_SM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressBookButton_VM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/address-book"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>verifyMessageButton_VM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/transaction_0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>clearButton_VM</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>setPlaceholderText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Click \"Sign Message\" to generate signature"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>setupAddressWidget</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>setupAddressWidget</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_SM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_VM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>installEventFilter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>GUIUtil</name><operator>::</operator><name>fixedPitchFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>GUIUtil</name><operator>::</operator><name>fixedPitchFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>SignVerifyMessageDialog</name><operator>::</operator><name>~SignVerifyMessageDialog</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>delete</operator> <name>ui</name></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>setModel</name></name><parameter_list>(<parameter><decl><type><name>WalletModel</name> <modifier>*</modifier></type><name>_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>model</name></name> <operator>=</operator> <name>_model</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>setAddress_SM</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>address</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_SM</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>setAddress_VM</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name> <modifier>&amp;</modifier></type><name>address</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_VM</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>showTab_SM</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fShow</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tabWidget</name><operator>-&gt;</operator><name>setCurrentIndex</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>fShow</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>-&gt;</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>showTab_VM</name></name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>fShow</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tabWidget</name><operator>-&gt;</operator><name>setCurrentIndex</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>fShow</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>-&gt;</operator><name>show</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_addressBookButton_SM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>model</name> <operator>&amp;&amp;</operator> <call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>AddressBookPage</name></type> <name>dlg</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ForSelection</name></name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ReceivingTab</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><call><name>setAddress_SM</name><argument_list>(<argument><expr><call><name><name>dlg</name><operator>.</operator><name>getReturnValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_pasteButton_SM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>setAddress_SM</name><argument_list>(<argument><expr><call><name><name>QApplication</name><operator>::</operator><name>clipboard</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>text</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_signMessageButton_SM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <comment type="block">/* Clear old signature to ensure users don't get confused on error with an old signature displayed */</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>CTxDestination</name></type> <name>destination</name> <init>= <expr><call><name>DecodeDestination</name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>IsValidDestination</name><argument_list>(<argument><expr><name>destination</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The entered address is invalid."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the address and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>PKHash</name><modifier>*</modifier></type> <name>pkhash</name> <init>= <expr><call><name><name>boost</name><operator>::</operator><name>get</name><argument_list type="generic">&lt;<argument><expr><name>PKHash</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>destination</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>pkhash</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The entered address does not refer to a key."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the address and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name><name>WalletModel</name><operator>::</operator><name>UnlockContext</name></name></type> <name>ctx</name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>requestUnlock</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ctx</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Wallet unlock was cancelled."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>CKey</name></type> <name>key</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>model</name><operator>-&gt;</operator><name>wallet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPrivKey</name><argument_list>(<argument><expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><name>destination</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>CKeyID</name><argument_list>(<argument><expr><operator>*</operator><name>pkhash</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Private key for the entered address is not available."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>CHashWriter</name></type> <name>ss</name><argument_list>(<argument><expr><name>SER_GETHASH</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&lt;&lt;</operator> <name>strMessageMagic</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&lt;&lt;</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_SM</name><operator>-&gt;</operator><name>document</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>toPlainText</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>unsigned</name> <name>char</name></expr></argument>&gt;</argument_list></name></type> <name>vchSig</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>key</name><operator>.</operator><name>SignCompact</name></name><argument_list>(<argument><expr><call><name><name>ss</name><operator>.</operator><name>GetHash</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>vchSig</name></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;nobr&gt;"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Message signing failed."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;/nobr&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: green; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;nobr&gt;"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Message signed."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;/nobr&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name><name>QString</name><operator>::</operator><name>fromStdString</name></name><argument_list>(<argument><expr><call><name>EncodeBase64</name><argument_list>(<argument><expr><call><name><name>vchSig</name><operator>.</operator><name>data</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>vchSig</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_copySignatureButton_SM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>setClipboard</name></name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_clearButton_SM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_SM</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_addressBookButton_VM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>model</name> <operator>&amp;&amp;</operator> <call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>AddressBookPage</name></type> <name>dlg</name><argument_list>(<argument><expr><name>platformStyle</name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>ForSelection</name></name></expr></argument>, <argument><expr><name><name>AddressBookPage</name><operator>::</operator><name>SendingTab</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>getAddressTableModel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><call><name>setAddress_VM</name><argument_list>(<argument><expr><call><name><name>dlg</name><operator>.</operator><name>getReturnValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_verifyMessageButton_VM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CTxDestination</name></type> <name>destination</name> <init>= <expr><call><name>DecodeDestination</name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>IsValidDestination</name><argument_list>(<argument><expr><name>destination</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The entered address is invalid."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the address and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>boost</name><operator>::</operator><name>get</name><argument_list type="generic">&lt;<argument><expr><name>PKHash</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>destination</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The entered address does not refer to a key."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the address and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>bool</name></type> <name>fInvalid</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>unsigned</name> <name>char</name></expr></argument>&gt;</argument_list></name></type> <name>vchSig</name> <init>= <expr><call><name>DecodeBase64</name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>c_str</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>fInvalid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>fInvalid</name></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The signature could not be decoded."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the signature and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>CHashWriter</name></type> <name>ss</name><argument_list>(<argument><expr><name>SER_GETHASH</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&lt;&lt;</operator> <name>strMessageMagic</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>ss</name> <operator>&lt;&lt;</operator> <call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_VM</name><operator>-&gt;</operator><name>document</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>toPlainText</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toStdString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>CPubKey</name></type> <name>pubkey</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>pubkey</name><operator>.</operator><name>RecoverCompact</name></name><argument_list>(<argument><expr><call><name><name>ss</name><operator>.</operator><name>GetHash</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>vchSig</name></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>setValid</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"The signature did not match the message digest."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Please check the signature and try again."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>CTxDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name>pubkey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <name>destination</name><operator>)</operator></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: red; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;nobr&gt;"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Message verification failed."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;/nobr&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setStyleSheet</name></name><argument_list>(<argument><expr><literal type="string">"QLabel { color: green; }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;nobr&gt;"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Message verified."</literal></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>QString</name><argument_list>(<argument><expr><literal type="string">"&lt;/nobr&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>on_clearButton_VM_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureIn_VM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>messageIn_VM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>addressIn_VM</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name><name>SignVerifyMessageDialog</name><operator>::</operator><name>eventFilter</name></name><parameter_list>(<parameter><decl><type><name>QObject</name> <modifier>*</modifier></type><name>object</name></decl></parameter>, <parameter><decl><type><name>QEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>event</name><operator>-&gt;</operator><name>type</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>QEvent</name><operator>::</operator><name>MouseButtonPress</name></name> <operator>||</operator> <call><name><name>event</name><operator>-&gt;</operator><name>type</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>QEvent</name><operator>::</operator><name>FocusIn</name></name></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>ui</name><operator>-&gt;</operator><name>tabWidget</name><operator>-&gt;</operator><name>currentIndex</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
        <block>{<block_content>
            <comment type="block">/* Clear status message on focus change */</comment>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_SM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <comment type="block">/* Select generated signature */</comment>
            <if_stmt><if>if <condition>(<expr><name>object</name> <operator>==</operator> <name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name></name></expr>)</condition>
            <block>{<block_content>
                <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>signatureOut_SM</name><operator>-&gt;</operator><name>selectAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if>
        <if type="elseif">else if <condition>(<expr><call><name><name>ui</name><operator>-&gt;</operator><name>tabWidget</name><operator>-&gt;</operator><name>currentIndex</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition>
        <block>{<block_content>
            <comment type="block">/* Clear status message on focus change */</comment>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>statusLabel_VM</name><operator>-&gt;</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>QDialog</name><operator>::</operator><name>eventFilter</name></name><argument_list>(<argument><expr><name>object</name></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
