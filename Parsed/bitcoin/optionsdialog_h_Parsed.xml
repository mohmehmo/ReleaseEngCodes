<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/optionsdialog.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_OPTIONSDIALOG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_OPTIONSDIALOG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDialog&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QValidator&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>OptionsModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>QValidatedLineEdit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QDataWidgetMapper</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<name>namespace</name></type> <name>Ui</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>OptionsDialog</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<comment type="block" format="doxygen">/** Proxy address widget validator, checks for a valid proxy address.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>ProxyAddressValidator</name> <range>: <expr><name>public</name> <name>QValidator</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>ProxyAddressValidator</name><argument_list>(<argument><expr><name>QObject</name> <operator>*</operator><name>parent</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>State</name> <macro><name>validate</name><argument_list>(<argument>QString &amp;input</argument>, <argument>int &amp;pos</argument>)</argument_list></macro> <specifier>const</specifier></expr>;
}</block></expr></range></decl>;</decl_stmt>

<comment type="block" format="doxygen">/** Preferences dialog. */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>OptionsDialog</name> <range>: <expr><name>public</name> <name>QDialog</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <macro><name>OptionsDialog</name><argument_list>(<argument>QWidget *parent</argument>, <argument>bool enableWallet</argument>)</argument_list></macro></expr>;
    <expr><operator>~</operator><call><name>OptionsDialog</name><argument_list>()</argument_list></call></expr>;

    enum <expr><name>Tab</name> <block>{
        <expr><name>TAB_MAIN</name></expr>,
        <expr><name>TAB_NETWORK</name></expr>,
    }</block></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>OptionsModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>setMapper</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <macro><name>setCurrentTab</name><argument_list>(<argument>OptionsDialog::Tab tab</argument>)</argument_list></macro></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <comment type="block">/* set OK button state (enabled / disabled) */</comment>
    <name>void</name> <macro><name>setOkButtonState</name><argument_list>(<argument>bool fState</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>on_resetButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_openBitcoinConfButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_okButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_cancelButton_clicked</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <macro><name>on_hideTrayIcon_stateChanged</name><argument_list>(<argument>int fState</argument>)</argument_list></macro></expr>;

    <expr><name>void</name> <macro><name>togglePruneWarning</name><argument_list>(<argument>bool enabled</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <macro><name>showRestartWarning</name><argument_list>(<argument>bool fPersistent = false</argument>)</argument_list></macro></expr>;
    <expr><name>void</name> <call><name>clearStatusLabel</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>updateProxyValidationState</name><argument_list>()</argument_list></call></expr>;
    <comment type="block">/* query the networks, for which the default proxy is used */</comment>
    <expr><name>void</name> <call><name>updateDefaultProxyNets</name><argument_list>()</argument_list></call></expr>;

<expr><name>Q_SIGNALS</name><operator>:</operator>
    <name>void</name> <macro><name>proxyIpChecks</name><argument_list>(<argument>QValidatedLineEdit *pUiProxyIp</argument>, <argument>int nProxyPort</argument>)</argument_list></macro></expr>;

<expr><name>private</name><operator>:</operator>
    <name>Ui</name><operator>::</operator><name>OptionsDialog</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>OptionsModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><name>QDataWidgetMapper</name> <operator>*</operator><name>mapper</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_OPTIONSDIALOG_H</comment>
</unit>
