<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/rpc/register.h"><comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_RPC_REGISTER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_RPC_REGISTER_H</name></cpp:macro></cpp:define>

<comment type="block" format="doxygen">/** These are in one header file to avoid creating tons of single-function
 * headers for everything under src/rpc/ */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>CRPCTable</name></decl>;</decl_stmt>

<comment type="block" format="doxygen">/** Register block chain RPC commands */</comment>
<function_decl><type><name>void</name></type> <name>RegisterBlockchainRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>tableRPC</name></decl></parameter>)</parameter_list>;</function_decl>
<comment type="block" format="doxygen">/** Register P2P networking RPC commands */</comment>
<function_decl><type><name>void</name></type> <name>RegisterNetRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>tableRPC</name></decl></parameter>)</parameter_list>;</function_decl>
<comment type="block" format="doxygen">/** Register miscellaneous RPC commands */</comment>
<function_decl><type><name>void</name></type> <name>RegisterMiscRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>tableRPC</name></decl></parameter>)</parameter_list>;</function_decl>
<comment type="block" format="doxygen">/** Register mining RPC commands */</comment>
<function_decl><type><name>void</name></type> <name>RegisterMiningRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>tableRPC</name></decl></parameter>)</parameter_list>;</function_decl>
<comment type="block" format="doxygen">/** Register raw transaction RPC commands */</comment>
<function_decl><type><name>void</name></type> <name>RegisterRawTransactionRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>tableRPC</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>RegisterAllCoreRPCCommands</name><parameter_list>(<parameter><decl><type><name>CRPCTable</name> <modifier>&amp;</modifier></type><name>t</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>RegisterBlockchainRPCCommands</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>RegisterNetRPCCommands</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>RegisterMiscRPCCommands</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>RegisterMiningRPCCommands</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>RegisterRawTransactionRPCCommands</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_RPC_REGISTER_H</comment>
</unit>
