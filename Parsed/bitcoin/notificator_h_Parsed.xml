<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/notificator.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_NOTIFICATOR_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_NOTIFICATOR_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config/bitcoin-config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QIcon&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QObject&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QSystemTrayIcon</name></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_DBUS</name></cpp:ifdef>
<decl_stmt><decl><type><name>class</name></type> <name>QDBusInterface</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/** Cross-platform desktop notification client. */</comment>
<name>class</name></type> <name>Notificator</name><range>: <expr><name>public</name> <name>QObject</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <comment type="block" format="doxygen">/** Create a new notificator.
       @note Ownership of trayIcon is not transferred to this object.
    */</comment>
    <call><name>Notificator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>programName</name></expr></argument>, <argument><expr><name>QSystemTrayIcon</name> <operator>*</operator><name>trayIcon</name></expr></argument>, <argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>Notificator</name><argument_list>()</argument_list></call></expr>;

    <comment type="line">// Message class</comment>
    enum <expr><name>Class</name>
    <block>{
        <expr><name>Information</name></expr>,    <comment type="block" format="doxygen">/**&lt; Informational message */</comment>
        <expr><name>Warning</name></expr>,        <comment type="block" format="doxygen">/**&lt; Notify user of potential problem */</comment>
        <expr><name>Critical</name></expr>        <comment type="block" format="doxygen">/**&lt; An error occurred */</comment>
    }</block></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <comment type="block" format="doxygen">/** Show notification message.
       @param[in] cls    general message class
       @param[in] title  title shown with message
       @param[in] text   message content
       @param[in] icon   optional icon to show with message
       @param[in] millisTimeout notification timeout in milliseconds (defaults to 10 seconds)
       @note Platform implementations are free to ignore any of the provided fields except for \a text.
     */</comment>
    <name>void</name> <macro><name>notify</name><argument_list>(<argument>Class cls</argument>, <argument>const QString &amp;title</argument>, <argument>const QString &amp;text</argument>,
                <argument>const QIcon &amp;icon = QIcon()</argument>, <argument>int millisTimeout = <literal type="number">10000</literal></argument>)</argument_list></macro></expr>;

<expr><name>private</name><operator>:</operator>
    <name>QWidget</name> <operator>*</operator><name>parent</name></expr>;
    enum <expr><name>Mode</name> <block>{
        <expr><name>None</name></expr>,                       <comment type="block" format="doxygen">/**&lt; Ignore informational notifications, and show a modal pop-up dialog for Critical notifications. */</comment>
        <expr><name>Freedesktop</name></expr>,                <comment type="block" format="doxygen">/**&lt; Use DBus org.freedesktop.Notifications */</comment>
        <expr><name>QSystemTray</name></expr>,                <comment type="block" format="doxygen">/**&lt; Use QSystemTrayIcon::showMessage() */</comment>
        <expr><name>UserNotificationCenter</name></expr>      <comment type="block" format="doxygen">/**&lt; Use the 10.8+ User Notification Center (Mac only) */</comment>
    }</block></expr>;
    <expr><name>QString</name> <name>programName</name></expr>;
    <expr><name>Mode</name> <name>mode</name></expr>;
    <expr><name>QSystemTrayIcon</name> <operator>*</operator><name>trayIcon</name></expr>;
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_DBUS</name></cpp:ifdef>
    <expr><name>QDBusInterface</name> <operator>*</operator><name>interface</name></expr>;

    <expr><name>void</name> <macro><name>notifyDBus</name><argument_list>(<argument>Class cls</argument>, <argument>const QString &amp;title</argument>, <argument>const QString &amp;text</argument>, <argument>const QIcon &amp;icon</argument>, <argument>int millisTimeout</argument>)</argument_list></macro></expr>;
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
    <expr><name>void</name> <macro><name>notifySystray</name><argument_list>(<argument>Class cls</argument>, <argument>const QString &amp;title</argument>, <argument>const QString &amp;text</argument>, <argument>int millisTimeout</argument>)</argument_list></macro></expr>;
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>Q_OS_MAC</name></cpp:ifdef>
    <expr><name>void</name> <call><name>notifyMacUserNotificationCenter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>title</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>text</name></expr></argument>)</argument_list></call></expr>;
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_NOTIFICATOR_H</comment>
</unit>
