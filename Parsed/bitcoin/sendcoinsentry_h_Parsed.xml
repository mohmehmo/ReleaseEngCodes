<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/sendcoinsentry.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_SENDCOINSENTRY_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_SENDCOINSENTRY_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/sendcoinsrecipient.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QStackedWidget&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>interfaces</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Node</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace interfaces</comment>

<decl_stmt><decl><type><name>namespace</name></type> <name>Ui</name> <block>{<block_content>
    <decl_stmt><decl><type><name>class</name></type> <name>SendCoinsEntry</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<comment type="block" format="doxygen">/**
 * A single entry in the dialog for sending bitcoins.
 * Stacked widget, with different UIs for payment requests
 * with a strong payee identity.
 */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>SendCoinsEntry</name> <range>: <expr><name>public</name> <name>QStackedWidget</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>SendCoinsEntry</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr></argument>, <argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>SendCoinsEntry</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>bool</name> <call><name>validate</name><argument_list>(<argument><expr><name>interfaces</name><operator>::</operator><name>Node</name><operator>&amp;</operator> <name>node</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>SendCoinsRecipient</name> <call><name>getValue</name><argument_list>()</argument_list></call></expr>;

    <comment type="block" format="doxygen">/** Return whether the entry is still empty and unedited */</comment>
    <expr><name>bool</name> <call><name>isClear</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setValue</name><argument_list>(<argument><expr><specifier>const</specifier> <name>SendCoinsRecipient</name> <operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>setAddress</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>address</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>setAmount</name><argument_list>(<argument><expr><specifier>const</specifier> <name>CAmount</name> <operator>&amp;</operator><name>amount</name></expr></argument>)</argument_list></call></expr>;

    <comment type="block" format="doxygen">/** Set up the tab chain manually, as Qt messes up the tab chain by default in some cases
     *  (issue https://bugreports.qt-project.org/browse/QTBUG-10907).
     */</comment>
    <expr><name>QWidget</name> <operator>*</operator><call><name>setupTabChain</name><argument_list>(<argument><expr><name>QWidget</name> <operator>*</operator><name>prev</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setFocus</name><argument_list>()</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>clear</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>checkSubtractFeeFromAmount</name><argument_list>()</argument_list></call></expr>;

<expr><name>Q_SIGNALS</name><operator>:</operator>
    <name>void</name> <call><name>removeEntry</name><argument_list>(<argument><expr><name>SendCoinsEntry</name> <operator>*</operator><name>entry</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>useAvailableBalance</name><argument_list>(<argument><expr><name>SendCoinsEntry</name><operator>*</operator> <name>entry</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>payAmountChanged</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>subtractFeeFromAmountChanged</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>deleteClicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>useAvailableBalanceClicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_payTo_textChanged</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>address</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_addressBookButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_pasteButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>updateDisplayUnit</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>SendCoinsRecipient</name> <name>recipient</name></expr>;
    <expr><name>Ui</name><operator>::</operator><name>SendCoinsEntry</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr>;

    <expr><name>bool</name> <call><name>updateLabel</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>address</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_SENDCOINSENTRY_H</comment>
</unit>
