<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/wallet/test/ismine_tests.cpp"><comment type="line">// Copyright (c) 2017-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;key.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;node/context.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;script/script.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;script/standard.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test/util/setup_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/ismine.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wallet/wallet.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;boost/test/unit_test.hpp&gt;</cpp:file></cpp:include>


<macro><name>BOOST_FIXTURE_TEST_SUITE</name><argument_list>(<argument>ismine_tests</argument>, <argument>BasicTestingSetup</argument>)</argument_list></macro>

<macro><name>BOOST_AUTO_TEST_CASE</name><argument_list>(<argument>ismine_standard</argument>)</argument_list></macro>
<block>{<block_content>
    <decl_stmt><decl><type><name>CKey</name></type> <name><name>keys</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CPubKey</name></type> <name><name>pubkeys</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>MakeNewKey</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pubkeys</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>GetPubKey</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <decl_stmt><decl><type><name>CKey</name></type> <name>uncompressedKey</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>uncompressedKey</name><operator>.</operator><name>MakeNewKey</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>CPubKey</name></type> <name>uncompressedPubkey</name> <init>= <expr><call><name><name>uncompressedKey</name><operator>.</operator><name>GetPubKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NodeContext</name></type> <name>node</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name><name>interfaces</name><operator>::</operator><name>Chain</name></name></expr></argument>&gt;</argument_list></name></type> <name>chain</name> <init>= <expr><call><name><name>interfaces</name><operator>::</operator><name>MakeChain</name></name><argument_list>(<argument><expr><name>node</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>CScript</name></type> <name>scriptPubKey</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>isminetype</name></type> <name>result</name></decl>;</decl_stmt>

    <comment type="line">// P2PK compressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForRawPubKey</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore does not have key</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2PK uncompressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForRawPubKey</name><argument_list>(<argument><expr><name>uncompressedPubkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore does not have key</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2PKH compressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore does not have key</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2PKH uncompressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name>uncompressedPubkey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore does not have key</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2SH</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemScript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore does not have redeemScript or key</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has redeemScript but no key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has redeemScript and key</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// (P2PKH inside) P2SH inside P2SH (invalid)</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemscript_inner</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemscript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemscript_inner</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemscript_inner</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// (P2PKH inside) P2SH inside P2WSH (invalid)</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemscript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessscript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WPKH inside P2WSH (invalid)</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessscript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0KeyHash</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// (P2PKH inside) P2WSH inside P2WSH (invalid)</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessscript_inner</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessscript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessscript_inner</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessscript_inner</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessscript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WPKH compressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0KeyHash</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore implicitly has key and P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WPKH uncompressed</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0KeyHash</name><argument_list>(<argument><expr><call><name>PKHash</name><argument_list>(<argument><expr><name>uncompressedPubkey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key, but no P2SH redeemScript</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has key and P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// scriptPubKey multisig</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForMultisig</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <block>{<block_content><expr><name>uncompressedPubkey</name></expr><operator>,</operator> <expr><name><name>pubkeys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></block_content>}</block></argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt>

        <comment type="line">// Keystore does not have any keys</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has 1/2 keys</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has 2/2 keys</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has 2/2 keys and the script</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2SH multisig</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemScript</name> <init>= <expr><call><name>GetScriptForMultisig</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><block>{<expr><name>uncompressedPubkey</name></expr>, <expr><name><name>pubkeys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has no redeemScript</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WSH multisig with compressed keys</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessScript</name> <init>= <expr><call><name>GetScriptForMultisig</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><block>{<expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>pubkeys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys, but no witnessScript or P2SH redeemScript</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys and witnessScript, but no P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys, witnessScript, P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WSH multisig with uncompressed key</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name>uncompressedKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessScript</name> <init>= <expr><call><name>GetScriptForMultisig</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><block>{<expr><name>uncompressedPubkey</name></expr>, <expr><name><name>pubkeys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys, but no witnessScript or P2SH redeemScript</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys and witnessScript, but no P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys, witnessScript, P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// P2WSH multisig wrapped in P2SH</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>CScript</name></type> <name>witnessScript</name> <init>= <expr><call><name>GetScriptForMultisig</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><block>{<expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>pubkeys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CScript</name></type> <name>redeemScript</name> <init>= <expr><call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>WitnessV0ScriptHash</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>=</operator> <call><name>GetScriptForDestination</name><argument_list>(<argument><expr><call><name>ScriptHash</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has no witnessScript, P2SH redeemScript, or keys</comment>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has witnessScript and P2SH redeemScript, but no keys</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>redeemScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddCScript</name><argument_list>(<argument><expr><name>witnessScript</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Keystore has keys, witnessScript, P2SH redeemScript</comment>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_SPENDABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// OP_RETURN</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>scriptPubKey</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>&lt;&lt;</operator> <name>OP_RETURN</name> <operator>&lt;&lt;</operator> <call><name>ToByteVector</name><argument_list>(<argument><expr><name><name>pubkeys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// witness unspendable</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>scriptPubKey</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>&lt;&lt;</operator> <name>OP_0</name> <operator>&lt;&lt;</operator> <call><name>ToByteVector</name><argument_list>(<argument><expr><call><name>ParseHex</name><argument_list>(<argument><expr><literal type="string">"aabb"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// witness unknown</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>scriptPubKey</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>&lt;&lt;</operator> <name>OP_16</name> <operator>&lt;&lt;</operator> <call><name>ToByteVector</name><argument_list>(<argument><expr><call><name>ParseHex</name><argument_list>(<argument><expr><literal type="string">"aabb"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <comment type="line">// Nonstandard</comment>
    <block>{<block_content>
        <decl_stmt><decl><type><name>CWallet</name></type> <name>keystore</name><argument_list>(<argument><expr><call><name><name>chain</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>WalletLocation</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>WalletDatabase</name><operator>::</operator><name>CreateDummy</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>LOCK</name><argument_list>(<argument><expr><name><name>keystore</name><operator>.</operator><name>cs_wallet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK</name><argument_list>(<argument><expr><call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>AddKey</name><argument_list>(<argument><expr><name><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>scriptPubKey</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>scriptPubKey</name> <operator>&lt;&lt;</operator> <name>OP_9</name> <operator>&lt;&lt;</operator> <name>OP_ADD</name> <operator>&lt;&lt;</operator> <name>OP_11</name> <operator>&lt;&lt;</operator> <name>OP_EQUAL</name></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>keystore</name><operator>.</operator><name>GetLegacyScriptPubKeyMan</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>IsMine</name><argument_list>(<argument><expr><name>scriptPubKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BOOST_CHECK_EQUAL</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>ISMINE_NO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
}

BOOST_AUTO_TEST_SUITE_END<expr><operator>(</operator><operator>)</operator></expr>
</unit>
