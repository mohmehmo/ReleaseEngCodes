<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/receivecoinsdialog.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_RECEIVECOINSDIALOG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_RECEIVECOINSDIALOG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDialog&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QHeaderView&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QItemSelection&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QKeyEvent&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMenu&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPoint&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QVariant&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>Ui</name> <block>{<block_content>
    <decl_stmt><decl><type><name>class</name></type> <name>ReceiveCoinsDialog</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QModelIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/** Dialog for requesting payment of bitcoins */</comment>
<name>class</name></type> <name>ReceiveCoinsDialog</name> <range>: <expr><name>public</name> <name>QDialog</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    enum <name>ColumnWidths</name> <block>{
        <expr><name>DATE_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">130</literal></expr>,
        <expr><name>LABEL_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">120</literal></expr>,
        <expr><name>AMOUNT_MINIMUM_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">180</literal></expr>,
        <expr><name>MINIMUM_COLUMN_WIDTH</name> <operator>=</operator> <literal type="number">130</literal></expr>
    }</block></expr>;

    <expr><name>explicit</name> <call><name>ReceiveCoinsDialog</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr></argument>, <argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>ReceiveCoinsDialog</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>clear</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>reject</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>accept</name><argument_list>()</argument_list></call></expr>;

<expr><name>protected</name><operator>:</operator>
    <name>virtual</name> <name>void</name> <call><name>keyPressEvent</name><argument_list>(<argument><expr><name>QKeyEvent</name> <operator>*</operator><name>event</name></expr></argument>)</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>Ui</name><operator>::</operator><name>ReceiveCoinsDialog</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>GUIUtil</name><operator>::</operator><name>TableViewLastColumnResizingFixer</name> <operator>*</operator><name>columnResizingFixer</name></expr>;
    <expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><name>QMenu</name> <operator>*</operator><name>contextMenu</name></expr>;
    <expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr>;

    <expr><name>QModelIndex</name> <call><name>selectedRow</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <macro><name>copyColumnToClipboard</name><argument_list>(<argument>int column</argument>)</argument_list></macro></expr>;
    <expr><name>virtual</name> <name>void</name> <call><name>resizeEvent</name><argument_list>(<argument><expr><name>QResizeEvent</name> <operator>*</operator><name>event</name></expr></argument>)</argument_list></call></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>on_receiveButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_showRequestButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_removeRequestButton_clicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>on_recentRequestsView_doubleClicked</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QModelIndex</name> <operator>&amp;</operator><name>index</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>recentRequestsView_selectionChanged</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QItemSelection</name> <operator>&amp;</operator><name>selected</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>QItemSelection</name> <operator>&amp;</operator><name>deselected</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>updateDisplayUnit</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>showMenu</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QPoint</name> <operator>&amp;</operator><name>point</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyURI</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyLabel</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyMessage</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyAmount</name><argument_list>()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_RECEIVECOINSDIALOG_H</comment>
</unit>
