<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/leveldb/table/merger.h"><comment type="line">// Copyright (c) 2011 The LevelDB Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file. See the AUTHORS file for names of contributors.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>STORAGE_LEVELDB_TABLE_MERGER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STORAGE_LEVELDB_TABLE_MERGER_H_</name></cpp:macro></cpp:define>

<decl_stmt><decl><type><name>namespace</name></type> <name>leveldb</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>Comparator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name></decl>;</decl_stmt>

<comment type="line">// Return an iterator that provided the union of the data in</comment>
<comment type="line">// children[0,n-1].  Takes ownership of the child iterators and</comment>
<comment type="line">// will delete them when the result iterator is deleted.</comment>
<comment type="line">//</comment>
<comment type="line">// The result does no duplicate suppression.  I.e., if a particular</comment>
<comment type="line">// key is present in K child iterators, it will be yielded K times.</comment>
<comment type="line">//</comment>
<comment type="line">// REQUIRES: n &gt;= 0</comment>
<function_decl><type><specifier>extern</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>NewMergingIterator</name><parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>Comparator</name><modifier>*</modifier></type> <name>comparator</name></decl></parameter>, <parameter><decl><type><name>Iterator</name><modifier>*</modifier><modifier>*</modifier></type> <name>children</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace leveldb</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// STORAGE_LEVELDB_TABLE_MERGER_H_</comment>
</unit>
