<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/leveldb/include/leveldb/dumpfile.h"><comment type="line">// Copyright (c) 2014 The LevelDB Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file. See the AUTHORS file for names of contributors.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>STORAGE_LEVELDB_INCLUDE_DUMPFILE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STORAGE_LEVELDB_INCLUDE_DUMPFILE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"leveldb/env.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"leveldb/status.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>leveldb</name> <block>{<block_content>

<comment type="line">// Dump the contents of the file named by fname in text format to</comment>
<comment type="line">// *dst.  Makes a sequence of dst-&gt;Append() calls; each call is passed</comment>
<comment type="line">// the newline-terminated text corresponding to a single item found</comment>
<comment type="line">// in the file.</comment>
<comment type="line">//</comment>
<comment type="line">// Returns a non-OK result if fname does not name a leveldb storage</comment>
<comment type="line">// file, or if the file cannot be read.</comment>
<decl_stmt><decl><type><name>Status</name></type> <name>DumpFile</name><argument_list>(<argument><expr><name>Env</name><operator>*</operator> <name>env</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>fname</name></expr></argument>, <argument><expr><name>WritableFile</name><operator>*</operator> <name>dst</name></expr></argument>)</argument_list></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace leveldb</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// STORAGE_LEVELDB_INCLUDE_DUMPFILE_H_</comment>
</unit>
