<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/csvmodelwriter.h"><comment type="line">// Copyright (c) 2011-2014 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_CSVMODELWRITER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_CSVMODELWRITER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QList&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QObject&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QAbstractItemModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/** Export a Qt table model to a CSV file. This is useful for analyzing or post-processing the data in
    a spreadsheet.
 */</comment>
<name>class</name></type> <name>CSVModelWriter</name> <range>: <expr><name>public</name> <name>QObject</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>CSVModelWriter</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><name>filename</name></expr></argument>, <argument><expr><name>QObject</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QAbstractItemModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <macro><name>addColumn</name><argument_list>(<argument>const QString &amp;title</argument>, <argument>int column</argument>, <argument>int role=Qt::EditRole</argument>)</argument_list></macro></expr>;

    <comment type="block" format="doxygen">/** Perform export of the model to CSV.
        @returns true on success, false otherwise
    */</comment>
    <expr><name>bool</name> <call><name>write</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>QString</name> <name>filename</name></expr>;
    <expr><specifier>const</specifier> <name>QAbstractItemModel</name> <operator>*</operator><name>model</name></expr>;

    struct <expr><name>Column</name>
    <block>{
        <expr><name>QString</name> <name>title</name></expr>;
        <expr><name>int</name> <name>column</name></expr>;
        <expr><name>int</name> <name>role</name></expr>;
    }</block></expr>;
    <expr><name><name>QList</name><argument_list type="generic">&lt;<argument><expr><name>Column</name></expr></argument>&gt;</argument_list></name> <name>columns</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_CSVMODELWRITER_H</comment>
</unit>
