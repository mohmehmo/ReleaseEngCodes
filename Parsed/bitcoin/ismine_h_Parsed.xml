<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/wallet/ismine.h"><comment type="line">// Copyright (c) 2009-2010 Satoshi Nakamoto</comment>
<comment type="line">// Copyright (c) 2009-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_WALLET_ISMINE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_WALLET_ISMINE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;script/standard.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bitset&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>CWallet</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>CScript</name></decl>;</decl_stmt>

<comment type="block" format="doxygen">/** IsMine() return codes */</comment>
<enum>enum <name>isminetype</name> : <type><name>unsigned</name> <name>int</name></type>
<block>{
    <decl><name>ISMINE_NO</name>         <init>= <expr><literal type="number">0</literal></expr></init></decl>,
    <decl><name>ISMINE_WATCH_ONLY</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,
    <decl><name>ISMINE_SPENDABLE</name>  <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
    <decl><name>ISMINE_USED</name>       <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
    <decl><name>ISMINE_ALL</name>        <init>= <expr><name>ISMINE_WATCH_ONLY</name> <operator>|</operator> <name>ISMINE_SPENDABLE</name></expr></init></decl>,
    <decl><name>ISMINE_ALL_USED</name>   <init>= <expr><name>ISMINE_ALL</name> <operator>|</operator> <name>ISMINE_USED</name></expr></init></decl>,
    <decl><name>ISMINE_ENUM_ELEMENTS</name></decl>,
}</block>;</enum>
<comment type="block" format="doxygen">/** used for bitflags of isminetype */</comment>
<typedef>typedef <type><name>uint8_t</name></type> <name>isminefilter</name>;</typedef>

<comment type="block" format="doxygen">/**
 * Cachable amount subdivided into watchonly and spendable parts.
 */</comment>
<struct>struct <name>CachableAmount</name>
<block>{
    <comment type="line">// NO and ALL are never (supposed to be) cached</comment>
    <expr_stmt><expr><name>std</name><operator>::</operator><name><name>bitset</name><argument_list type="generic">&lt;<argument><expr><name>ISMINE_ENUM_ELEMENTS</name></expr></argument>&gt;</argument_list></name> <name>m_cached</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>CAmount</name></type> <name><name>m_value</name><index>[<expr><name>ISMINE_ENUM_ELEMENTS</name></expr>]</index></name></decl>;</decl_stmt>
    <function><type><specifier>inline</specifier> <name>void</name></type> <name>Reset</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>m_cached</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
    <function><type><name>void</name></type> <name>Set</name><parameter_list>(<parameter><decl><type><name>isminefilter</name></type> <name>filter</name></decl></parameter>, <parameter><decl><type><name>CAmount</name></type> <name>value</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>m_cached</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>m_value</name><index>[<expr><name>filter</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_WALLET_ISMINE_H</comment>
</unit>
