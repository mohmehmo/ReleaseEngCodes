<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="/home/mmm/Projects/bitcoin/src/qt/addressbookpage.cpp"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config/bitcoin-config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addressbookpage.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/forms/ui_addressbookpage.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/addresstablemodel.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/csvmodelwriter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/editaddressdialog.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/guiutil.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;qt/platformstyle.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QIcon&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMenu&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMessageBox&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QSortFilterProxyModel&gt;</cpp:file></cpp:include>

<class>class <name>AddressBookSortFilterProxyModel</name> <specifier>final</specifier> <super_list>: <super><specifier>public</specifier> <name>QSortFilterProxyModel</name></super></super_list>
<block>{<private type="default">
    <decl_stmt><decl><type><specifier>const</specifier> <name>QString</name></type> <name>m_type</name></decl>;</decl_stmt>

</private><public>public:
    <constructor><name>AddressBookSortFilterProxyModel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QString</name><modifier>&amp;</modifier></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>QObject</name><modifier>*</modifier></type> <name>parent</name></decl></parameter>)</parameter_list>
        <member_init_list>: <call><name>QSortFilterProxyModel</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>
        , <call><name>m_type</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call>
    </member_init_list><block>{<block_content>
        <expr_stmt><expr><call><name>setDynamicSortFilter</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setFilterCaseSensitivity</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>setSortCaseSensitivity</name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>CaseInsensitive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

</public><protected>protected:
    <function><type><name>bool</name></type> <name>filterAcceptsRow</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>row</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name><modifier>&amp;</modifier></type> <name>parent</name></decl></parameter>)</parameter_list> <specifier>const</specifier>
    <block>{<block_content>
        <decl_stmt><decl><type><name>auto</name></type> <name>model</name> <init>= <expr><call><name>sourceModel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>auto</name></type> <name>label</name> <init>= <expr><call><name><name>model</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>row</name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Label</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>model</name><operator>-&gt;</operator><name>data</name></name><argument_list>(<argument><expr><name>label</name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>TypeRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>m_type</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <decl_stmt><decl><type><name>auto</name></type> <name>address</name> <init>= <expr><call><name><name>model</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>row</name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name>filterRegExp</name><argument_list>()</argument_list></call><operator>.</operator><call><name>indexIn</name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>data</name></name><argument_list>(<argument><expr><name>address</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
            <call><name>filterRegExp</name><argument_list>()</argument_list></call><operator>.</operator><call><name>indexIn</name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>data</name></name><argument_list>(<argument><expr><name>label</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>
</protected>}</block>;</class>

<constructor><name><name>AddressBookPage</name><operator>::</operator><name>AddressBookPage</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PlatformStyle</name> <modifier>*</modifier></type><name>platformStyle</name></decl></parameter>, <parameter><decl><type><name>Mode</name></type> <name>_mode</name></decl></parameter>, <parameter><decl><type><name>Tabs</name></type> <name>_tab</name></decl></parameter>, <parameter><decl><type><name>QWidget</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>)</parameter_list> <member_init_list>:
    <call><name>QDialog</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call>,
    <call><name>ui</name><argument_list>(<argument><expr><operator>new</operator> <name><name>Ui</name><operator>::</operator><name>AddressBookPage</name></name></expr></argument>)</argument_list></call>,
    <call><name>model</name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call>,
    <call><name>mode</name><argument_list>(<argument><expr><name>_mode</name></expr></argument>)</argument_list></call>,
    <call><name>tab</name><argument_list>(<argument><expr><name>_tab</name></expr></argument>)</argument_list></call>
</member_init_list><block>{<block_content>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>setupUi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>platformStyle</name><operator>-&gt;</operator><name>getImagesOnButtons</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>newAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name>QIcon</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>copyAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name>QIcon</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name>QIcon</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>exportButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name>QIcon</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>newAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/add"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>copyAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/editcopy"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/remove"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>exportButton</name><operator>-&gt;</operator><name>setIcon</name></name><argument_list>(<argument><expr><call><name><name>platformStyle</name><operator>-&gt;</operator><name>SingleColorIcon</name></name><argument_list>(<argument><expr><literal type="string">":/icons/export"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <switch>switch<condition>(<expr><name>mode</name></expr>)</condition>
    <block>{<block_content>
    <case>case <expr><name>ForSelection</name></expr>:</case>
        <switch>switch<condition>(<expr><name>tab</name></expr>)</condition>
        <block>{<block_content>
        <case>case <expr><name>SendingTab</name></expr>:</case> <expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Choose the address to send coins to"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
        <case>case <expr><name>ReceivingTab</name></expr>:</case> <expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Choose the address to receive coins with"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
        </block_content>}</block></switch>
        <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QTableView</name><operator>::</operator><name>doubleClicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QDialog</name><operator>::</operator><name>accept</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>setEditTriggers</name></name><argument_list>(<argument><expr><name><name>QAbstractItemView</name><operator>::</operator><name>NoEditTriggers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>closeButton</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"C&amp;hoose"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>exportButton</name><operator>-&gt;</operator><name>hide</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>ForEditing</name></expr>:</case>
        <switch>switch<condition>(<expr><name>tab</name></expr>)</condition>
        <block>{<block_content>
        <case>case <expr><name>SendingTab</name></expr>:</case> <expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Sending addresses"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
        <case>case <expr><name>ReceivingTab</name></expr>:</case> <expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Receiving addresses"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
        </block_content>}</block></switch>
        <break>break;</break>
    </block_content>}</block></switch>
    <switch>switch<condition>(<expr><name>tab</name></expr>)</condition>
    <block>{<block_content>
    <case>case <expr><name>SendingTab</name></expr>:</case>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelExplanation</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>newAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    <case>case <expr><name>ReceivingTab</name></expr>:</case>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>labelExplanation</name><operator>-&gt;</operator><name>setText</name></name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>newAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
    </block_content>}</block></switch>

    <comment type="line">// Context menu actions</comment>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyAddressAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"&amp;Copy Address"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>copyLabelAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Copy &amp;Label"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QAction</name> <modifier>*</modifier></type><name>editAction</name> <init>= <expr><operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"&amp;Edit"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>deleteAction</name> <operator>=</operator> <operator>new</operator> <call><name>QAction</name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Build context menu</comment>
    <expr_stmt><expr><name>contextMenu</name> <operator>=</operator> <operator>new</operator> <call><name>QMenu</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyAddressAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>copyLabelAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>editAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><name>tab</name> <operator>==</operator> <name>SendingTab</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addAction</name></name><argument_list>(<argument><expr><name>deleteAction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>addSeparator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Connect signals for context menu actions</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyAddressAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>on_copyAddress_clicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>copyLabelAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>onCopyLabelAction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>editAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>onEditAction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>deleteAction</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QAction</name><operator>::</operator><name>triggered</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>on_deleteAddress_clicked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QWidget</name><operator>::</operator><name>customContextMenuRequested</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>contextualMenu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>closeButton</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QPushButton</name><operator>::</operator><name>clicked</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QDialog</name><operator>::</operator><name>accept</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor>

<destructor><name><name>AddressBookPage</name><operator>::</operator><name>~AddressBookPage</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>delete</operator> <name>ui</name></expr>;</expr_stmt>
</block_content>}</block></destructor>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>setModel</name></name><parameter_list>(<parameter><decl><type><name>AddressTableModel</name> <modifier>*</modifier></type><name>_model</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>model</name></name> <operator>=</operator> <name>_model</name></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>_model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>auto</name></type> <name>type</name> <init>= <expr><ternary><condition><expr><name>tab</name> <operator>==</operator> <name>ReceivingTab</name></expr> ?</condition><then> <expr><name><name>AddressTableModel</name><operator>::</operator><name>Receive</name></name></expr> </then><else>: <expr><name><name>AddressTableModel</name><operator>::</operator><name>Send</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>proxyModel</name> <operator>=</operator> <operator>new</operator> <call><name>AddressBookSortFilterProxyModel</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>proxyModel</name><operator>-&gt;</operator><name>setSourceModel</name></name><argument_list>(<argument><expr><name>_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>searchLineEdit</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QLineEdit</name><operator>::</operator><name>textChanged</name></name></expr></argument>, <argument><expr><name>proxyModel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QSortFilterProxyModel</name><operator>::</operator><name>setFilterWildcard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>setModel</name></name><argument_list>(<argument><expr><name>proxyModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>sortByColumn</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>AscendingOrder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Set column widths</comment>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>horizontalHeader</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>setSectionResizeMode</name><argument_list>(<argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Label</name></name></expr></argument>, <argument><expr><name><name>QHeaderView</name><operator>::</operator><name>Stretch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>horizontalHeader</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>setSectionResizeMode</name><argument_list>(<argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>, <argument><expr><name><name>QHeaderView</name><operator>::</operator><name>ResizeToContents</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>QItemSelectionModel</name><operator>::</operator><name>selectionChanged</name></name></expr></argument>,
        <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>selectionChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Select row for newly created address</comment>
    <expr_stmt><expr><call><name>connect</name><argument_list>(<argument><expr><name>_model</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressTableModel</name><operator>::</operator><name>rowsInserted</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>AddressBookPage</name><operator>::</operator><name>selectNewAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>selectionChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>on_copyAddress_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>onCopyLabelAction</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name><name>GUIUtil</name><operator>::</operator><name>copyEntryData</name></name><argument_list>(<argument><expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>onEditAction</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>indexes</name> <init>= <expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><call><name><name>indexes</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>EditAddressDialog</name></type> <name>dlg</name><argument_list>(
        <argument><expr><ternary><condition><expr><name>tab</name> <operator>==</operator> <name>SendingTab</name></expr> ?</condition><then>
        <expr><name><name>EditAddressDialog</name><operator>::</operator><name>EditSendingAddress</name></name></expr> </then><else>:
        <expr><name><name>EditAddressDialog</name><operator>::</operator><name>EditReceivingAddress</name></name></expr></else></ternary></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>origIndex</name> <init>= <expr><call><name><name>proxyModel</name><operator>-&gt;</operator><name>mapToSource</name></name><argument_list>(<argument><expr><call><name><name>indexes</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>loadRow</name></name><argument_list>(<argument><expr><call><name><name>origIndex</name><operator>.</operator><name>row</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>on_newAddress_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>model</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>tab</name> <operator>==</operator> <name>ReceivingTab</name></expr>)</condition> <block>{<block_content>
        <return>return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>EditAddressDialog</name></type> <name>dlg</name><argument_list>(<argument><expr><name><name>EditAddressDialog</name><operator>::</operator><name>NewSendingAddress</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dlg</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if<condition>(<expr><call><name><name>dlg</name><operator>.</operator><name>exec</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>newAddressToSelect</name> <operator>=</operator> <call><name><name>dlg</name><operator>.</operator><name>getAddress</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>on_deleteAddress_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QTableView</name> <modifier>*</modifier></type><name>table</name> <init>= <expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>indexes</name> <init>= <expr><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>indexes</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>table</name><operator>-&gt;</operator><name>model</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>removeRow</name><argument_list>(<argument><expr><call><name><name>indexes</name><operator>.</operator><name>at</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>row</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>selectionChanged</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <comment type="line">// Set button states based on selected tab and selection</comment>
    <decl_stmt><decl><type><name>QTableView</name> <modifier>*</modifier></type><name>table</name> <init>= <expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if<condition>(<expr><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>hasSelection</name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <switch>switch<condition>(<expr><name>tab</name></expr>)</condition>
        <block>{<block_content>
        <case>case <expr><name>SendingTab</name></expr>:</case>
            <comment type="line">// In sending tab, allow deletion of selection</comment>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>deleteAction</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        <case>case <expr><name>ReceivingTab</name></expr>:</case>
            <comment type="line">// Deleting receiving addresses, however, is not allowed</comment>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setVisible</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>deleteAction</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block></switch>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>copyAddress</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>deleteAddress</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>copyAddress</name><operator>-&gt;</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>done</name></name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>retval</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QTableView</name> <modifier>*</modifier></type><name>table</name> <init>= <expr><name><name>ui</name><operator>-&gt;</operator><name>tableView</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call> <operator>||</operator> <operator>!</operator><call><name><name>table</name><operator>-&gt;</operator><name>model</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <comment type="line">// Figure out which address was selected, and return it</comment>
    <decl_stmt><decl><type><name>QModelIndexList</name></type> <name>indexes</name> <init>= <expr><call><name><name>table</name><operator>-&gt;</operator><name>selectionModel</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>selectedRows</name><argument_list>(<argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><specifier>const</specifier> <name>QModelIndex</name><modifier>&amp;</modifier></type> <name>index</name> <range>: <expr><name>indexes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>QVariant</name></type> <name>address</name> <init>= <expr><call><name><name>table</name><operator>-&gt;</operator><name>model</name></name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name>data</name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>returnValue</name> <operator>=</operator> <call><name><name>address</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <if_stmt><if>if<condition>(<expr><call><name><name>returnValue</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// If no address entry selected, return rejected</comment>
        <expr_stmt><expr><name>retval</name> <operator>=</operator> <name>Rejected</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name><name>QDialog</name><operator>::</operator><name>done</name></name><argument_list>(<argument><expr><name>retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>on_exportButton_clicked</name></name><parameter_list>()</parameter_list>
<block>{<block_content>
    <comment type="line">// CSV is currently the only supported format</comment>
    <decl_stmt><decl><type><name>QString</name></type> <name>filename</name> <init>= <expr><call><name><name>GUIUtil</name><operator>::</operator><name>getSaveFileName</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Export Address List"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>QString</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Comma separated file (*.csv)"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>filename</name><operator>.</operator><name>isNull</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>CSVModelWriter</name></type> <name>writer</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <comment type="line">// name, column, role</comment>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setModel</name></name><argument_list>(<argument><expr><name>proxyModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><literal type="string">"Label"</literal></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Label</name></name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addColumn</name></name><argument_list>(<argument><expr><literal type="string">"Address"</literal></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>, <argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>QMessageBox</name><operator>::</operator><name>critical</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"Exporting Failed"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>tr</name><argument_list>(<argument><expr><literal type="string">"There was an error trying to save the address list to %1. Please try again."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>arg</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>contextualMenu</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QPoint</name> <modifier>&amp;</modifier></type><name>point</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>index</name> <init>= <expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>indexAt</name></name><argument_list>(<argument><expr><name>point</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><call><name><name>index</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>contextMenu</name><operator>-&gt;</operator><name>exec</name></name><argument_list>(<argument><expr><call><name><name>QCursor</name><operator>::</operator><name>pos</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name><name>AddressBookPage</name><operator>::</operator><name>selectNewAddress</name></name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>QModelIndex</name> <modifier>&amp;</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>begin</name></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> <comment type="block">/*end*/</comment>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>QModelIndex</name></type> <name>idx</name> <init>= <expr><call><name><name>proxyModel</name><operator>-&gt;</operator><name>mapFromSource</name></name><argument_list>(<argument><expr><call><name><name>model</name><operator>-&gt;</operator><name>index</name></name><argument_list>(<argument><expr><name>begin</name></expr></argument>, <argument><expr><name><name>AddressTableModel</name><operator>::</operator><name>Address</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><call><name><name>idx</name><operator>.</operator><name>isValid</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>idx</name><operator>.</operator><name>data</name></name><argument_list>(<argument><expr><name><name>Qt</name><operator>::</operator><name>EditRole</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>==</operator> <name>newAddressToSelect</name><operator>)</operator></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Select row of newly created address, once</comment>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ui</name><operator>-&gt;</operator><name>tableView</name><operator>-&gt;</operator><name>selectRow</name></name><argument_list>(<argument><expr><call><name><name>idx</name><operator>.</operator><name>row</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>newAddressToSelect</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
