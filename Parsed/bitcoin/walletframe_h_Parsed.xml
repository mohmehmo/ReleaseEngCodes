<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/walletframe.h"><comment type="line">// Copyright (c) 2011-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_WALLETFRAME_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_WALLETFRAME_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QFrame&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMap&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>BitcoinGUI</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>ClientModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>SendCoinsRecipient</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WalletView</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>QT_BEGIN_NAMESPACE</name>
<name>class</name></type> <name>QStackedWidget</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QT_END_NAMESPACE</name>

<comment type="block" format="doxygen">/**
 * A container for embedding all wallet-related
 * controls into BitcoinGUI. The purpose of this class is to allow future
 * refinements of the wallet controls with minimal need for further
 * modifications to BitcoinGUI, thus greatly simplifying merges while
 * reducing the risk of breaking top-level stuff.
 */</comment>
<name>class</name></type> <name>WalletFrame</name> <range>: <expr><name>public</name> <name>QFrame</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>WalletFrame</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr></argument>, <argument><expr><name>BitcoinGUI</name> <operator>*</operator><name>_gui</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>WalletFrame</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setClientModel</name><argument_list>(<argument><expr><name>ClientModel</name> <operator>*</operator><name>clientModel</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>void</name> <call><name>addWallet</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>walletModel</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>setCurrentWallet</name><argument_list>(<argument><expr><name>WalletModel</name><operator>*</operator> <name>wallet_model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>removeWallet</name><argument_list>(<argument><expr><name>WalletModel</name><operator>*</operator> <name>wallet_model</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>removeAllWallets</name><argument_list>()</argument_list></call></expr>;

    <expr><name>bool</name> <call><name>handlePaymentRequest</name><argument_list>(<argument><expr><specifier>const</specifier> <name>SendCoinsRecipient</name><operator>&amp;</operator> <name>recipient</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>void</name> <macro><name>showOutOfSyncWarning</name><argument_list>(<argument>bool fShow</argument>)</argument_list></macro></expr>;

<expr><name>Q_SIGNALS</name><operator>:</operator>
    <comment type="block" format="doxygen">/** Notify that the user has requested more information about the out-of-sync warning */</comment>
    <name>void</name> <call><name>requestedSyncWarningInfo</name><argument_list>()</argument_list></call></expr>;

<expr><name>private</name><operator>:</operator>
    <name>QStackedWidget</name> <operator>*</operator><name>walletStack</name></expr>;
    <expr><name>BitcoinGUI</name> <operator>*</operator><name>gui</name></expr>;
    <expr><name>ClientModel</name> <operator>*</operator><name>clientModel</name></expr>;
    <expr><name><name>QMap</name><argument_list type="generic">&lt;<argument><expr><name>WalletModel</name><operator>*</operator></expr></argument>, <argument><expr><name>WalletView</name><operator>*</operator></expr></argument>&gt;</argument_list></name> <name>mapWalletViews</name></expr>;

    <expr><name>bool</name> <name>bOutOfSync</name></expr>;

    <expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr>;

<expr><name>public</name><operator>:</operator>
    <name>WalletView</name><operator>*</operator> <macro><name>currentWalletView</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;
    <expr><name>WalletModel</name><operator>*</operator> <macro><name>currentWalletModel</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;

<expr><name>public</name> <name>Q_SLOTS</name><operator>:</operator>
    <comment type="block" format="doxygen">/** Switch to overview (home) page */</comment>
    <name>void</name> <call><name>gotoOverviewPage</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Switch to history (transactions) page */</comment>
    <expr><name>void</name> <call><name>gotoHistoryPage</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Switch to receive coins page */</comment>
    <expr><name>void</name> <call><name>gotoReceiveCoinsPage</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Switch to send coins page */</comment>
    <expr><name>void</name> <macro><name>gotoSendCoinsPage</name><argument_list>(<argument>QString addr = <literal type="string">""</literal></argument>)</argument_list></macro></expr>;

    <comment type="block" format="doxygen">/** Show Sign/Verify Message dialog and switch to sign message tab */</comment>
    <expr><name>void</name> <macro><name>gotoSignMessageTab</name><argument_list>(<argument>QString addr = <literal type="string">""</literal></argument>)</argument_list></macro></expr>;
    <comment type="block" format="doxygen">/** Show Sign/Verify Message dialog and switch to verify message tab */</comment>
    <expr><name>void</name> <macro><name>gotoVerifyMessageTab</name><argument_list>(<argument>QString addr = <literal type="string">""</literal></argument>)</argument_list></macro></expr>;

    <comment type="block" format="doxygen">/** Encrypt the wallet */</comment>
    <expr><name>void</name> <macro><name>encryptWallet</name><argument_list>(<argument>bool status</argument>)</argument_list></macro></expr>;
    <comment type="block" format="doxygen">/** Backup the wallet */</comment>
    <expr><name>void</name> <call><name>backupWallet</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Change encrypted wallet passphrase */</comment>
    <expr><name>void</name> <call><name>changePassphrase</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Ask for passphrase to unlock wallet temporarily */</comment>
    <expr><name>void</name> <call><name>unlockWallet</name><argument_list>()</argument_list></call></expr>;

    <comment type="block" format="doxygen">/** Show used sending addresses */</comment>
    <expr><name>void</name> <call><name>usedSendingAddresses</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Show used receiving addresses */</comment>
    <expr><name>void</name> <call><name>usedReceivingAddresses</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="doxygen">/** Pass on signal over requested out-of-sync-warning information */</comment>
    <expr><name>void</name> <call><name>outOfSyncWarningClicked</name><argument_list>()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_WALLETFRAME_H</comment>
</unit>
