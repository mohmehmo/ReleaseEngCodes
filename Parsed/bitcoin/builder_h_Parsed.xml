<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/leveldb/db/builder.h"><comment type="line">// Copyright (c) 2011 The LevelDB Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file. See the AUTHORS file for names of contributors.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>STORAGE_LEVELDB_DB_BUILDER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STORAGE_LEVELDB_DB_BUILDER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"leveldb/status.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>leveldb</name> <block>{<block_content>

<struct_decl>struct <name>Options</name>;</struct_decl>
<struct_decl>struct <name>FileMetaData</name>;</struct_decl>

<decl_stmt><decl><type><name>class</name></type> <name>Env</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>TableCache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>VersionEdit</name></decl>;</decl_stmt>

<comment type="line">// Build a Table file from the contents of *iter.  The generated file</comment>
<comment type="line">// will be named according to meta-&gt;number.  On success, the rest of</comment>
<comment type="line">// *meta will be filled with metadata about the generated table.</comment>
<comment type="line">// If no data is present in *iter, meta-&gt;file_size will be set to</comment>
<comment type="line">// zero, and no Table file will be produced.</comment>
<decl_stmt><decl><type><specifier>extern</specifier> <name>Status</name></type> <name>BuildTable</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>dbname</name></expr></argument>,
                         <argument><expr><name>Env</name><operator>*</operator> <name>env</name></expr></argument>,
                         <argument><expr><specifier>const</specifier> <name>Options</name><operator>&amp;</operator> <name>options</name></expr></argument>,
                         <argument><expr><name>TableCache</name><operator>*</operator> <name>table_cache</name></expr></argument>,
                         <argument><expr><name>Iterator</name><operator>*</operator> <name>iter</name></expr></argument>,
                         <argument><expr><name>FileMetaData</name><operator>*</operator> <name>meta</name></expr></argument>)</argument_list></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace leveldb</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// STORAGE_LEVELDB_DB_BUILDER_H_</comment>
</unit>
