<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/interfaces/handler.h"><comment type="line">// Copyright (c) 2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_INTERFACES_HANDLER_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_INTERFACES_HANDLER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>boost</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>signals2</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>connection</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace signals2</comment>
</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace boost</comment>

<decl_stmt><decl><type><name>namespace</name></type> <name>interfaces</name> <block>{<block_content>

<comment type="line" format="doxygen">//! Generic interface for managing an event handler or callback function</comment>
<comment type="line" format="doxygen">//! registered with another interface. Has a single disconnect method to cancel</comment>
<comment type="line" format="doxygen">//! the registration and prevent any future notifications.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>Handler</name>
<block>{<block_content>
<label><name>public</name>:</label>
    <expr_stmt><expr><name>virtual</name> <operator>~</operator><macro><name>Handler</name><argument_list>()</argument_list></macro> <block>{}</block>

    <comment type="line" format="doxygen">//! Disconnect the handler.</comment>
    <name>virtual</name> <name>void</name> <call><name>disconnect</name><argument_list>()</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<comment type="line" format="doxygen">//! Return handler wrapping a boost signal connection.</comment>
<expr_stmt><expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>Handler</name></expr></argument>&gt;</argument_list></name> <macro><name>MakeHandler</name><argument_list>(<argument>boost::signals2::connection connection</argument>)</argument_list></macro></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt> <comment type="line">// namespace interfaces</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_INTERFACES_HANDLER_H</comment>
</unit>
