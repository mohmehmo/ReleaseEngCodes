<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/networkstyle.h"><comment type="line">// Copyright (c) 2014 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_NETWORKSTYLE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_NETWORKSTYLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QIcon&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPixmap&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QString&gt;</cpp:file></cpp:include>

<comment type="block">/* Coin network-specific GUI style information */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>NetworkStyle</name>
<block>{<block_content>
<label><name>public</name>:</label>
    <comment type="block" format="doxygen">/** Get style associated with provided network id, or 0 if not known */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>NetworkStyle</name><modifier>*</modifier></type> <name>instantiate</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>networkId</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><macro><name>getAppName</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>appName</name></expr>;</return> }</block></expr></expr_stmt>
    <expr_stmt><expr><specifier>const</specifier> <name>QIcon</name> <operator>&amp;</operator><macro><name>getAppIcon</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>appIcon</name></expr>;</return> }</block></expr></expr_stmt>
    <expr_stmt><expr><specifier>const</specifier> <name>QIcon</name> <operator>&amp;</operator><macro><name>getTrayAndWindowIcon</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>trayAndWindowIcon</name></expr>;</return> }</block></expr></expr_stmt>
    <expr_stmt><expr><specifier>const</specifier> <name>QString</name> <operator>&amp;</operator><macro><name>getTitleAddText</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>titleAddText</name></expr>;</return> }</block></expr></expr_stmt>

<label><name>private</name>:</label>
    <macro><name>NetworkStyle</name><argument_list>(<argument>const QString &amp;appName</argument>, <argument>const int iconColorHueShift</argument>, <argument>const int iconColorSaturationReduction</argument>, <argument>const char *titleAddText</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

    <decl_stmt><decl><type><name>QString</name></type> <name>appName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>appIcon</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QIcon</name></type> <name>trayAndWindowIcon</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>titleAddText</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_NETWORKSTYLE_H</comment>
</unit>
