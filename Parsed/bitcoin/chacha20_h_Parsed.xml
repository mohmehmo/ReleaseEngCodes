<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/crypto/chacha20.h"><comment type="line">// Copyright (c) 2017 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_CRYPTO_CHACHA20_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_CRYPTO_CHACHA20_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<comment type="block" format="doxygen">/** A class for ChaCha20 256-bit stream cipher developed by Daniel J. Bernstein
    https://cr.yp.to/chacha/chacha-20080128.pdf */</comment>
<decl_stmt><decl><type><name>class</name></type> <name>ChaCha20</name>
<block>{<block_content>
<label><name>private</name>:</label>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name><name>input</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<label><name>public</name>:</label>
    <expr_stmt><expr><call><name>ChaCha20</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <macro><name>ChaCha20</name><argument_list>(<argument>const unsigned char* key</argument>, <argument>size_t keylen</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
    <function_decl><type><name>void</name></type> <name>SetKey</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>keylen</name></decl></parameter>)</parameter_list>;</function_decl> <comment type="line" format="doxygen">//!&lt; set key with flexible keylength; 256bit recommended */</comment>
    <function_decl><type><name>void</name></type> <name>SetIV</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>iv</name></decl></parameter>)</parameter_list>;</function_decl> <comment type="line">// set the 64bit nonce</comment>
    <function_decl><type><name>void</name></type> <name>Seek</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>pos</name></decl></parameter>)</parameter_list>;</function_decl> <comment type="line">// set the 64bit block counter</comment>

    <comment type="block" format="doxygen">/** outputs the keystream of size &lt;bytes&gt; into &lt;c&gt; */</comment>
    <function_decl><type><name>void</name></type> <name>Keystream</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>bytes</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="doxygen">/** enciphers the message &lt;input&gt; of length &lt;bytes&gt; and write the enciphered representation into &lt;output&gt;
     *  Used for encryption and decryption (XOR)
     */</comment>
    <function_decl><type><name>void</name></type> <name>Crypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>input</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>output</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>bytes</name></decl></parameter>)</parameter_list>;</function_decl>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_CRYPTO_CHACHA20_H</comment>
</unit>
