<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/wallet/test/init_test_fixture.h"><comment type="line">// Copyright (c) 2018-2019 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_WALLET_TEST_INIT_TEST_FIXTURE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_WALLET_TEST_INIT_TEST_FIXTURE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interfaces/chain.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;node/context.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test/util/setup_common.h&gt;</cpp:file></cpp:include>


<decl_stmt><decl><type><name><name>struct</name> <name>InitWalletDirTestingSetup</name></name></type><range>: <expr><name>public</name> <name>BasicTestingSetup</name> <block>{
    <expr><name>explicit</name> <call><name>InitWalletDirTestingSetup</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>chainName</name> <operator>=</operator> <name>CBaseChainParams</name><operator>::</operator><name>MAIN</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>InitWalletDirTestingSetup</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>SetWalletDir</name><argument_list>(<argument><expr><specifier>const</specifier> <name>fs</name><operator>::</operator><name>path</name><operator>&amp;</operator> <name>walletdir_path</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>fs</name><operator>::</operator><name>path</name> <name>m_datadir</name></expr>;
    <expr><name>fs</name><operator>::</operator><name>path</name> <name>m_cwd</name></expr>;
    <expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>, <argument><expr><name>fs</name><operator>::</operator><name>path</name></expr></argument>&gt;</argument_list></name> <name>m_walletdir_path_cases</name></expr>;
    <expr><name>NodeContext</name> <name>m_node</name></expr>;
    <expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>interfaces</name><operator>::</operator><name>Chain</name></expr></argument>&gt;</argument_list></name> <name>m_chain</name> <operator>=</operator> <name>interfaces</name><operator>::</operator><call><name>MakeChain</name><argument_list>(<argument><expr><name>m_node</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>interfaces</name><operator>::</operator><name>ChainClient</name></expr></argument>&gt;</argument_list></name> <name>m_chain_client</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_WALLET_TEST_INIT_TEST_FIXTURE_H</comment>
</unit>
