<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/bitcoin/src/qt/coincontroldialog.h"><comment type="line">// Copyright (c) 2011-2018 The Bitcoin Core developers</comment>
<comment type="line">// Distributed under the MIT software license, see the accompanying</comment>
<comment type="line">// file COPYING or http://www.opensource.org/licenses/mit-license.php.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BITCOIN_QT_COINCONTROLDIALOG_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITCOIN_QT_COINCONTROLDIALOG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;amount.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QAbstractButton&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QAction&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDialog&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QList&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QMenu&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QPoint&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QString&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QTreeWidgetItem&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>class</name></type> <name>PlatformStyle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WalletModel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>CCoinControl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>Ui</name> <block>{<block_content>
    <decl_stmt><decl><type><name>class</name></type> <name>CoinControlDialog</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASYMP_UTF8</name></cpp:macro> <cpp:value>"\xE2\x89\x88"</cpp:value></cpp:define>

<decl_stmt><decl><type><name>class</name></type> <name>CCoinControlWidgetItem</name> <range>: <expr><name>public</name> <name>QTreeWidgetItem</name>
<block>{
<expr><name>public</name><operator>:</operator>
    <name>explicit</name> <macro><name>CCoinControlWidgetItem</name><argument_list>(<argument>QTreeWidget *parent</argument>, <argument>int type = Type</argument>)</argument_list></macro> <operator>:</operator> <macro><name>QTreeWidgetItem</name><argument_list>(<argument>parent</argument>, <argument>type</argument>)</argument_list></macro> <block>{}</block>
    <name>explicit</name> <macro><name>CCoinControlWidgetItem</name><argument_list>(<argument>int type = Type</argument>)</argument_list></macro> <operator>:</operator> <macro><name>QTreeWidgetItem</name><argument_list>(<argument>type</argument>)</argument_list></macro> <block>{}</block>
    <name>explicit</name> <macro><name>CCoinControlWidgetItem</name><argument_list>(<argument>QTreeWidgetItem *parent</argument>, <argument>int type = Type</argument>)</argument_list></macro> <operator>:</operator> <macro><name>QTreeWidgetItem</name><argument_list>(<argument>parent</argument>, <argument>type</argument>)</argument_list></macro> <block>{}</block>

    <name>bool</name> <name>operator</name><operator>&lt;</operator><operator>(</operator><specifier>const</specifier> <name>QTreeWidgetItem</name> <operator>&amp;</operator><name>other</name><operator>)</operator> <specifier>const</specifier></expr>;
}</block></expr></range></decl>;</decl_stmt>


<decl_stmt><decl><type><name>class</name></type> <name>CoinControlDialog</name> <range>: <expr><name>public</name> <name>QDialog</name>
<block>{
    <expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
    <name>explicit</name> <call><name>CoinControlDialog</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr></argument>, <argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <name>nullptr</name></expr></argument>)</argument_list></call></expr>;
    <expr><operator>~</operator><call><name>CoinControlDialog</name><argument_list>()</argument_list></call></expr>;

    <expr><name>void</name> <call><name>setModel</name><argument_list>(<argument><expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// static because also called from sendcoinsdialog</comment>
    <expr><specifier>static</specifier> <name>void</name> <call><name>updateLabels</name><argument_list>(<argument><expr><name>WalletModel</name><operator>*</operator></expr></argument>, <argument><expr><name>QDialog</name><operator>*</operator></expr></argument>)</argument_list></call></expr>;

    <expr><specifier>static</specifier> <name><name>QList</name><argument_list type="generic">&lt;<argument><expr><name>CAmount</name></expr></argument>&gt;</argument_list></name> <name>payAmounts</name></expr>;
    <expr><specifier>static</specifier> <name>CCoinControl</name> <operator>*</operator><call><name>coinControl</name><argument_list>()</argument_list></call></expr>;
    <expr><specifier>static</specifier> <name>bool</name> <name>fSubtractFeeFromAmount</name></expr>;

<expr><name>private</name><operator>:</operator>
    <name>Ui</name><operator>::</operator><name>CoinControlDialog</name> <operator>*</operator><name>ui</name></expr>;
    <expr><name>WalletModel</name> <operator>*</operator><name>model</name></expr>;
    <expr><name>int</name> <name>sortColumn</name></expr>;
    <expr><name>Qt</name><operator>::</operator><name>SortOrder</name> <name>sortOrder</name></expr>;

    <expr><name>QMenu</name> <operator>*</operator><name>contextMenu</name></expr>;
    <expr><name>QTreeWidgetItem</name> <operator>*</operator><name>contextMenuItem</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>copyTransactionHashAction</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>lockAction</name></expr>;
    <expr><name>QAction</name> <operator>*</operator><name>unlockAction</name></expr>;

    <expr><specifier>const</specifier> <name>PlatformStyle</name> <operator>*</operator><name>platformStyle</name></expr>;

    <expr><name>void</name> <call><name>sortView</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>Qt</name><operator>::</operator><name>SortOrder</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>updateView</name><argument_list>()</argument_list></call></expr>;

    enum
    <expr><block>{
        <expr><name>COLUMN_CHECKBOX</name> <operator>=</operator> <literal type="number">0</literal></expr>,
        <expr><name>COLUMN_AMOUNT</name></expr>,
        <expr><name>COLUMN_LABEL</name></expr>,
        <expr><name>COLUMN_ADDRESS</name></expr>,
        <expr><name>COLUMN_DATE</name></expr>,
        <expr><name>COLUMN_CONFIRMATIONS</name></expr>,
    }</block></expr>;

    enum
    <expr><block>{
        <expr><name>TxHashRole</name> <operator>=</operator> <name>Qt</name><operator>::</operator><name>UserRole</name></expr>,
        <expr><name>VOutRole</name></expr>
    }</block></expr>;

    <expr><name>friend</name> <name>class</name> <name>CCoinControlWidgetItem</name></expr>;

<expr><name>private</name> <name>Q_SLOTS</name><operator>:</operator>
    <name>void</name> <call><name>showMenu</name><argument_list>(<argument><expr><specifier>const</specifier> <name>QPoint</name> <operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyAmount</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyLabel</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyAddress</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>copyTransactionHash</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>lockCoin</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>unlockCoin</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardQuantity</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardAmount</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardFee</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardAfterFee</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardBytes</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardLowOutput</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>clipboardChange</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>radioTreeMode</name><argument_list>(<argument><expr><name>bool</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>radioListMode</name><argument_list>(<argument><expr><name>bool</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>viewItemChanged</name><argument_list>(<argument><expr><name>QTreeWidgetItem</name><operator>*</operator></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>headerSectionClicked</name><argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>buttonBoxClicked</name><argument_list>(<argument><expr><name>QAbstractButton</name><operator>*</operator></expr></argument>)</argument_list></call></expr>;
    <expr><name>void</name> <call><name>buttonSelectAllClicked</name><argument_list>()</argument_list></call></expr>;
    <expr><name>void</name> <call><name>updateLabelLocked</name><argument_list>()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// BITCOIN_QT_COINCONTROLDIALOG_H</comment>
</unit>
