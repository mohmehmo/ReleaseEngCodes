<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/atom_javascript_dialog_manager.h"><comment type="line">// Copyright (c) 2013 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_ATOM_JAVASCRIPT_DIALOG_MANAGER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_ATOM_JAVASCRIPT_DIALOG_MANAGER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/javascript_dialog_manager.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>api</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>WebContents</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>AtomJavaScriptDialogManager</name> <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>JavaScriptDialogManager</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>explicit</name> <call><name>AtomJavaScriptDialogManager</name><argument_list>(<argument><expr><name>api</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>api_web_contents</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>AtomJavaScriptDialogManager</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <comment type="line">// content::JavaScriptDialogManager implementations.</comment>
  <expr><name>void</name> <macro><name>RunJavaScriptDialog</name><argument_list>(<argument>content::WebContents* web_contents</argument>,
                           <argument>content::RenderFrameHost* rfh</argument>,
                           <argument>content::JavaScriptDialogType dialog_type</argument>,
                           <argument>const base::string16&amp; message_text</argument>,
                           <argument>const base::string16&amp; default_prompt_text</argument>,
                           <argument>DialogClosedCallback callback</argument>,
                           <argument>bool* did_suppress_message</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>RunBeforeUnloadDialog</name><argument_list>(<argument>content::WebContents* web_contents</argument>,
                             <argument>content::RenderFrameHost* rfh</argument>,
                             <argument>bool is_reload</argument>,
                             <argument>DialogClosedCallback callback</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>CancelDialogs</name><argument_list>(<argument>content::WebContents* web_contents</argument>,
                     <argument>bool reset_state</argument>)</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>void</name> <macro><name>OnMessageBoxCallback</name><argument_list>(<argument>DialogClosedCallback callback</argument>,
                            <argument>const std::string&amp; origin</argument>,
                            <argument>int code</argument>,
                            <argument>bool checkbox_checked</argument>)</argument_list></macro></expr>;

  <expr><name>api</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>api_web_contents_</name></expr>;
  <expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name> <name>origin_counts_</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_ATOM_JAVASCRIPT_DIALOG_MANAGER_H_</comment>
</unit>
