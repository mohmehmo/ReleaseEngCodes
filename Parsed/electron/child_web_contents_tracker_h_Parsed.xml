<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/child_web_contents_tracker.h"><comment type="line">// Copyright (c) 2017 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_CHILD_WEB_CONTENTS_TRACKER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_CHILD_WEB_CONTENTS_TRACKER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/web_contents_user_data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<comment type="line">// ChildWebContentsTracker tracks child WebContents</comment>
<comment type="line">// created by native `window.open()`</comment>
<decl_stmt><decl><type><name><name>struct</name> <name>ChildWebContentsTracker</name></name></type>
    <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>ChildWebContentsTracker</name></expr></argument>&gt;</argument_list></name> <block>{
  <expr><name>GURL</name> <name>url</name></expr>;
  <expr><name>std</name><operator>::</operator><name>string</name> <name>frame_name</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>explicit</name> <call><name>ChildWebContentsTracker</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>web_contents</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>friend</name> <name>class</name> <name>content</name><operator>::</operator><name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>ChildWebContentsTracker</name></expr></argument>&gt;</argument_list></name></expr>;

  <expr><call><name>WEB_CONTENTS_USER_DATA_KEY_DECL</name><argument_list>()</argument_list></call></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>ChildWebContentsTracker</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_CHILD_WEB_CONTENTS_TRACKER_H_</comment>
</unit>
