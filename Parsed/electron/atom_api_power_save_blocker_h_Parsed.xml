<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/api/atom_api_power_save_blocker.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_API_ATOM_API_POWER_SAVE_BLOCKER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_API_ATOM_API_POWER_SAVE_BLOCKER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gin/handle.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gin/object_template_builder.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gin/wrappable.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"services/device/public/mojom/wake_lock.mojom.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>api</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>PowerSaveBlocker</name> <range>: <expr><name>public</name> <name>gin</name><operator>::</operator><name><name>Wrappable</name><argument_list type="generic">&lt;<argument><expr><name>PowerSaveBlocker</name></expr></argument>&gt;</argument_list></name> <block>{
 <expr><name>public</name><operator>:</operator>
  <specifier>static</specifier> <name>gin</name><operator>::</operator><name><name>Handle</name><argument_list type="generic">&lt;<argument><expr><name>PowerSaveBlocker</name></expr></argument>&gt;</argument_list></name> <call><name>Create</name><argument_list>(<argument><expr><name>v8</name><operator>::</operator><name>Isolate</name><operator>*</operator> <name>isolate</name></expr></argument>)</argument_list></call></expr>;

  <comment type="line">// gin::Wrappable</comment>
  <expr><name>gin</name><operator>::</operator><name>ObjectTemplateBuilder</name> <macro><name>GetObjectTemplateBuilder</name><argument_list>(
      <argument>v8::Isolate* isolate</argument>)</argument_list></macro> <name>override</name></expr>;

  <expr><specifier>static</specifier> <name>gin</name><operator>::</operator><name>WrapperInfo</name> <name>kWrapperInfo</name></expr>;

 <expr><name>protected</name><operator>:</operator>
  <name>explicit</name> <call><name>PowerSaveBlocker</name><argument_list>(<argument><expr><name>v8</name><operator>::</operator><name>Isolate</name><operator>*</operator> <name>isolate</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>PowerSaveBlocker</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>void</name> <call><name>UpdatePowerSaveBlocker</name><argument_list>()</argument_list></call></expr>;
  <expr><name>int</name> <macro><name>Start</name><argument_list>(<argument>device::mojom::WakeLockType type</argument>)</argument_list></macro></expr>;
  <expr><name>bool</name> <macro><name>Stop</name><argument_list>(<argument>int id</argument>)</argument_list></macro></expr>;
  <expr><name>bool</name> <macro><name>IsStarted</name><argument_list>(<argument>int id</argument>)</argument_list></macro></expr>;

  <expr><name>device</name><operator>::</operator><name>mojom</name><operator>::</operator><name>WakeLock</name><operator>*</operator> <call><name>GetWakeLock</name><argument_list>()</argument_list></call></expr>;

  <comment type="line">// Current wake lock level.</comment>
  <expr><name>device</name><operator>::</operator><name>mojom</name><operator>::</operator><name>WakeLockType</name> <name>current_lock_type_</name></expr>;

  <comment type="line">// Whether the wake lock is currently active.</comment>
  <expr><name>bool</name> <name>is_wake_lock_active_</name></expr>;

  <comment type="line">// Map from id to the corresponding blocker type for each request.</comment>
  <expr><name>using</name> <name>WakeLockTypeMap</name> <operator>=</operator> <name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>device</name><operator>::</operator><name>mojom</name><operator>::</operator><name>WakeLockType</name></expr></argument>&gt;</argument_list></name></expr>;
  <expr><name>WakeLockTypeMap</name> <name>wake_lock_types_</name></expr>;

  <expr><name>device</name><operator>::</operator><name>mojom</name><operator>::</operator><name>WakeLockPtr</name> <name>wake_lock_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>PowerSaveBlocker</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace api</comment>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_API_ATOM_API_POWER_SAVE_BLOCKER_H_</comment>
</unit>
