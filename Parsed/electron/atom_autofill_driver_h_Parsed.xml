<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/atom_autofill_driver.h"><comment type="line">// Copyright (c) 2019 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>TOOLKIT_VIEWS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/ui/autofill_popup.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mojo/public/cpp/bindings/associated_binding.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/api/api.mojom.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>AutofillDriver</name> <range>: <expr><name>public</name> <name>mojom</name><operator>::</operator><name>ElectronAutofillDriver</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <macro><name>AutofillDriver</name><argument_list>(<argument>content::RenderFrameHost* render_frame_host</argument>,
                 <argument>mojom::ElectronAutofillDriverAssociatedRequest request</argument>)</argument_list></macro></expr>;

  <expr><operator>~</operator><macro><name>AutofillDriver</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <expr><name>void</name> <macro><name>ShowAutofillPopup</name><argument_list>(<argument>const gfx::RectF&amp; bounds</argument>,
                         <argument>const std::vector&lt;base::string16&gt;&amp; values</argument>,
                         <argument>const std::vector&lt;base::string16&gt;&amp; labels</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>HideAutofillPopup</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <specifier>const</specifier> <name>render_frame_host_</name></expr>;

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>TOOLKIT_VIEWS</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>AutofillPopup</name></expr></argument>&gt;</argument_list></name> <name>autofill_popup_</name></expr>;
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

  <expr><name>mojo</name><operator>::</operator><name><name>AssociatedBinding</name><argument_list type="generic">&lt;<argument><expr><name>mojom</name><operator>::</operator><name>ElectronAutofillDriver</name></expr></argument>&gt;</argument_list></name> <name>binding_</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_H_</comment>
</unit>
