<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/notifications/linux/libnotify_notification.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_NOTIFICATIONS_LINUX_LIBNOTIFY_NOTIFICATION_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_NOTIFICATIONS_LINUX_LIBNOTIFY_NOTIFICATION_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"library_loaders/libnotify_loader.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/notifications/notification.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ui/base/glib/glib_signal.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>LibnotifyNotification</name> <range>: <expr><name>public</name> <name>Notification</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <call><name>LibnotifyNotification</name><argument_list>(<argument><expr><name>NotificationDelegate</name><operator>*</operator> <name>delegate</name></expr></argument>,
                        <argument><expr><name>NotificationPresenter</name><operator>*</operator> <name>presenter</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>LibnotifyNotification</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <expr><specifier>static</specifier> <name>bool</name> <call><name>Initialize</name><argument_list>()</argument_list></call></expr>;

  <comment type="line">// Notification:</comment>
  <expr><name>void</name> <macro><name>Show</name><argument_list>(<argument>const NotificationOptions&amp; options</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>Dismiss</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <call><name>CHROMEG_CALLBACK_0</name><argument_list>(<argument><expr><name>LibnotifyNotification</name></expr></argument>,
                     <argument><expr><name>void</name></expr></argument>,
                     <argument><expr><name>OnNotificationClosed</name></expr></argument>,
                     <argument><expr><name>NotifyNotification</name><operator>*</operator></expr></argument>)</argument_list></call></expr>;
  <expr><call><name>CHROMEG_CALLBACK_1</name><argument_list>(<argument><expr><name>LibnotifyNotification</name></expr></argument>,
                     <argument><expr><name>void</name></expr></argument>,
                     <argument><expr><name>OnNotificationView</name></expr></argument>,
                     <argument><expr><name>NotifyNotification</name><operator>*</operator></expr></argument>,
                     <argument><expr><name>char</name><operator>*</operator></expr></argument>)</argument_list></call></expr>;

  <expr><name>NotifyNotification</name><operator>*</operator> <name>notification_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>LibnotifyNotification</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_NOTIFICATIONS_LINUX_LIBNOTIFY_NOTIFICATION_H_</comment>
</unit>
