<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/renderer/pepper_helper.h"><comment type="line">// Copyright (c) 2012 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_RENDERER_PEPPER_HELPER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_RENDERER_PEPPER_HELPER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/compiler_specific.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/component_export.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/macros.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/renderer/render_frame_observer.h"</cpp:file></cpp:include>

<comment type="line">// This class listens for Pepper creation events from the RenderFrame and</comment>
<comment type="line">// attaches the parts required for plugin support.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>PepperHelper</name> <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>RenderFrameObserver</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>explicit</name> <call><name>PepperHelper</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>RenderFrame</name><operator>*</operator> <name>render_frame</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>PepperHelper</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <comment type="line">// RenderFrameObserver.</comment>
  <expr><name>void</name> <macro><name>DidCreatePepperPlugin</name><argument_list>(<argument>content::RendererPpapiHost* host</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>OnDestruct</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>PepperHelper</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_RENDERER_PEPPER_HELPER_H_</comment>
</unit>
