<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/special_storage_policy.h"><comment type="line">// Copyright 2014 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_SPECIAL_STORAGE_POLICY_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_SPECIAL_STORAGE_POLICY_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/browser/quota/special_storage_policy.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>SpecialStoragePolicy</name> <range>: <expr><name>public</name> <name>storage</name><operator>::</operator><name>SpecialStoragePolicy</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <call><name>SpecialStoragePolicy</name><argument_list>()</argument_list></call></expr>;

  <comment type="line">// storage::SpecialStoragePolicy implementation.</comment>
  <expr><name>bool</name> <macro><name>IsStorageProtected</name><argument_list>(<argument>const GURL&amp; origin</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>IsStorageUnlimited</name><argument_list>(<argument>const GURL&amp; origin</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>IsStorageDurable</name><argument_list>(<argument>const GURL&amp; origin</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>HasIsolatedStorage</name><argument_list>(<argument>const GURL&amp; origin</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>IsStorageSessionOnly</name><argument_list>(<argument>const GURL&amp; origin</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>HasSessionOnlyOrigins</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>network</name><operator>::</operator><name>SessionCleanupCookieStore</name><operator>::</operator><name>DeleteCookiePredicate</name>
  <macro><name>CreateDeleteCookieOnExitPredicate</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>protected</name><operator>:</operator>
  <operator>~</operator><macro><name>SpecialStoragePolicy</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_SPECIAL_STORAGE_POLICY_H_</comment>
</unit>
