<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/common/mouse_util.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_COMMON_MOUSE_UTIL_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_COMMON_MOUSE_UTIL_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/common/cursors/webcursor.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ipc/ipc_message_macros.h"</cpp:file></cpp:include>

<comment type="line">// IPC macros similar to the already existing ones in the chromium source.</comment>
<comment type="line">// We need these to listen to the cursor change IPC message while still</comment>
<comment type="line">// letting chromium handle the actual cursor change by setting handled = false.</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IPC_MESSAGE_HANDLER_CODE</name><parameter_list>(<parameter><type><name>msg_class</name></type></parameter>, <parameter><type><name>member_func</name></type></parameter>, <parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> \
  <cpp:value>IPC_MESSAGE_FORWARD_CODE(msg_class, this,                    \
                           _IpcMessageHandlerClass::member_func, code)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IPC_MESSAGE_FORWARD_CODE</name><parameter_list>(<parameter><type><name>msg_class</name></type></parameter>, <parameter><type><name>obj</name></type></parameter>, <parameter><type><name>member_func</name></type></parameter>, <parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> \
  <cpp:value>case msg_class::ID: {                                             \
    if (!msg_class::Dispatch(&amp;ipc_message__, obj, this, param__,    \
                             &amp;member_func))                         \
      ipc_message__.set_dispatch_error();                           \
    code;                                                           \
  } break;</cpp:value></cpp:define>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<comment type="line">// Returns the cursor's type as a string.</comment>
<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <call><name>CursorTypeToString</name><argument_list>(<argument><expr><specifier>const</specifier> <name>content</name><operator>::</operator><name>CursorInfo</name><operator>&amp;</operator> <name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_COMMON_MOUSE_UTIL_H_</comment>
</unit>
