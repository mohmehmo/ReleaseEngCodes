<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/window_list_observer.h"><comment type="line">// Copyright (c) 2013 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_WINDOW_LIST_OBSERVER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_WINDOW_LIST_OBSERVER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/observer_list_types.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>NativeWindow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>WindowListObserver</name> <range>: <expr><name>public</name> <name>base</name><operator>::</operator><name>CheckedObserver</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <comment type="line">// Called immediately after a window is added to the list.</comment>
  <name>virtual</name> <name>void</name> <macro><name>OnWindowAdded</name><argument_list>(<argument>NativeWindow* window</argument>)</argument_list></macro> <block>{}</block>

  <comment type="line">// Called immediately after a window is removed from the list.</comment>
  <name>virtual</name> <name>void</name> <macro><name>OnWindowRemoved</name><argument_list>(<argument>NativeWindow* window</argument>)</argument_list></macro> <block>{}</block>

  <comment type="line">// Called when a window close is cancelled by beforeunload handler.</comment>
  <name>virtual</name> <name>void</name> <macro><name>OnWindowCloseCancelled</name><argument_list>(<argument>NativeWindow* window</argument>)</argument_list></macro> <block>{}</block>

  <comment type="line">// Called immediately after all windows are closed.</comment>
  <name>virtual</name> <name>void</name> <macro><name>OnWindowAllClosed</name><argument_list>()</argument_list></macro> <block>{}</block>

 <name>protected</name><operator>:</operator>
  <operator>~</operator><macro><name>WindowListObserver</name><argument_list>()</argument_list></macro> <name>override</name> <block>{}</block></expr>
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_WINDOW_LIST_OBSERVER_H_</comment>
</unit>
