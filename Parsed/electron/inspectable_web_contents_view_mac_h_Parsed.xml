<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/inspectable_web_contents_view_mac.h"><comment type="line">// Copyright (c) 2012 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Copyright (c) 2013 Adam Roben &lt;adam@roben.org&gt;. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE-CHROMIUM file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_INSPECTABLE_WEB_CONTENTS_VIEW_MAC_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_INSPECTABLE_WEB_CONTENTS_VIEW_MAC_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/ui/inspectable_web_contents_view.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/scoped_nsobject.h"</cpp:file></cpp:include>

@<decl_stmt><decl><type><name>class</name></type> <name>AtomInspectableWebContentsView</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>InspectableWebContentsImpl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>InspectableWebContentsViewMac</name> <range>: <expr><name>public</name> <name>InspectableWebContentsView</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>explicit</name> <call><name>InspectableWebContentsViewMac</name><argument_list>(
      <argument><expr><name>InspectableWebContentsImpl</name><operator>*</operator> <name>inspectable_web_contents_impl</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>InspectableWebContentsViewMac</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <expr><name>gfx</name><operator>::</operator><name>NativeView</name> <macro><name>GetNativeView</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>ShowDevTools</name><argument_list>(<argument>bool activate</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>CloseDevTools</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>IsDevToolsViewShowing</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>IsDevToolsViewFocused</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetIsDocked</name><argument_list>(<argument>bool docked</argument>, <argument>bool activate</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetContentsResizingStrategy</name><argument_list>(
      <argument>const DevToolsContentsResizingStrategy&amp; strategy</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetTitle</name><argument_list>(<argument>const base::string16&amp; title</argument>)</argument_list></macro> <name>override</name></expr>;

  <expr><name>InspectableWebContentsImpl</name><operator>*</operator> <macro><name>inspectable_web_contents</name><argument_list>()</argument_list></macro> <block>{
    <return>return <expr><name>inspectable_web_contents_</name></expr>;</return>
  }</block>

 <name>private</name><operator>:</operator>
  <comment type="line">// Owns us.</comment>
  <name>InspectableWebContentsImpl</name><operator>*</operator> <name>inspectable_web_contents_</name></expr>;

  <expr><name>base</name><operator>::</operator><name><name>scoped_nsobject</name><argument_list type="generic">&lt;<argument><expr><name>AtomInspectableWebContentsView</name></expr></argument>&gt;</argument_list></name> <name>view_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>InspectableWebContentsViewMac</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_INSPECTABLE_WEB_CONTENTS_VIEW_MAC_H_</comment>
</unit>
