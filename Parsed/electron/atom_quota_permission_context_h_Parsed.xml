<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/atom_quota_permission_context.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_ATOM_QUOTA_PERMISSION_CONTEXT_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_ATOM_QUOTA_PERMISSION_CONTEXT_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/quota_permission_context.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/common/storage_quota_params.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>AtomQuotaPermissionContext</name> <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>QuotaPermissionContext</name> <block>{
 <expr><name>public</name><operator>:</operator></expr>
  <typedef>typedef <expr_stmt><expr><name>content</name><operator>::</operator><name>QuotaPermissionContext</name><operator>::</operator><name>QuotaPermissionResponse</name> <name>response</name></expr>;</expr_stmt></typedef>

  <call><name>AtomQuotaPermissionContext</name><argument_list>()</argument_list></call></block></expr></range></decl>;</decl_stmt>

  <comment type="line">// content::QuotaPermissionContext:</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>RequestQuotaPermission</name><argument_list>(<argument><expr><specifier>const</specifier> <name>content</name><operator>::</operator><name>StorageQuotaParams</name><operator>&amp;</operator> <name>params</name></expr></argument>,
                              <argument><expr><name>int</name> <name>render_process_id</name></expr></argument>,
                              <argument><expr><specifier>const</specifier> <name>PermissionCallback</name><operator>&amp;</operator> <name>callback</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

 <label><name>private</name>:</label>
  <expr_stmt><expr><operator>~</operator><macro><name>AtomQuotaPermissionContext</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>AtomQuotaPermissionContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

}  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_ATOM_QUOTA_PERMISSION_CONTEXT_H_</comment>
</unit>
