<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/notifications/notification_delegate.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_NOTIFICATIONS_NOTIFICATION_DELEGATE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_NOTIFICATIONS_NOTIFICATION_DELEGATE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>NotificationDelegate</name> <block>{<block_content>
 <label><name>public</name>:</label>
  <comment type="line">// The native Notification object is destroyed.</comment>
  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationDestroyed</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>

  <comment type="line">// Failed to send the notification.</comment>
  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationFailed</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>

  <comment type="line">// Notification was replied to</comment>
  <decl_stmt><decl><type><name>virtual</name> <name>void</name></type> <name>NotificationReplied</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>reply</name></expr></argument>)</argument_list> <block>{<block_content/>}</block></decl></decl_stmt>
  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationAction</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationClick</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>
  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationClosed</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>
  <function><type><name>virtual</name> <name>void</name></type> <name>NotificationDisplayed</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>

 <label><name>protected</name>:</label>
  <expr_stmt><expr><call><name>NotificationDelegate</name><argument_list>()</argument_list></call> <operator>=</operator> default</expr>;</expr_stmt>
  <expr_stmt><expr><operator>~</operator><call><name>NotificationDelegate</name><argument_list>()</argument_list></call> <operator>=</operator> default</expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_NOTIFICATIONS_NOTIFICATION_DELEGATE_H_</comment>
</unit>
