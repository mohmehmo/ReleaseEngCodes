<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/extensions/atom_navigation_ui_data.h"><comment type="line">// Copyright 2016 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_EXTENSIONS_ATOM_NAVIGATION_UI_DATA_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_EXTENSIONS_ATOM_NAVIGATION_UI_DATA_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/macros.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/navigation_ui_data.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"extensions/browser/extension_navigation_ui_data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>extensions</name> <block>{<block_content>

<comment type="line">// PlzNavigate</comment>
<comment type="line">// Contains data that is passed from the UI thread to the IO thread at the</comment>
<comment type="line">// beginning of each navigation. The class is instantiated on the UI thread,</comment>
<comment type="line">// then a copy created using Clone is passed to the content::ResourceRequestInfo</comment>
<comment type="line">// on the IO thread.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>AtomNavigationUIData</name> <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>NavigationUIData</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <call><name>AtomNavigationUIData</name><argument_list>()</argument_list></call></expr>;
  <expr><name>explicit</name> <call><name>AtomNavigationUIData</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>NavigationHandle</name><operator>*</operator> <name>navigation_handle</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>AtomNavigationUIData</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <comment type="line">// Creates a new ChromeNavigationUIData that is a deep copy of the original.</comment>
  <comment type="line">// Any changes to the original after the clone is created will not be</comment>
  <comment type="line">// reflected in the clone.  |extension_data_| is deep copied.</comment>
  <expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>content</name><operator>::</operator><name>NavigationUIData</name></expr></argument>&gt;</argument_list></name> <macro><name>Clone</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <expr><name>void</name> <call><name>SetExtensionNavigationUIData</name><argument_list>(
      <argument><expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ExtensionNavigationUIData</name></expr></argument>&gt;</argument_list></name> <name>extension_data</name></expr></argument>)</argument_list></call></expr>;

  <expr><name>ExtensionNavigationUIData</name><operator>*</operator> <macro><name>GetExtensionNavigationUIData</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
    <return>return <expr><call><name><name>extension_data_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block>

 <name>private</name><operator>:</operator>
  <comment type="line">// Manages the lifetime of optional ExtensionNavigationUIData information.</comment>
  <name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ExtensionNavigationUIData</name></expr></argument>&gt;</argument_list></name> <name>extension_data_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>AtomNavigationUIData</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace extensions</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_EXTENSIONS_ATOM_NAVIGATION_UI_DATA_H_</comment>
</unit>
