<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/printing/print_preview_message_handler.h"><comment type="line">// Copyright (c) 2018 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_PRINTING_PRINT_PREVIEW_MESSAGE_HANDLER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_PRINTING_PRINT_PREVIEW_MESSAGE_HANDLER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/memory/ref_counted_memory.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/memory/weak_ptr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"components/services/pdf_compositor/public/mojom/pdf_compositor.mojom.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/web_contents_observer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/web_contents_user_data.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/gin_helper/promise.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"v8/include/v8.h"</cpp:file></cpp:include>

<struct_decl>struct <name>PrintHostMsg_DidPreviewDocument_Params</name>;</struct_decl>
<struct_decl>struct <name>PrintHostMsg_PreviewIds</name>;</struct_decl>

<decl_stmt><decl><type><name>namespace</name></type> <name>content</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>RenderFrameHost</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<comment type="line">// Manages the print preview handling for a WebContents.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>PrintPreviewMessageHandler</name>
    <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>WebContentsObserver</name></expr></range></decl>,
      <decl><type ref="prev"/><name>public</name> <name>content</name>::<name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>PrintPreviewMessageHandler</name></expr></argument>&gt;</argument_list></name> <block>{<block_content>
 <label><name>public</name>:</label>
  <expr_stmt><expr><operator>~</operator><macro><name>PrintPreviewMessageHandler</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>void</name></type> <name>PrintToPDF</name><argument_list>(<argument><expr><name>base</name><operator>::</operator><name>DictionaryValue</name> <name>options</name></expr></argument>,
                  <argument><expr><name>gin_helper</name><operator>::</operator><name><name>Promise</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name><name>Local</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name>Value</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name> <name>promise</name></expr></argument>)</argument_list></decl>;</decl_stmt>

 <label><name>protected</name>:</label>
  <comment type="line">// content::WebContentsObserver implementation.</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>OnMessageReceived</name><argument_list>(<argument><expr><specifier>const</specifier> <name>IPC</name><operator>::</operator><name>Message</name><operator>&amp;</operator> <name>message</name></expr></argument>,
                         <argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

 <label><name>private</name>:</label>
  <expr_stmt><expr><name>friend</name> <name>class</name> <name>content</name><operator>::</operator><name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>PrintPreviewMessageHandler</name></expr></argument>&gt;</argument_list></name></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>explicit</name></type> <name>PrintPreviewMessageHandler</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>web_contents</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>void</name></type> <name>OnMetafileReadyForPrinting</name><argument_list>(
      <argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>,
      <argument><expr><specifier>const</specifier> <name>PrintHostMsg_DidPreviewDocument_Params</name><operator>&amp;</operator> <name>params</name></expr></argument>,
      <argument><expr><specifier>const</specifier> <name>PrintHostMsg_PreviewIds</name><operator>&amp;</operator> <name>ids</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>OnCompositePdfDocumentDone</name><argument_list>(<argument><expr><specifier>const</specifier> <name>PrintHostMsg_PreviewIds</name><operator>&amp;</operator> <name>ids</name></expr></argument>,
                                  <argument><expr><name>printing</name><operator>::</operator><name>mojom</name><operator>::</operator><name>PdfCompositor</name><operator>::</operator><name>Status</name> <name>status</name></expr></argument>,
                                  <argument><expr><name>base</name><operator>::</operator><name>ReadOnlySharedMemoryRegion</name> <name>region</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <function_decl><type><name>void</name></type> <name>OnPrintPreviewFailed</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>document_cookie</name></decl></parameter>,
                            <parameter><decl><type><specifier>const</specifier> <name>PrintHostMsg_PreviewIds</name><modifier>&amp;</modifier></type> <name>ids</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> <name>OnPrintPreviewCancelled</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>document_cookie</name></decl></parameter>,
                               <parameter><decl><type><specifier>const</specifier> <name>PrintHostMsg_PreviewIds</name><modifier>&amp;</modifier></type> <name>ids</name></decl></parameter>)</parameter_list>;</function_decl>

  <expr_stmt><expr><name>gin_helper</name><operator>::</operator><name><name>Promise</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name><name>Local</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name>Value</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name> <macro><name>GetPromise</name><argument_list>(<argument>int request_id</argument>)</argument_list></macro></expr>;</expr_stmt>

  <function_decl><type><name>void</name></type> <name>ResolvePromise</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>request_id</name></decl></parameter>,
                      <parameter><decl><type><name><name>scoped_refptr</name><argument_list type="generic">&lt;<argument><expr><name>base</name><operator>::</operator><name>RefCountedMemory</name></expr></argument>&gt;</argument_list></name></type> <name>data_bytes</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><name>void</name></type> <name>RejectPromise</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>request_id</name></decl></parameter>)</parameter_list>;</function_decl>

  <decl_stmt><decl><type><name>using</name></type> <name>PromiseMap</name> <init>= <expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>gin_helper</name><operator>::</operator><name><name>Promise</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name><name>Local</name><argument_list type="generic">&lt;<argument><expr><name>v8</name><operator>::</operator><name>Value</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PromiseMap</name></type> <name>promise_map_</name></decl>;</decl_stmt>

  <expr_stmt><expr><name>base</name><operator>::</operator><name><name>WeakPtrFactory</name><argument_list type="generic">&lt;<argument><expr><name>PrintPreviewMessageHandler</name></expr></argument>&gt;</argument_list></name> <name>weak_ptr_factory_</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>WEB_CONTENTS_USER_DATA_KEY_DECL</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>PrintPreviewMessageHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_PRINTING_PRINT_PREVIEW_MESSAGE_HANDLER_H_</comment>
</unit>
