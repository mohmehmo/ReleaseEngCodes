<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/views/inspectable_web_contents_view_views.h"><comment type="line">// Copyright (c) 2014 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE-CHROMIUM file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_VIEWS_INSPECTABLE_WEB_CONTENTS_VIEW_VIEWS_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_VIEWS_INSPECTABLE_WEB_CONTENTS_VIEW_VIEWS_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/compiler_specific.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"chrome/browser/devtools/devtools_contents_resizing_strategy.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/ui/inspectable_web_contents_view.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ui/views/view.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>views</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>WebView</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Widget</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>WidgetDelegate</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace views</comment>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>InspectableWebContentsImpl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>InspectableWebContentsViewViews</name> <range>: <expr><name>public</name> <name>InspectableWebContentsView</name></expr></range></decl>,
                                        <decl><type ref="prev"/><name>public</name> <name>views</name>::<name>View</name> <block>{<block_content>
 <label><name>public</name>:</label>
  <function_decl><type><name>explicit</name></type> <name>InspectableWebContentsViewViews</name><parameter_list>(
      <parameter><decl><type><name>InspectableWebContentsImpl</name><modifier>*</modifier></type> <name>inspectable_web_contents_impl</name></decl></parameter>)</parameter_list>;</function_decl>
  <expr_stmt><expr><operator>~</operator><macro><name>InspectableWebContentsViewViews</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <comment type="line">// InspectableWebContentsView:</comment>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>View</name><operator>*</operator> <macro><name>GetView</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>View</name><operator>*</operator> <macro><name>GetWebView</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>ShowDevTools</name><argument_list>(<argument><expr><name>bool</name> <name>activate</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>void</name> <macro><name>CloseDevTools</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>bool</name> <macro><name>IsDevToolsViewShowing</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>bool</name> <macro><name>IsDevToolsViewFocused</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>SetIsDocked</name><argument_list>(<argument><expr><name>bool</name> <name>docked</name></expr></argument>, <argument><expr><name>bool</name> <name>activate</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>SetContentsResizingStrategy</name><argument_list>(
      <argument><expr><specifier>const</specifier> <name>DevToolsContentsResizingStrategy</name><operator>&amp;</operator> <name>strategy</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>SetTitle</name><argument_list>(<argument><expr><specifier>const</specifier> <name>base</name><operator>::</operator><name>string16</name><operator>&amp;</operator> <name>title</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

  <function><type><name>InspectableWebContentsImpl</name><modifier>*</modifier></type> <name>inspectable_web_contents</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>inspectable_web_contents_</name></expr>;</return>
  </block_content>}</block></function>

  <expr_stmt><expr><specifier>const</specifier> <name>base</name><operator>::</operator><name>string16</name><operator>&amp;</operator> <macro><name>GetTitle</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>title_</name></expr>;</return> }</block></expr></expr_stmt>

 <label><name>private</name>:</label>
  <comment type="line">// views::View:</comment>
  <expr_stmt><expr><name>void</name> <macro><name>Layout</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <comment type="line">// Owns us.</comment>
  <decl_stmt><decl><type><name>InspectableWebContentsImpl</name><modifier>*</modifier></type> <name>inspectable_web_contents_</name></decl>;</decl_stmt>

  <expr_stmt><expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>views</name><operator>::</operator><name>Widget</name></expr></argument>&gt;</argument_list></name> <name>devtools_window_</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>WebView</name><operator>*</operator> <name>devtools_window_web_view_</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>View</name><operator>*</operator> <name>contents_web_view_</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>WebView</name><operator>*</operator> <name>devtools_web_view_</name></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>DevToolsContentsResizingStrategy</name></type> <name>strategy_</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>bool</name></type> <name>devtools_visible_</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>views</name><operator>::</operator><name>WidgetDelegate</name><operator>*</operator> <name>devtools_window_delegate_</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>base</name><operator>::</operator><name>string16</name> <name>title_</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>InspectableWebContentsViewViews</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_VIEWS_INSPECTABLE_WEB_CONTENTS_VIEW_VIEWS_H_</comment>
</unit>
