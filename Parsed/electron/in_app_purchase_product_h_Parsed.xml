<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/mac/in_app_purchase_product.h"><comment type="line">// Copyright (c) 2018 Amaplex Software, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_MAC_IN_APP_PURCHASE_PRODUCT_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_MAC_IN_APP_PURCHASE_PRODUCT_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/callback.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>in_app_purchase</name> <block>{<block_content>

<comment type="line">// --------------------------- Structures ---------------------------</comment>

<struct>struct <name>Product</name> <block>{
  <comment type="line">// Product Identifier</comment>
  <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>productIdentifier</name></expr>;</expr_stmt>

  <comment type="line">// Product Attributes</comment>
  <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>localizedDescription</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>localizedTitle</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>contentVersion</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>uint32_t</name></expr></argument>&gt;</argument_list></name> <name>contentLengths</name></expr>;</expr_stmt>

  <comment type="line">// Pricing Information</comment>
  <decl_stmt><decl><type><name>double</name></type> <name>price</name> <init>= <expr><literal type="number">0.0</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>formattedPrice</name></expr>;</expr_stmt>

  <comment type="line">// Downloadable Content Information</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>isDownloadable</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>Product</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Product</name><operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>Product</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><operator>~</operator><call><name>Product</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block>;</struct>

<comment type="line">// --------------------------- Typedefs ---------------------------</comment>

<typedef>typedef <expr_stmt><expr><name>base</name><operator>::</operator><name><name>OnceCallback</name><argument_list type="generic">&lt;<argument><expr><name>void</name><operator>(</operator><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>in_app_purchase</name><operator>::</operator><name>Product</name></expr></argument>&gt;</argument_list></name><operator>)</operator></expr></argument>&gt;</argument_list></name>
    <name>InAppPurchaseProductsCallback</name></expr>;</expr_stmt></typedef>

<comment type="line">// --------------------------- Functions ---------------------------</comment>

<decl_stmt><decl><type><name>void</name></type> <name>GetProducts</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>productIDs</name></expr></argument>,
                 <argument><expr><name>InAppPurchaseProductsCallback</name> <name>callback</name></expr></argument>)</argument_list></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace in_app_purchase</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_MAC_IN_APP_PURCHASE_PRODUCT_H_</comment>
</unit>
