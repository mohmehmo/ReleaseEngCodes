<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/atom_autofill_driver_factory.h"><comment type="line">// Copyright (c) 2019 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_FACTORY_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_FACTORY_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;memory&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unordered_map&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/callback_forward.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/web_contents_observer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/web_contents_user_data.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/api/api.mojom.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>AutofillDriver</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>AutofillDriverFactory</name>
    <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>WebContentsObserver</name></expr></range></decl>,
      <decl><type ref="prev"/><name>public</name> <name>content</name>::<name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>AutofillDriverFactory</name></expr></argument>&gt;</argument_list></name> <block>{<block_content>
 <label><name>public</name>:</label>
  <typedef>typedef <expr_stmt><expr><name>base</name><operator>::</operator><name><name>OnceCallback</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>AutofillDriver</name></expr></argument>&gt;</argument_list></name><operator>(</operator><operator>)</operator></expr></argument>&gt;</argument_list></name>
      <name>CreationCallback</name></expr>;</expr_stmt></typedef>

  <expr_stmt><expr><operator>~</operator><macro><name>AutofillDriverFactory</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>BindAutofillDriver</name><argument_list>(
      <argument><expr><name>mojom</name><operator>::</operator><name>ElectronAutofillDriverAssociatedRequest</name> <name>request</name></expr></argument>,
      <argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <comment type="line">// content::WebContentsObserver:</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>RenderFrameDeleted</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>DidFinishNavigation</name><argument_list>(
      <argument><expr><name>content</name><operator>::</operator><name>NavigationHandle</name><operator>*</operator> <name>navigation_handle</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>AutofillDriver</name><modifier>*</modifier></type> <name>DriverForFrame</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>AddDriverForFrame</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>,
                         <argument><expr><name>CreationCallback</name> <name>factory_method</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>void</name></type> <name>DeleteDriverForFrame</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator> <name>render_frame_host</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <function_decl><type><name>void</name></type> <name>CloseAllPopups</name><parameter_list>()</parameter_list>;</function_decl>

  <expr_stmt><expr><call><name>WEB_CONTENTS_USER_DATA_KEY_DECL</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

 <label><name>private</name>:</label>
  <decl_stmt><decl><type><name>explicit</name></type> <name>AutofillDriverFactory</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>web_contents</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <expr_stmt><expr><name>friend</name> <name>class</name> <name>content</name><operator>::</operator><name><name>WebContentsUserData</name><argument_list type="generic">&lt;<argument><expr><name>AutofillDriverFactory</name></expr></argument>&gt;</argument_list></name></expr>;</expr_stmt>

  <expr_stmt><expr><name>std</name><operator>::</operator><name><name>unordered_map</name><argument_list type="generic">&lt;<argument><expr><name>content</name><operator>::</operator><name>RenderFrameHost</name><operator>*</operator></expr></argument>, <argument><expr><name>std</name><operator>::</operator><name><name>unique_ptr</name><argument_list type="generic">&lt;<argument><expr><name>AutofillDriver</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name>
      <name>driver_map_</name></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_ATOM_AUTOFILL_DRIVER_FACTORY_H_</comment>
</unit>
