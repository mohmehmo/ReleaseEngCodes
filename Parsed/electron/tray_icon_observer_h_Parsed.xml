<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/tray_icon_observer.h"><comment type="line">// Copyright (c) 2014 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_TRAY_ICON_OBSERVER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_TRAY_ICON_OBSERVER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/observer_list_types.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>gfx</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Rect</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Point</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace gfx</comment>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>TrayIconObserver</name> <range>: <expr><name>public</name> <name>base</name><operator>::</operator><name>CheckedObserver</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>virtual</name> <name>void</name> <macro><name>OnClicked</name><argument_list>(<argument>const gfx::Rect&amp; bounds</argument>,
                         <argument>const gfx::Point&amp; location</argument>,
                         <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDoubleClicked</name><argument_list>(<argument>const gfx::Rect&amp; bounds</argument>, <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnBalloonShow</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnBalloonClicked</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnBalloonClosed</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnRightClicked</name><argument_list>(<argument>const gfx::Rect&amp; bounds</argument>, <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDrop</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDropFiles</name><argument_list>(<argument>const std::vector&lt;std::string&gt;&amp; files</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDropText</name><argument_list>(<argument>const std::string&amp; text</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDragEntered</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDragExited</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnDragEnded</name><argument_list>()</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnMouseEntered</name><argument_list>(<argument>const gfx::Point&amp; location</argument>, <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnMouseExited</name><argument_list>(<argument>const gfx::Point&amp; location</argument>, <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>
  <name>virtual</name> <name>void</name> <macro><name>OnMouseMoved</name><argument_list>(<argument>const gfx::Point&amp; location</argument>, <argument>int modifiers</argument>)</argument_list></macro> <block>{}</block>

 <name>protected</name><operator>:</operator>
  <operator>~</operator><macro><name>TrayIconObserver</name><argument_list>()</argument_list></macro> <name>override</name> <block>{}</block></expr>
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_TRAY_ICON_OBSERVER_H_</comment>
</unit>
