<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/cocoa/atom_touch_bar.h"><comment type="line">// Copyright (c) 2017 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_COCOA_ATOM_TOUCH_BAR_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_COCOA_ATOM_TOUCH_BAR_H_</name></cpp:macro></cpp:define>

<cpp:empty>#import &lt;Cocoa/Cocoa.h&gt;</cpp:empty>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/scoped_nsobject.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/native_window.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/gin_helper/persistent_dictionary.h"</cpp:file></cpp:include>

@<decl_stmt><decl><type><name>interface</name></type> <name>AtomTouchBar</name> <range>: <expr><name><name>NSObject</name> <argument_list type="generic">&lt;<argument><expr><name>NSScrubberDelegate</name></expr></argument>,
                                    <argument><expr><name>NSScrubberDataSource</name></expr></argument>,
                                    <argument><expr><name>NSScrubberFlowLayoutDelegate</name></expr></argument>&gt;</argument_list></name> <block>{
 @<expr><name>protected</name>
  <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name></expr></argument>&gt;</argument_list></name> <name>ordered_settings_</name></expr>;
  <expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name>string</name></expr></argument>, <argument><expr><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name></expr></argument>&gt;</argument_list></name> <name>settings_</name></expr>;
  <expr><name><name>id</name><argument_list type="generic">&lt;<argument><expr><name>NSTouchBarDelegate</name></expr></argument>&gt;</argument_list></name> <name>delegate_</name></expr>;
  <expr><name>electron</name><operator>::</operator><name>NativeWindow</name><operator>*</operator> <name>window_</name></expr>;
}</block>

<operator>-</operator> <operator>(</operator><name>id</name><operator>)</operator><name>initWithDelegate</name><operator>:</operator><operator>(</operator><name><name>id</name><argument_list type="generic">&lt;<argument><expr><name>NSTouchBarDelegate</name></expr></argument>&gt;</argument_list></name><operator>)</operator><name>delegate</name>
                <name>window</name><operator>:</operator><operator>(</operator><name>electron</name><operator>::</operator><name>NativeWindow</name><operator>*</operator><operator>)</operator><name>window</name>
              <name>settings</name><operator>:</operator><operator>(</operator><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name></expr></argument>&gt;</argument_list></name><operator>)</operator><name>settings</name></expr></range></decl>;</decl_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBar</name><operator>*</operator><operator>)</operator><name>makeTouchBar</name> <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBar</name><operator>*</operator><operator>)</operator><name>touchBarFromItemIdentifiers</name><operator>:</operator><operator>(</operator><name>NSMutableArray</name><operator>*</operator><operator>)</operator><name>items</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSMutableArray</name><operator>*</operator><operator>)</operator><name>identifiersFromSettings</name><operator>:</operator>
    <operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator><operator>)</operator><name>settings</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>refreshTouchBarItem</name><operator>:</operator><operator>(</operator><name>NSTouchBar</name><operator>*</operator><operator>)</operator><name>touchBar</name>
                         <name>id</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator><operator>)</operator><name>item_id</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>addNonDefaultTouchBarItems</name><operator>:</operator>
    <operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator><operator>)</operator><name>items</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>setEscapeTouchBarItem</name><operator>:</operator><operator>(</operator><name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>)</operator><name>item</name>
                  <name>forTouchBar</name><operator>:</operator><operator>(</operator><name>NSTouchBar</name><operator>*</operator><operator>)</operator><name>touchBar</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>idFromIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
                   <name>withPrefix</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>prefix</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItemIdentifier</name><operator>)</operator><name>identifierFromID</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator><operator>)</operator><name>item_id</name>
                                        <name>type</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator><operator>)</operator><name>typere</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>bool</name><operator>)</operator><name>hasItemWithID</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator><operator>)</operator><name>item_id</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSColor</name><operator>*</operator><operator>)</operator><name>colorFromHexColorString</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator><operator>)</operator><name>colorString</name></expr>;</expr_stmt>

<comment type="line">// Selector actions</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>buttonAction</name><operator>:</operator><operator>(</operator><name>id</name><operator>)</operator><name>sender</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>colorPickerAction</name><operator>:</operator><operator>(</operator><name>id</name><operator>)</operator><name>sender</name> <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>sliderAction</name><operator>:</operator><operator>(</operator><name>id</name><operator>)</operator><name>sender</name> <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line">// Helpers to create touch bar items</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeItemForIdentifier</name><operator>:</operator><operator>(</operator><name>NSTouchBarItemIdentifier</name><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeButtonForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                    <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeLabelForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                   <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeColorPickerForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                         <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeSliderForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                    <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makePopoverForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                     <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSTouchBarItem</name><operator>*</operator><operator>)</operator><name>makeGroupForID</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>id</name>
                   <name>withIdentifier</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>identifier</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line">// Helpers to update touch bar items</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateButton</name><operator>:</operator><operator>(</operator><name>NSCustomTouchBarItem</name><operator>*</operator><operator>)</operator><name>item</name>
        <name>withSettings</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>&amp;</operator><operator>)</operator><name>settings</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateLabel</name><operator>:</operator><operator>(</operator><name>NSCustomTouchBarItem</name><operator>*</operator><operator>)</operator><name>item</name>
       <name>withSettings</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>&amp;</operator><operator>)</operator><name>settings</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateColorPicker</name><operator>:</operator><operator>(</operator><name>NSColorPickerTouchBarItem</name><operator>*</operator><operator>)</operator><name>item</name>
             <name>withSettings</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>&amp;</operator><operator>)</operator><name>settings</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateSlider</name><operator>:</operator><operator>(</operator><name>NSSliderTouchBarItem</name><operator>*</operator><operator>)</operator><name>item</name>
        <name>withSettings</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>&amp;</operator><operator>)</operator><name>settings</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updatePopover</name><operator>:</operator><operator>(</operator><name>NSPopoverTouchBarItem</name><operator>*</operator><operator>)</operator><name>item</name>
         <name>withSettings</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>gin_helper</name><operator>::</operator><name>PersistentDictionary</name><operator>&amp;</operator><operator>)</operator><name>settings</name>
    <call><name>API_AVAILABLE</name><argument_list>(<argument><expr><call><name>macosx</name><argument_list>(<argument><expr><literal type="number">10.12.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

@<expr><name>end</name></expr>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_COCOA_ATOM_TOUCH_BAR_H_</comment>
</unit>
