<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/mac/atom_application.h"><comment type="line">// Copyright (c) 2013 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/callback.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/scoped_nsobject.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/scoped_sending_event.h"</cpp:file></cpp:include>

<cpp:empty>#import &lt;AVFoundation/AVFoundation.h&gt;</cpp:empty>
<cpp:empty>#import &lt;LocalAuthentication/LocalAuthentication.h&gt;</cpp:empty>

@<decl_stmt><decl><type><name>interface</name></type> <name>AtomApplication</name> <range>: <expr><name><name>NSApplication</name> <argument_list type="generic">&lt;<argument><expr><name>CrAppProtocol</name></expr></argument>,
                                            <argument><expr><name>CrAppControlProtocol</name></expr></argument>,
                                            <argument><expr><name>NSUserActivityDelegate</name></expr></argument>&gt;</argument_list></name> <block>{
 @<expr><name>private</name>
  <name>BOOL</name> <name>handlingSendEvent_</name></expr>;
  <expr><name>base</name><operator>::</operator><name><name>scoped_nsobject</name><argument_list type="generic">&lt;<argument><expr><name>NSUserActivity</name></expr></argument>&gt;</argument_list></name> <name>currentActivity_</name></expr>;
  <expr><name>NSCondition</name><operator>*</operator> <name>handoffLock_</name></expr>;
  <expr><name>BOOL</name> <name>updateReceived_</name></expr>;
  <expr><name>base</name><operator>::</operator><name><name>Callback</name><argument_list type="generic">&lt;<argument><expr><name>bool</name><operator>(</operator><operator>)</operator></expr></argument>&gt;</argument_list></name> <name>shouldShutdown_</name></expr>;
}</block>

<operator>+</operator> <operator>(</operator><name>AtomApplication</name><operator>*</operator><operator>)</operator><name>sharedApplication</name></expr></range></decl>;</decl_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>setShutdownHandler</name><operator>:</operator><operator>(</operator><name>base</name><operator>::</operator><name><name>Callback</name><argument_list type="generic">&lt;<argument><expr><name>bool</name><operator>(</operator><operator>)</operator></expr></argument>&gt;</argument_list></name><operator>)</operator><name>handler</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>registerURLHandler</name></expr>;</expr_stmt>

<comment type="line">// CrAppProtocol:</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>BOOL</name><operator>)</operator><name>isHandlingSendEvent</name></expr>;</expr_stmt>

<comment type="line">// CrAppControlProtocol:</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>setHandlingSendEvent</name><operator>:</operator><operator>(</operator><name>BOOL</name><operator>)</operator><name>handlingSendEvent</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSUserActivity</name><operator>*</operator><operator>)</operator><name>getCurrentActivity</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>setCurrentActivity</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>type</name>
              <name>withUserInfo</name><operator>:</operator><operator>(</operator><name>NSDictionary</name><operator>*</operator><operator>)</operator><name>userInfo</name>
            <name>withWebpageURL</name><operator>:</operator><operator>(</operator><name>NSURL</name><operator>*</operator><operator>)</operator><name>webpageURL</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>invalidateCurrentActivity</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>resignCurrentActivity</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateCurrentActivity</name><operator>:</operator><operator>(</operator><name>NSString</name><operator>*</operator><operator>)</operator><name>type</name>
                 <name>withUserInfo</name><operator>:</operator><operator>(</operator><name>NSDictionary</name><operator>*</operator><operator>)</operator><name>userInfo</name></expr>;</expr_stmt>

@<expr><name>end</name></expr>
</unit>
