<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/common/asar/scoped_temporary_file.h"><comment type="line">// Copyright (c) 2014 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_COMMON_ASAR_SCOPED_TEMPORARY_FILE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_COMMON_ASAR_SCOPED_TEMPORARY_FILE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/files/file_path.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>base</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>File</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>asar</name> <block>{<block_content>

<comment type="line">// An object representing a temporary file that should be cleaned up when this</comment>
<comment type="line">// object goes out of scope.  Note that since deletion occurs during the</comment>
<comment type="line">// destructor, no further error handling is possible if the directory fails to</comment>
<comment type="line">// be deleted.  As a result, deletion is not guaranteed by this class.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>ScopedTemporaryFile</name> <block>{<block_content>
 <label><name>public</name>:</label>
  <expr_stmt><expr><call><name>ScopedTemporaryFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>virtual</name> <operator>~</operator><call><name>ScopedTemporaryFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// Init an empty temporary file with a certain extension.</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>Init</name><argument_list>(<argument><expr><specifier>const</specifier> <name>base</name><operator>::</operator><name>FilePath</name><operator>::</operator><name>StringType</name><operator>&amp;</operator> <name>ext</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <comment type="line">// Init an temporary file and fill it with content of |path|.</comment>
  <decl_stmt><decl><type><name>bool</name></type> <name>InitFromFile</name><argument_list>(<argument><expr><name>base</name><operator>::</operator><name>File</name><operator>*</operator> <name>src</name></expr></argument>,
                    <argument><expr><specifier>const</specifier> <name>base</name><operator>::</operator><name>FilePath</name><operator>::</operator><name>StringType</name><operator>&amp;</operator> <name>ext</name></expr></argument>,
                    <argument><expr><name>uint64_t</name> <name>offset</name></expr></argument>,
                    <argument><expr><name>uint64_t</name> <name>size</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <expr_stmt><expr><name>base</name><operator>::</operator><name>FilePath</name> <macro><name>path</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>path_</name></expr>;</return> }</block></expr></expr_stmt>

 <label><name>private</name>:</label>
  <expr_stmt><expr><name>base</name><operator>::</operator><name>FilePath</name> <name>path_</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>ScopedTemporaryFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace asar</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_COMMON_ASAR_SCOPED_TEMPORARY_FILE_H_</comment>
</unit>
