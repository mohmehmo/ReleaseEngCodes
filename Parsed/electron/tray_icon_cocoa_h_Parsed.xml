<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/tray_icon_cocoa.h"><comment type="line">// Copyright (c) 2014 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_TRAY_ICON_COCOA_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_TRAY_ICON_COCOA_H_</name></cpp:macro></cpp:define>

<cpp:empty>#import &lt;Cocoa/Cocoa.h&gt;</cpp:empty>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/scoped_nsobject.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/ui/tray_icon.h"</cpp:file></cpp:include>

@<decl_stmt><decl><type><name>class</name></type> <name>AtomMenuController</name></decl>;</decl_stmt>
@<decl_stmt><decl><type><name>class</name></type> <name>StatusItemView</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>TrayIconCocoa</name> <range>: <expr><name>public</name> <name>TrayIcon</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <call><name>TrayIconCocoa</name><argument_list>()</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>TrayIconCocoa</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <expr><name>void</name> <macro><name>SetImage</name><argument_list>(<argument>const gfx::Image&amp; image</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetPressedImage</name><argument_list>(<argument>const gfx::Image&amp; image</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetToolTip</name><argument_list>(<argument>const std::string&amp; tool_tip</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetTitle</name><argument_list>(<argument>const std::string&amp; title</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>std</name><operator>::</operator><name>string</name> <macro><name>GetTitle</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetIgnoreDoubleClickEvents</name><argument_list>(<argument>bool ignore</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>GetIgnoreDoubleClickEvents</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <call><name>PopUpOnUI</name><argument_list>(<argument><expr><name>AtomMenuModel</name><operator>*</operator> <name>menu_model</name></expr></argument>)</argument_list></call></expr>;
  <expr><name>void</name> <macro><name>PopUpContextMenu</name><argument_list>(<argument>const gfx::Point&amp; pos</argument>,
                        <argument>AtomMenuModel* menu_model</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>SetContextMenu</name><argument_list>(<argument>AtomMenuModel* menu_model</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>gfx</name><operator>::</operator><name>Rect</name> <macro><name>GetBounds</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <comment type="line">// Electron custom view for NSStatusItem.</comment>
  <name>base</name><operator>::</operator><name><name>scoped_nsobject</name><argument_list type="generic">&lt;<argument><expr><name>StatusItemView</name></expr></argument>&gt;</argument_list></name> <name>status_item_view_</name></expr>;

  <comment type="line">// Status menu shown when right-clicking the system icon.</comment>
  <expr><name>base</name><operator>::</operator><name><name>scoped_nsobject</name><argument_list type="generic">&lt;<argument><expr><name>AtomMenuController</name></expr></argument>&gt;</argument_list></name> <name>menu_</name></expr>;

  <expr><name>base</name><operator>::</operator><name><name>WeakPtrFactory</name><argument_list type="generic">&lt;<argument><expr><name>TrayIconCocoa</name></expr></argument>&gt;</argument_list></name> <name>weak_factory_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>TrayIconCocoa</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_TRAY_ICON_COCOA_H_</comment>
</unit>
