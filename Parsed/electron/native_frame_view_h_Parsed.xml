<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/views/native_frame_view.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_VIEWS_NATIVE_FRAME_VIEW_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_VIEWS_NATIVE_FRAME_VIEW_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ui/views/window/native_frame_view.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>NativeWindow</name></decl>;</decl_stmt>

<comment type="line">// Like the views::NativeFrameView, but returns the min/max size from the</comment>
<comment type="line">// NativeWindowViews.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>NativeFrameView</name> <range>: <expr><name>public</name> <name>views</name><operator>::</operator><name>NativeFrameView</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <specifier>static</specifier> <specifier>const</specifier> <name>char</name> <name><name>kViewClassName</name><index>[]</index></name></expr>;
  <expr><call><name>NativeFrameView</name><argument_list>(<argument><expr><name>NativeWindow</name><operator>*</operator> <name>window</name></expr></argument>, <argument><expr><name>views</name><operator>::</operator><name>Widget</name><operator>*</operator> <name>widget</name></expr></argument>)</argument_list></call></expr>;

 <expr><name>protected</name><operator>:</operator>
  <comment type="line">// views::View:</comment>
  <name>gfx</name><operator>::</operator><name>Size</name> <macro><name>GetMinimumSize</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;
  <expr><name>gfx</name><operator>::</operator><name>Size</name> <macro><name>GetMaximumSize</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;
  <expr><specifier>const</specifier> <name>char</name><operator>*</operator> <macro><name>GetClassName</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>NativeWindow</name><operator>*</operator> <name>window_</name></expr>;  <comment type="line">// weak ref.</comment>

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>NativeFrameView</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_VIEWS_NATIVE_FRAME_VIEW_H_</comment>
</unit>
