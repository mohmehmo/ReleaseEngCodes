<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/app/atom_library_main.h"><comment type="line">// Copyright (c) 2013 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_APP_ATOM_LIBRARY_MAIN_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_APP_ATOM_LIBRARY_MAIN_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"build/build_config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"electron/buildflags/buildflags.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>OS_MACOSX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<macro><name>__attribute__</name><argument_list>(<argument>(visibility(<literal type="string">"default"</literal>))</argument>)</argument_list></macro> <function_decl><type><name>int</name></type> <name>AtomMain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>BUILDFLAG</name><argument_list>(<argument><expr><name>ENABLE_RUN_AS_NODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>__attribute__</name><argument_list>(<argument>(visibility(<literal type="string">"default"</literal>))</argument>)</argument_list></macro> <function_decl><type><name>int</name></type> <name>AtomInitializeICUandStartNode</name><parameter_list>(
    <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>,
    <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// OS_MACOSX</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_APP_ATOM_LIBRARY_MAIN_H_</comment>
</unit>
