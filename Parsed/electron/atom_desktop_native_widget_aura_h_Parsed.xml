<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/win/atom_desktop_native_widget_aura.h"><comment type="line">// Copyright (c) 2017 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_WIN_ATOM_DESKTOP_NATIVE_WIDGET_AURA_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_WIN_ATOM_DESKTOP_NATIVE_WIDGET_AURA_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/browser/native_window_views.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ui/views/widget/desktop_aura/desktop_native_widget_aura.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>views</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>DesktopWindowTreeHost</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>AtomDesktopNativeWidgetAura</name> <range>: <expr><name>public</name> <name>views</name><operator>::</operator><name>DesktopNativeWidgetAura</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>explicit</name> <call><name>AtomDesktopNativeWidgetAura</name><argument_list>(<argument><expr><name>NativeWindowViews</name><operator>*</operator> <name>native_window_view</name></expr></argument>)</argument_list></call></expr>;

  <comment type="line">// views::DesktopNativeWidgetAura:</comment>
  <expr><name>void</name> <macro><name>InitNativeWidget</name><argument_list>(<argument>views::Widget::InitParams params</argument>)</argument_list></macro> <name>override</name></expr>;

  <comment type="line">// internal::NativeWidgetPrivate:</comment>
  <expr><name>void</name> <macro><name>Activate</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>void</name> <macro><name>OnWindowActivated</name><argument_list>(<argument>wm::ActivationChangeObserver::ActivationReason reason</argument>,
                         <argument>aura::Window* gained_active</argument>,
                         <argument>aura::Window* lost_active</argument>)</argument_list></macro> <name>override</name></expr>;

  <expr><name>NativeWindowViews</name><operator>*</operator> <name>native_window_view_</name></expr>;

  <comment type="line">// Owned by DesktopNativeWidgetAura.</comment>
  <expr><name>views</name><operator>::</operator><name>DesktopWindowTreeHost</name><operator>*</operator> <name>desktop_window_tree_host_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>AtomDesktopNativeWidgetAura</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_WIN_ATOM_DESKTOP_NATIVE_WIDGET_AURA_H_</comment>
</unit>
