<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/ui/cocoa/atom_bundle_mover.h"><comment type="line">// Copyright (c) 2017 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_UI_COCOA_ATOM_BUNDLE_MOVER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_UI_COCOA_ATOM_BUNDLE_MOVER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/mac/foundation_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/gin_helper/error_thrower.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>gin</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Arguments</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<comment type="line">// Possible bundle movement conflicts</comment>
<decl_stmt><decl><type><name><name>enum</name> <name>class</name></name></type> <name>BundlerMoverConflictType</name> <block>{<block_content> <expr_stmt><expr><name>EXISTS</name></expr><operator>,</operator> <expr><name>EXISTS_AND_RUNNING</name></expr></expr_stmt> </block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>AtomBundleMover</name> <block>{<block_content>
 <label><name>public</name>:</label>
  <decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>Move</name><argument_list>(<argument><expr><name>gin_helper</name><operator>::</operator><name>ErrorThrower</name> <name>thrower</name></expr></argument>, <argument><expr><name>gin</name><operator>::</operator><name>Arguments</name><operator>*</operator> <name>args</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>IsCurrentAppInApplicationsFolder</name><parameter_list>()</parameter_list>;</function_decl>

 <label><name>private</name>:</label>
  <decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>ShouldContinueMove</name><argument_list>(<argument><expr><name>gin_helper</name><operator>::</operator><name>ErrorThrower</name> <name>thrower</name></expr></argument>,
                                 <argument><expr><name>BundlerMoverConflictType</name> <name>type</name></expr></argument>,
                                 <argument><expr><name>gin</name><operator>::</operator><name>Arguments</name><operator>*</operator> <name>args</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>IsInApplicationsFolder</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>bundlePath</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>NSString</name><modifier>*</modifier></type> <name>ContainingDiskImageDevice</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>bundlePath</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Relaunch</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>destinationPath</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>NSString</name><modifier>*</modifier></type> <name>ShellQuotedString</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>string</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>CopyBundle</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>srcPath</name></decl></parameter>, <parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>dstPath</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>AuthorizedInstall</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>srcPath</name></decl></parameter>,
                                <parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>dstPath</name></decl></parameter>,
                                <parameter><decl><type><name>bool</name><modifier>*</modifier></type> <name>canceled</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>IsApplicationAtPathRunning</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>bundlePath</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>DeleteOrTrash</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>path</name></decl></parameter>)</parameter_list>;</function_decl>
  <function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>Trash</name><parameter_list>(<parameter><decl><type><name>NSString</name><modifier>*</modifier></type> <name>path</name></decl></parameter>)</parameter_list>;</function_decl>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_UI_COCOA_ATOM_BUNDLE_MOVER_H_</comment>
</unit>
