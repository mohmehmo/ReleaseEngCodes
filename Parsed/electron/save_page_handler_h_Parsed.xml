<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/api/save_page_handler.h"><comment type="line">// Copyright (c) 2015 GitHub, Inc.</comment>
<comment type="line">// Use of this source code is governed by the MIT license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_API_SAVE_PAGE_HANDLER_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_API_SAVE_PAGE_HANDLER_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"components/download/public/common/download_item.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/download_manager.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"content/public/browser/save_page_type.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"shell/common/gin_helper/promise.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"v8/include/v8.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>base</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>FilePath</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>content</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>WebContents</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>electron</name> <block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>api</name> <block>{<block_content>

<comment type="line">// A self-destroyed class for handling save page request.</comment>
<decl_stmt><decl><type><name>class</name></type> <name>SavePageHandler</name> <range>: <expr><name>public</name> <name>content</name><operator>::</operator><name>DownloadManager</name><operator>::</operator><name>Observer</name></expr></range></decl>,
                        <decl><type ref="prev"/><name>public</name> <name>download</name>::<name>DownloadItem</name>::<name>Observer</name> <block>{<block_content>
 <label><name>public</name>:</label>
  <expr_stmt><expr><call><name>SavePageHandler</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>web_contents</name></expr></argument>,
                  <argument><expr><name>gin_helper</name><operator>::</operator><name><name>Promise</name><argument_list type="generic">&lt;<argument><expr><name>void</name></expr></argument>&gt;</argument_list></name> <name>promise</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><operator>~</operator><macro><name>SavePageHandler</name><argument_list>()</argument_list></macro> <name>override</name></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>bool</name></type> <name>Handle</name><argument_list>(<argument><expr><specifier>const</specifier> <name>base</name><operator>::</operator><name>FilePath</name><operator>&amp;</operator> <name>full_path</name></expr></argument>,
              <argument><expr><specifier>const</specifier> <name>content</name><operator>::</operator><name>SavePageType</name><operator>&amp;</operator> <name>save_type</name></expr></argument>)</argument_list></decl>;</decl_stmt>

 <label><name>private</name>:</label>
  <decl_stmt><decl><type><name>void</name></type> <name>Destroy</name><argument_list>(<argument><expr><name>download</name><operator>::</operator><name>DownloadItem</name><operator>*</operator> <name>item</name></expr></argument>)</argument_list></decl>;</decl_stmt>

  <comment type="line">// content::DownloadManager::Observer:</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>OnDownloadCreated</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>DownloadManager</name><operator>*</operator> <name>manager</name></expr></argument>,
                         <argument><expr><name>download</name><operator>::</operator><name>DownloadItem</name><operator>*</operator> <name>item</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

  <comment type="line">// download::DownloadItem::Observer:</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>OnDownloadUpdated</name><argument_list>(<argument><expr><name>download</name><operator>::</operator><name>DownloadItem</name><operator>*</operator> <name>item</name></expr></argument>)</argument_list> <name>override</name></decl>;</decl_stmt>

  <expr_stmt><expr><name>content</name><operator>::</operator><name>WebContents</name><operator>*</operator> <name>web_contents_</name></expr>;</expr_stmt>  <comment type="line">// weak</comment>
  <expr_stmt><expr><name>gin_helper</name><operator>::</operator><name><name>Promise</name><argument_list type="generic">&lt;<argument><expr><name>void</name></expr></argument>&gt;</argument_list></name> <name>promise_</name></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace api</comment>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace electron</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_API_SAVE_PAGE_HANDLER_H_</comment>
</unit>
