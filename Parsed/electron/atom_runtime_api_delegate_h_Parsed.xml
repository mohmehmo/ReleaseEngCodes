<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/mmm/Projects/electron/shell/browser/extensions/api/runtime/atom_runtime_api_delegate.h"><comment type="line">// Copyright 2014 The Chromium Authors. All rights reserved.</comment>
<comment type="line">// Use of this source code is governed by a BSD-style license that can be</comment>
<comment type="line">// found in the LICENSE file.</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SHELL_BROWSER_EXTENSIONS_API_RUNTIME_ATOM_RUNTIME_API_DELEGATE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHELL_BROWSER_EXTENSIONS_API_RUNTIME_ATOM_RUNTIME_API_DELEGATE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"base/macros.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"extensions/browser/api/runtime/runtime_api_delegate.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>content</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>BrowserContext</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace content</comment>

<decl_stmt><decl><type><name>namespace</name></type> <name>extensions</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>AtomRuntimeAPIDelegate</name> <range>: <expr><name>public</name> <name>RuntimeAPIDelegate</name> <block>{
 <expr><name>public</name><operator>:</operator>
  <name>explicit</name> <call><name>AtomRuntimeAPIDelegate</name><argument_list>(<argument><expr><name>content</name><operator>::</operator><name>BrowserContext</name><operator>*</operator> <name>browser_context</name></expr></argument>)</argument_list></call></expr>;
  <expr><operator>~</operator><macro><name>AtomRuntimeAPIDelegate</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

  <comment type="line">// RuntimeAPIDelegate implementation.</comment>
  <expr><name>void</name> <macro><name>AddUpdateObserver</name><argument_list>(<argument>UpdateObserver* observer</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>RemoveUpdateObserver</name><argument_list>(<argument>UpdateObserver* observer</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>ReloadExtension</name><argument_list>(<argument>const std::string&amp; extension_id</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>CheckForUpdates</name><argument_list>(<argument>const std::string&amp; extension_id</argument>,
                       <argument>const UpdateCheckCallback&amp; callback</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>void</name> <macro><name>OpenURL</name><argument_list>(<argument>const GURL&amp; uninstall_url</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>GetPlatformInfo</name><argument_list>(<argument>api::runtime::PlatformInfo* info</argument>)</argument_list></macro> <name>override</name></expr>;
  <expr><name>bool</name> <macro><name>RestartDevice</name><argument_list>(<argument>std::string* error_message</argument>)</argument_list></macro> <name>override</name></expr>;

 <expr><name>private</name><operator>:</operator>
  <name>content</name><operator>::</operator><name>BrowserContext</name><operator>*</operator> <name>browser_context_</name></expr>;

  <expr><call><name>DISALLOW_COPY_AND_ASSIGN</name><argument_list>(<argument><expr><name>AtomRuntimeAPIDelegate</name></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>  <comment type="line">// namespace extensions</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// SHELL_BROWSER_EXTENSIONS_API_RUNTIME_ATOM_RUNTIME_API_DELEGATE_H_</comment>
</unit>
