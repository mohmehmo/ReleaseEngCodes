<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="ArduinoSerialPlotterProtocol_8md" kind="file" language="Markdown">
    <compoundname>ArduinoSerialPlotterProtocol.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>SerialPlotter<sp/>protocol</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">One<sp/>message<sp/>can<sp/>consist<sp/>of<sp/>multiply<sp/>parts.</highlight></codeline>
<codeline><highlight class="normal">One<sp/>part<sp/>can<sp/>consist<sp/>of<sp/>one<sp/>label,<sp/>one<sp/>label<sp/>and<sp/>a<sp/>value<sp/>or<sp/>only<sp/>a<sp/>value.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/><sp/>|<sp/><sp/>|<sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>---<sp/>|<sp/>---<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>End<sp/>of<sp/>message<sp/>symbol<sp/>|<sp/>\n<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Part<sp/>separator<sp/>symbols<sp/>|<sp/>&apos;<sp/>&apos;(space),<sp/>&apos;\t&apos;(tab),<sp/>&apos;,&apos;(comma)<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label-value<sp/>separator<sp/>symbol<sp/>|<sp/>:<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Valid<sp/>messages<sp/>are</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Labels<sp/>and<sp/>value<sp/>messages:</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|-------------------|----|-------------------|-----|-------------------|----|<sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label<sp/>:<sp/>Value<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label<sp/>1<sp/>:<sp/>Value<sp/>1<sp/>|<sp/>\t<sp/>|<sp/>Label<sp/>2<sp/>:<sp/>Value<sp/>2<sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label<sp/>1<sp/>:<sp/>Value<sp/>1<sp/>|<sp/>\t<sp/>|<sp/>Label<sp/>2<sp/>:<sp/>Value<sp/>2<sp/>|<sp/>...<sp/>|<sp/>Label<sp/>n<sp/>:<sp/>Value<sp/>n<sp/>|<sp/>\n<sp/>|<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">##<sp/>Label<sp/>only<sp/>messages</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|-----------|----|-----------|-----|----------|----|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label:<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label<sp/>1<sp/>:<sp/>|<sp/>\t<sp/>|<sp/>Label<sp/>2<sp/>:<sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n<sp/>|<sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>Label<sp/>1<sp/>:<sp/>|<sp/>\t<sp/>|<sp/>Label<sp/>2<sp/><sp/><sp/>|<sp/>...<sp/>|<sp/>Label<sp/>n:<sp/>|<sp/>\n<sp/>|<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>is<sp/>a<sp/>special<sp/>case,<sp/>the<sp/>CSV<sp/>header<sp/>style.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|-------|----|---------|-----|---------|----|</highlight></codeline>
<codeline><highlight class="normal">|Label<sp/>1|<sp/>\t<sp/>|<sp/>Label<sp/>2<sp/>|<sp/>...<sp/>|<sp/>Label<sp/>n<sp/>|<sp/>\n<sp/>|<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">But<sp/>in<sp/>this<sp/>format,<sp/>labels<sp/>consisting<sp/>of<sp/>only<sp/>numbers<sp/>are<sp/>not<sp/>recognised<sp/>as<sp/>labels.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">It<sp/>is<sp/>safer<sp/>to<sp/>just<sp/>use<sp/>the<sp/>normal<sp/>label<sp/>only<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Value<sp/>only<sp/>messages<sp/>Value</highlight></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>not<sp/>recommended<sp/>if<sp/>you<sp/>using<sp/>a<sp/>board<sp/>with<sp/>USB<sp/>to<sp/>UART<sp/>converter.</highlight></codeline>
<codeline><highlight class="normal">Because<sp/>when<sp/>the<sp/>label<sp/>is<sp/>sent,<sp/>before<sp/>you<sp/>had<sp/>the<sp/>SerialPlotter<sp/>opened,<sp/>then<sp/>the<sp/>label/labels<sp/>get/gets<sp/>never<sp/>set.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---------|----|---------|-----|---------|----|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Value<sp/>1<sp/>|<sp/>\t<sp/>|<sp/>Value<sp/>2<sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\n<sp/>|<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>Value<sp/>1<sp/>|<sp/>\t<sp/>|<sp/>Value<sp/>2<sp/>|<sp/>...<sp/>|<sp/>Value<sp/>n<sp/>|<sp/>\n<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Examples</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Single<sp/>Trace<sp/>without<sp/>label</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>plots<sp/>on<sp/>line<sp/>on<sp/>serial<sp/>plotter<sp/>without<sp/>setting<sp/>a<sp/>label</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```ino</highlight></codeline>
<codeline><highlight class="normal">void<sp/>setup()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.begin(9600);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>loop()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>sensorValue1<sp/>=<sp/>analogRead(A0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.println(sensorValue1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>output<sp/>looks<sp/>like<sp/>this</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">10\n</highlight></codeline>
<codeline><highlight class="normal">11\n</highlight></codeline>
<codeline><highlight class="normal">12\n</highlight></codeline>
<codeline><highlight class="normal">13\n</highlight></codeline>
<codeline><highlight class="normal">14\n</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Single<sp/>Trace<sp/>with<sp/>label</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>sends<sp/>the<sp/>label<sp/>once<sp/>in<sp/>the<sp/>setup<sp/>routine.<sp/>Afterwards<sp/>only<sp/>the<sp/>value<sp/>is<sp/>send.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```ino</highlight></codeline>
<codeline><highlight class="normal">void<sp/>setup()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.begin(9600);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.println(&quot;Label<sp/>1:&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>loop()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>sensorValue1<sp/>=<sp/>analogRead(A0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.println(sensorValue1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>output<sp/>looks<sp/>like<sp/>this</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:\n</highlight></codeline>
<codeline><highlight class="normal">10\n</highlight></codeline>
<codeline><highlight class="normal">11\n</highlight></codeline>
<codeline><highlight class="normal">12\n</highlight></codeline>
<codeline><highlight class="normal">13\n</highlight></codeline>
<codeline><highlight class="normal">14\n</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Single<sp/>Trace<sp/>with<sp/>label<sp/>send<sp/>every<sp/>time</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>sends<sp/>the<sp/>label<sp/>every<sp/>time<sp/>together<sp/>with<sp/>the<sp/>value.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```ino</highlight></codeline>
<codeline><highlight class="normal">void<sp/>setup()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.begin(9600);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>loop()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>sensorValue1<sp/>=<sp/>analogRead(A0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.print(&quot;Label<sp/>1:&quot;);<sp/>Serial.println(sensorValue1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>output<sp/>looks<sp/>like<sp/>this</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:10\n</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:11\n</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:12\n</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:13\n</highlight></codeline>
<codeline><highlight class="normal">Label<sp/>1:14\n</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Two<sp/>Traces<sp/>with<sp/>label<sp/>send<sp/>every<sp/>time</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>sends<sp/>two<sp/>values<sp/>together<sp/>with<sp/>the<sp/>labels.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```ino</highlight></codeline>
<codeline><highlight class="normal">void<sp/>setup()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.begin(9600);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">float<sp/>avg<sp/>=<sp/>0;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>loop()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>sensorValue1<sp/>=<sp/>analogRead(A0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>lable<sp/>and<sp/>value<sp/>seperated<sp/>by<sp/>&apos;:&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.print(&quot;Value:&quot;);<sp/>Serial.print(sensorValue1);</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>avg<sp/>=<sp/>(avg<sp/>*<sp/>4<sp/>+<sp/>analogRead(A0))<sp/>/<sp/>5.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>part<sp/>devider<sp/>&apos;\t&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.print(&quot;\t&quot;);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>the<sp/>second<sp/>lable<sp/>and<sp/>value</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Serial.print(&quot;AVG5:&quot;);<sp/>Serial.println(avg);</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>output<sp/>looks<sp/>like<sp/>this</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Value:377<sp/><sp/><sp/>AVG5:431.01</highlight></codeline>
<codeline><highlight class="normal">Value:338<sp/><sp/><sp/>AVG5:408.81</highlight></codeline>
<codeline><highlight class="normal">Value:392<sp/><sp/><sp/>AVG5:395.85</highlight></codeline>
<codeline><highlight class="normal">Value:583<sp/><sp/><sp/>AVG5:427.28</highlight></codeline>
<codeline><highlight class="normal">Value:221<sp/><sp/><sp/>AVG5:383.42</highlight></codeline>
<codeline><highlight class="normal">Value:195<sp/><sp/><sp/>AVG5:343.74</highlight></codeline>
<codeline><highlight class="normal">Value:202<sp/><sp/><sp/>AVG5:314.19</highlight></codeline>
<codeline><highlight class="normal">Value:209<sp/><sp/><sp/>AVG5:292.15</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="build/shared/ArduinoSerialPlotterProtocol.md"/>
  </compounddef>
</doxygen>
