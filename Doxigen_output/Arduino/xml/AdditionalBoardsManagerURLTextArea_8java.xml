<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="AdditionalBoardsManagerURLTextArea_8java" kind="file" language="Java">
    <compoundname>AdditionalBoardsManagerURLTextArea.java</compoundname>
    <innerclass refid="classcc_1_1arduino_1_1view_1_1preferences_1_1AdditionalBoardsManagerURLTextArea" prot="public">cc::arduino::view::preferences::AdditionalBoardsManagerURLTextArea</innerclass>
    <innernamespace refid="namespacecc_1_1arduino_1_1view_1_1preferences">cc::arduino::view::preferences</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Arduino.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2015<sp/>Arduino<sp/>LLC<sp/>(http://www.arduino.cc/)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Arduino<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>special<sp/>exception,<sp/>you<sp/>may<sp/>use<sp/>this<sp/>file<sp/>as<sp/>part<sp/>of<sp/>a<sp/>free<sp/>software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>library<sp/>without<sp/>restriction.<sp/><sp/>Specifically,<sp/>if<sp/>other<sp/>files<sp/>instantiate</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>templates<sp/>or<sp/>use<sp/>macros<sp/>or<sp/>inline<sp/>functions<sp/>from<sp/>this<sp/>file,<sp/>or<sp/>you<sp/>compile</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>this<sp/>file<sp/>and<sp/>link<sp/>it<sp/>with<sp/>other<sp/>files<sp/>to<sp/>produce<sp/>an<sp/>executable,<sp/>this</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>file<sp/>does<sp/>not<sp/>by<sp/>itself<sp/>cause<sp/>the<sp/>resulting<sp/>executable<sp/>to<sp/>be<sp/>covered<sp/>by</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License.<sp/><sp/>This<sp/>exception<sp/>does<sp/>not<sp/>however</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>invalidate<sp/>any<sp/>other<sp/>reasons<sp/>why<sp/>the<sp/>executable<sp/>file<sp/>might<sp/>be<sp/>covered<sp/>by</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">cc.arduino.view.preferences;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>processing.app.Base;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.awt.*;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.awt.event.ActionEvent;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.awt.event.ActionListener;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.awt.event.WindowEvent;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Arrays;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.Collectors;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>processing.app.I18n.tr;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classcc_1_1arduino_1_1view_1_1preferences_1_1AdditionalBoardsManagerURLTextArea" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcc_1_1arduino_1_1view_1_1preferences_1_1AdditionalBoardsManagerURLTextArea" kindref="compound">AdditionalBoardsManagerURLTextArea</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>javax.swing.JDialog<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ActionListener<sp/>onOkListener;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcc_1_1arduino_1_1view_1_1preferences_1_1AdditionalBoardsManagerURLTextArea" kindref="compound">AdditionalBoardsManagerURLTextArea</ref>(Window<sp/>parent)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>super(parent);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>initComponents();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>setLocationRelativeTo(parent);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classprocessing_1_1app_1_1Base" kindref="compound">Base</ref>.<ref refid="classprocessing_1_1app_1_1Base_1a165074f6266e143018402442d8400824" kindref="member">registerWindowCloseKeys</ref>(getRootPane(),<sp/>this::cancelActionPerformed);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unchecked&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;editor-fold<sp/>defaultstate=&quot;collapsed&quot;<sp/>desc=&quot;Generated<sp/>Code&quot;&gt;//GEN-BEGIN:initComponents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initComponents()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>javax.swing.JScrollPane<sp/>jScrollPane1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JScrollPane();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>javax.swing.JButton<sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JButton();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>javax.swing.JButton<sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JButton();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>javax.swing.JLabel<sp/>jLabel1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JLabel();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JLabel();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>setTitle(tr(</highlight><highlight class="stringliteral">&quot;Additional<sp/>Boards<sp/>Manager<sp/>URLs&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>setModal(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalBoardsManagerURLs.setColumns(20);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalBoardsManagerURLs.setRows(5);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalBoardsManagerURLs.setName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>NOI18N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>jScrollPane1.setViewportView(additionalBoardsManagerURLs);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>cancel.setText(tr(</highlight><highlight class="stringliteral">&quot;Cancel&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cancel.addActionListener(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>java.awt.event.ActionListener()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>void<sp/>actionPerformed(java.awt.event.ActionEvent<sp/>evt)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancelActionPerformed(evt);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>ok.setText(tr(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ok.addActionListener(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>java.awt.event.ActionListener()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>void<sp/>actionPerformed(java.awt.event.ActionEvent<sp/>evt)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>okActionPerformed(evt);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>jLabel1.setText(tr(</highlight><highlight class="stringliteral">&quot;Enter<sp/>additional<sp/>URLs,<sp/>one<sp/>for<sp/>each<sp/>row&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel.setText(tr(</highlight><highlight class="stringliteral">&quot;Click<sp/>for<sp/>a<sp/>list<sp/>of<sp/>unofficial<sp/>boards<sp/>support<sp/>URLs&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel.setCursor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel.addMouseListener(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>java.awt.event.MouseAdapter()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>void<sp/>mouseClicked(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unofficialListURLLabelMouseClicked(evt);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseExited(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unofficialListURLLabelMouseExited(evt);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseEntered(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unofficialListURLLabelMouseEntered(evt);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>javax.swing.GroupLayout<sp/>layout<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.GroupLayout(getContentPane());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>getContentPane().setLayout(layout);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>layout.setHorizontalGroup(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createSequentialGroup()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addContainerGap()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(jScrollPane1,<sp/>javax.swing.GroupLayout.DEFAULT_SIZE,<sp/>538,<sp/>Short.MAX_VALUE)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,<sp/>layout.createSequentialGroup()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGap(0,<sp/>0,<sp/>Short.MAX_VALUE)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(ok)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGap(7,<sp/>7,<sp/>7)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(cancel))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createSequentialGroup()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(unofficialListURLLabel)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(jLabel1))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGap(0,<sp/>0,<sp/>Short.MAX_VALUE)))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addContainerGap())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>layout.setVerticalGroup(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createSequentialGroup()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addContainerGap()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(jLabel1)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(jScrollPane1)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(unofficialListURLLabel)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(ok)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addComponent(cancel))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addContainerGap())</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>pack();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//<sp/>&lt;/editor-fold&gt;//GEN-END:initComponents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cancelActionPerformed(java.awt.event.ActionEvent<sp/>evt)<sp/>{</highlight><highlight class="comment">//GEN-FIRST:event_cancelActionPerformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatchEvent(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WindowEvent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>WindowEvent.WINDOW_CLOSING));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//GEN-LAST:event_cancelActionPerformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>okActionPerformed(java.awt.event.ActionEvent<sp/>evt)<sp/>{</highlight><highlight class="comment">//GEN-FIRST:event_okActionPerformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ActionEvent<sp/>actionEvent<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ActionEvent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ActionEvent.ACTION_PERFORMED,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>onOkListener.actionPerformed(actionEvent);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelActionPerformed(evt);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//GEN-LAST:event_okActionPerformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unofficialListURLLabelMouseEntered(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight><highlight class="comment">//GEN-FIRST:event_unofficialListURLLabelMouseEntered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel.setForeground(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color(0,<sp/>0,<sp/>140));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//GEN-LAST:event_unofficialListURLLabelMouseEntered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unofficialListURLLabelMouseExited(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight><highlight class="comment">//GEN-FIRST:event_unofficialListURLLabelMouseExited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>unofficialListURLLabel.setForeground(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color(76,<sp/>76,<sp/>76));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//GEN-LAST:event_unofficialListURLLabelMouseExited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unofficialListURLLabelMouseClicked(java.awt.event.MouseEvent<sp/>evt)<sp/>{</highlight><highlight class="comment">//GEN-FIRST:event_unofficialListURLLabelMouseClicked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Base.openURL(</highlight><highlight class="stringliteral">&quot;https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//GEN-LAST:event_unofficialListURLLabelMouseClicked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setText(String<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>Collection&lt;String&gt;<sp/>urls<sp/>=<sp/>splitAndTrim(text,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>additionalBoardsManagerURLs.setText(urls.stream().filter(s<sp/>-&gt;<sp/>s<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">).collect(Collectors.joining(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Collection&lt;String&gt;<sp/>splitAndTrim(String<sp/>text,<sp/>String<sp/>separator)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Collection&lt;String&gt;<sp/>urls<sp/>=<sp/>Arrays.asList(text.split(separator));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urls.stream().map(String::trim).filter(url<sp/>-&gt;<sp/>!url.isEmpty()).collect(Collectors.toList());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/>getText()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Collection&lt;String&gt;<sp/>urls<sp/>=<sp/>splitAndTrim(additionalBoardsManagerURLs.getText(),<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urls.stream().filter(s<sp/>-&gt;<sp/>s<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">).collect(Collectors.joining(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>declaration<sp/>-<sp/>do<sp/>not<sp/>modify//GEN-BEGIN:variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>javax.swing.JTextArea<sp/>additionalBoardsManagerURLs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>javax.swing.JTextArea();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>javax.swing.JLabel<sp/>unofficialListURLLabel;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>variables<sp/>declaration//GEN-END:variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onOk(ActionListener<sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this.onOkListener<sp/>=<sp/>listener;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="app/src/cc/arduino/view/preferences/AdditionalBoardsManagerURLTextArea.java"/>
  </compounddef>
</doxygen>
