<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="__collections_8py" kind="file" language="Python">
    <compoundname>_collections.py</compoundname>
    <innerclass refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer" prot="public">requests::packages::urllib3::_collections::RecentlyUsedContainer</innerclass>
    <innernamespace refid="namespacerequests_1_1packages_1_1urllib3_1_1__collections">requests::packages::urllib3::_collections</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>urllib3/_collections.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2008-2012<sp/>Andrey<sp/>Petrov<sp/>and<sp/>contributors<sp/>(see<sp/>CONTRIBUTORS.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>module<sp/>is<sp/>part<sp/>of<sp/>urllib3<sp/>and<sp/>is<sp/>released<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>MIT<sp/>License:<sp/>http://www.opensource.org/licenses/mit-license.php</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MutableMapping</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>threading<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Lock</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>Python<sp/>2.7+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OrderedDict</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.packages.ordered_dict<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OrderedDict</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">__all__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;RecentlyUsedContainer&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">_Null<sp/>=<sp/>object()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer" kindref="compound">RecentlyUsedContainer</ref>(MutableMapping):</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Provides<sp/>a<sp/>thread-safe<sp/>dict-like<sp/>container<sp/>which<sp/>maintains<sp/>up<sp/>to</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``maxsize``<sp/>keys<sp/>while<sp/>throwing<sp/>away<sp/>the<sp/>least-recently-used<sp/>keys<sp/>beyond</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``maxsize``.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>maxsize:</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>recent<sp/>elements<sp/>to<sp/>retain.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>dispose_func:</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Every<sp/>time<sp/>an<sp/>item<sp/>is<sp/>evicted<sp/>from<sp/>the<sp/>container,</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``dispose_func(value)``<sp/>is<sp/>called.<sp/><sp/>Callback<sp/>which<sp/>will<sp/>get<sp/>called</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ContainerCls<sp/>=<sp/>OrderedDict</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>maxsize=10,<sp/>dispose_func=None):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1ab9649f028048be5e2a88cc283dd08a10" kindref="member">_maxsize</ref><sp/>=<sp/>maxsize</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref><sp/>=<sp/>dispose_func</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref><sp/>=<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a42b9abe916fa2dba4c175c2d5eb96dc8" kindref="member">ContainerCls</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref><sp/>=<sp/>Lock()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__getitem__(self,<sp/>key):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Re-insert<sp/>the<sp/>item,<sp/>moving<sp/>it<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>eviction<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.pop(key)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>[key]<sp/>=<sp/>item</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__setitem__(self,<sp/>key,<sp/>value):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evicted_value<sp/>=<sp/>_Null</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Possibly<sp/>evict<sp/>the<sp/>existing<sp/>value<sp/>of<sp/>&apos;key&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evicted_value<sp/>=<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.get(key,<sp/>_Null)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>[key]<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>we<sp/>didn&apos;t<sp/>evict<sp/>an<sp/>existing<sp/>value,<sp/>we<sp/>might<sp/>have<sp/>to<sp/>evict<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>least<sp/>recently<sp/>used<sp/>item<sp/>from<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>)<sp/>&gt;<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1ab9649f028048be5e2a88cc283dd08a10" kindref="member">_maxsize</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_key,<sp/>evicted_value<sp/>=<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.popitem(last=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>evicted_value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>_Null:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref>(evicted_value)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__delitem__(self,<sp/>key):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.pop(key)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref>(value)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__len__(self):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__iter__(self):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&apos;Iteration<sp/>over<sp/>this<sp/>class<sp/>is<sp/>unlikely<sp/>to<sp/>be<sp/>threadsafe.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">clear(self):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Copy<sp/>pointers<sp/>to<sp/>all<sp/>values,<sp/>then<sp/>wipe<sp/>the<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>under<sp/>Python<sp/>2,<sp/>this<sp/>copies<sp/>the<sp/>list<sp/>of<sp/>values<sp/>twice<sp/>:-|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>list(self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.values())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.clear()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a5c5293fd451536a3af6c6d9eb7ea9e1d" kindref="member">dispose_func</ref>(value)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">keys(self):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a34cb0988b98c13b6f9f51c37be33b945" kindref="member">_lock</ref>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classrequests_1_1packages_1_1urllib3_1_1__collections_1_1RecentlyUsedContainer_1a57c6a45f8ea5dd00f8506757dd6adfe1" kindref="member">_container</ref>.keys()</highlight></codeline>
    </programlisting>
    <location file="arduino-core/src/processing/app/i18n/python/requests/packages/urllib3/_collections.py"/>
  </compounddef>
</doxygen>
